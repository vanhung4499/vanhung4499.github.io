import{_ as t,g as s,o as r,c as n,e as o,h as e,f as l,w as p,a}from"./app-BRTHG7K9.js";const c={},d=a('<h1 id="【模型接入】stable-diffusion" tabindex="-1"><a class="header-anchor" href="#【模型接入】stable-diffusion"><span>【模型接入】Stable Diffusion</span></a></h1><p>项目基于 Spring AI 提供的 <a href="https://github.com/spring-projects/spring-ai/tree/main/models/spring-ai-stability-ai" target="_blank" rel="noopener noreferrer"><code>spring-ai-stability-ai</code></a>，实现 Stable Diffusion 的接入，提供 AI 作图的功能。</p><p>对应的 Spring AI 客户端为 <a href="https://docs.spring.io/spring-ai/reference/api/image/stabilityai-image.html" target="_blank" rel="noopener noreferrer">StabilityAiImageClient</a>。</p><h2 id="_1-申请密钥-私有部署" tabindex="-1"><a class="header-anchor" href="#_1-申请密钥-私有部署"><span><a href="#_1-%E7%94%B3%E8%AF%B7%E5%AF%86%E9%92%A5-%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2">#</a> 1. 申请密钥（私有部署）</span></a></h2><p>由于 <a href="https://github.com/CompVis/stable-diffusion" target="_blank" rel="noopener noreferrer">Stable Diffusion</a> 是开源模型，所以可以私有化部署。</p><p>而它的开源它的公司 Stability AI，提供了对应的云服务，可以直接使用。</p><p>下面，我们来看看这两种方式怎么申请（部署）？</p><p>友情提示：一般情况下，如果是为了体验 AI 作图，建议直接采用“方式一：申请 Stability 密钥”，更加简单方便！</p><h3 id="_1-1-方式一-申请-stability-密钥" tabindex="-1"><a class="header-anchor" href="#_1-1-方式一-申请-stability-密钥"><span><a href="#_1-1-%E6%96%B9%E5%BC%8F%E4%B8%80-%E7%94%B3%E8%AF%B7-stability-%E5%AF%86%E9%92%A5">#</a> 1.1 方式一：申请 Stability 密钥</span></a></h3><p>① 访问 <a href="https://stability.ai/" target="_blank" rel="noopener noreferrer">Stability AI</a>，注册账号。</p><p>② 访问 <a href="https://platform.stability.ai/account/keys" target="_blank" rel="noopener noreferrer">API Keys</a> ，获得一个 API Key。</p><figure><img src="https://doc.iocoder.cn/img/AI手册/模型接入/Stability-创建密钥.png" alt="创建密钥" tabindex="0" loading="lazy"><figcaption>创建密钥</figcaption></figure><hr><p>申请完成后，可以在我们系统的 [AI 大模型 -&gt; 控制台 -&gt; API 密钥] 菜单，进行密钥的配置。只需要填写“密钥”，不需要填写“自定义 API URL”（因为 Spring AI 默认官方地址）。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/AI手册/模型接入/Stable-Diffusion-官方.png" alt="官方的密钥配置" tabindex="0" loading="lazy"><figcaption>官方的密钥配置</figcaption></figure><p>ps：默认官方赠送了 25 Credits，够生成几百张图。如果用完的情况下，要么再申请一个账号，要么参考 <a href="https://juejin.cn/post/7361762150010945570" target="_blank" rel="noopener noreferrer">《Stable Diffusion 3 会员 API 充值教学》</a> 充值。</p><h3 id="_1-2-方式二-私有化部署" tabindex="-1"><a class="header-anchor" href="#_1-2-方式二-私有化部署"><span><a href="#_1-2-%E6%96%B9%E5%BC%8F%E4%BA%8C-%E7%A7%81%E6%9C%89%E5%8C%96%E9%83%A8%E7%BD%B2">#</a> 1.2 方式二：私有化部署</span></a></h3><p>友情提示：虽然 Stable Diffusion 可以私有化部署，但是 Spring AI 没兼容私有化部署后的 HTTP API！</p><p>这样就导致，即使私有化部署，项目还是无法对接使用！等后续我们看看，怎么可以兼容一下！！！</p><p>① 方式一：参考 <a href="https://github.com/AbdBarho/stable-diffusion-webui-docker/wiki/Setup" target="_blank" rel="noopener noreferrer">https://github.com/AbdBarho/stable-diffusion-webui-docker/wiki/Setup</a> 文档，使用 Docker 部署。不过要注意，如果你是 MacOS + 苹果芯片，不支持！</p><p>② 方式二：参考 <a href="https://devwl.com/posts/stable-diffusion-webui/" target="_blank" rel="noopener noreferrer">https://devwl.com/posts/stable-diffusion-webui/</a> 文档，直接本机部署。我是 MacOS + 苹果芯片，已经跑通！如果你要开启 API 功能，启动命令得是</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>./webui.sh --api</span></span></code></pre></div><p>这样，你在 <a href="http://127.0.0.1:7860/docs" target="_blank" rel="noopener noreferrer">http://127.0.0.1:7860/docs</a> 地址，就可以看到 <code>/sdapi/v1/txt2img</code> 文字生成图片 API。不过正如我前面所说的，Spring AI 没兼容该接口！！！</p><p>③ 方式三：参考 <a href="https://www.cnblogs.com/Serverless/p/18101931" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/Serverless/p/18101931</a> 文档，使用 Serverless 部署。不过我没试过，只是提供个资料哈~</p><h3 id="_1-3-补充说明" tabindex="-1"><a class="header-anchor" href="#_1-3-补充说明"><span><a href="#_1-3-%E8%A1%A5%E5%85%85%E8%AF%B4%E6%98%8E">#</a> 1.3 补充说明</span></a></h3>',25),h=a(`<h2 id="_2-如何使用" tabindex="-1"><a class="header-anchor" href="#_2-如何使用"><span><a href="#_2-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8">#</a> 2. 如何使用？</span></a></h2><p>① 如果你的项目里需要直接通过 <code>@Resource</code> 注入 OpenAiImageClient 等对象，需要把 <code>application.yaml</code> 配置文件里的 <code>spring.ai.stabilityai</code> 配置项，替换成你的！</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>spring:</span></span>
<span class="line"><span>  ai:</span></span>
<span class="line"><span>    stabilityai:</span></span>
<span class="line"><span>      api-key: sk-e53UqbboF8QJCscYvzJscJxJXoFcFg4iJjl1oqgE7baJETmx # 你的密钥</span></span></code></pre></div><p>② 如果你希望使用 [AI 大模型 -&gt; 控制台 -&gt; API 密钥] 菜单的密钥配置，则可以通过 AiApiKeyService 的 <code>#getImageModel(...)</code> 方法，获取对应的模型对象。</p><hr><p>① 和 ② 这两者的后续使用，就是标准的 Spring AI 客户端的使用，调用对应的方法即可。</p><p>另外，StabilityAiImageModelTests 里有对应的测试用例，可以参考。</p>`,7);function f(b,g){const i=s("RouteLink");return r(),n("div",null,[d,o("p",null,[e("后续，你就可以参考 "),l(i,{to:"/ai/image/"},{default:p(()=>[e("《AI 绘画》")]),_:1}),e(" ，实现文字生成图片。")]),h])}const _=t(c,[["render",f],["__file","stable-diffusion.html.vue"]]),m=JSON.parse('{"path":"/project/rouyi-vue-pro/ai/stable-diffusion.html","title":"【模型接入】Stable Diffusion","lang":"en-US","frontmatter":{"title":"【模型接入】Stable Diffusion","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":143,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 申请密钥（私有部署）","slug":"_1-申请密钥-私有部署","link":"#_1-申请密钥-私有部署","children":[{"level":3,"title":"# 1.1 方式一：申请 Stability 密钥","slug":"_1-1-方式一-申请-stability-密钥","link":"#_1-1-方式一-申请-stability-密钥","children":[]},{"level":3,"title":"# 1.2 方式二：私有化部署","slug":"_1-2-方式二-私有化部署","link":"#_1-2-方式二-私有化部署","children":[]},{"level":3,"title":"# 1.3 补充说明","slug":"_1-3-补充说明","link":"#_1-3-补充说明","children":[]}]},{"level":2,"title":"# 2. 如何使用？","slug":"_2-如何使用","link":"#_2-如何使用","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":2.84,"words":852},"filePathRelative":"project/rouyi-vue-pro/ai/stable-diffusion.md","localizedDate":"July 7, 2024"}');export{_ as comp,m as data};
