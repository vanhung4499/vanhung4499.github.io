import{_ as n,o as s,c as a,d as i}from"./app-D5FncmNl.js";const e={},l=i(`<h2 id="muc-đich" tabindex="-1"><a class="header-anchor" href="#muc-đich"><span>Mục đích</span></a></h2><p><strong>Facade Pattern</strong> là một mẫu thiết kế cấu trúc, cung cấp một giao diện đơn giản để truy cập vào một nhóm giao diện con trong một hệ thống phức tạp. Mẫu thiết kế này định nghĩa một giao diện cao cấp, giúp việc sử dụng các giao diện con trong hệ thống dễ dàng hơn.</p><ul><li>Facade Pattern cung cấp một cách tiếp cận thuận tiện cho các chức năng của một nhóm giao diện con, mà không thay đổi hoặc mở rộng chức năng của chúng.</li><li>Facade Pattern triển khai một mối quan hệ lỏng lẻo giữa hệ thống con và khách hàng.</li><li>Facade Pattern không đóng gói các lớp hệ thống con, chỉ cung cấp một giao diện đơn giản. Nếu ứng dụng yêu cầu, nó không hạn chế khách hàng sử dụng các lớp hệ thống con. Do đó, nó có thể lựa chọn giữa tính dễ sử dụng và tính chung chung của hệ thống.</li></ul><h2 id="truong-hop-su-dung" tabindex="-1"><a class="header-anchor" href="#truong-hop-su-dung"><span>Trường hợp sử dụng</span></a></h2><ul><li>Nếu bạn cần một giao diện trực tiếp đến một nhóm chức năng phức tạp trong hệ thống, và giao diện này có giới hạn chức năng, bạn có thể sử dụng Facade Pattern.</li><li>Nếu bạn cần tổ chức hệ thống thành một cấu trúc nhiều tầng, bạn có thể sử dụng Facade Pattern.</li></ul><h2 id="cau-truc" tabindex="-1"><a class="header-anchor" href="#cau-truc"><span>Cấu trúc</span></a></h2><figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20231006165447.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="mo-ta-cau-truc" tabindex="-1"><a class="header-anchor" href="#mo-ta-cau-truc"><span>Mô tả cấu trúc</span></a></h3><ol><li><p><strong>Facade</strong> (Giao diện): Cung cấp một cách tiếp cận thuận tiện để truy cập vào các chức năng của một nhóm giao diện con. Nó hiểu cách chuyển hướng yêu cầu từ khách hàng và biết cách thực hiện tất cả các hoạt động liên quan.</p></li><li><p>Tạo <strong>Facade bổ sung</strong> (Additional Facade) có thể tránh tình trạng gộp nhiều chức năng không liên quan vào một Facade duy nhất, biến nó thành một cấu trúc phức tạp hơn. Cả khách hàng và các Facade khác đều có thể sử dụng Facade bổ sung.</p></li><li><p><strong>Hệ thống con phức tạp</strong> (Complex Subsystem) bao gồm nhiều đối tượng khác nhau. Để thực hiện công việc có ý nghĩa, bạn phải hiểu chi tiết triển khai của hệ thống con, chẳng hạn như khởi tạo đúng thứ tự các đối tượng và cung cấp dữ liệu đúng định dạng cho chúng.</p><p>Lớp hệ thống con không nhận thức sự tồn tại của Facade, chúng hoạt động trong hệ thống và có thể tương tác trực tiếp với nhau.</p></li><li><p><strong>Khách hàng</strong> (Client) sử dụng Facade thay vì gọi trực tiếp các phương thức của hệ thống con.</p></li></ol><h3 id="mau-ma-cau-truc" tabindex="-1"><a class="header-anchor" href="#mau-ma-cau-truc"><span>Mẫu mã cấu trúc</span></a></h3><p><strong>Facade</strong>: Hiểu về chức năng của mỗi lớp hệ thống con, chịu trách nhiệm phân phối yêu cầu của khách hàng cho các hệ thống con để xử lý.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Class1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> op1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Method1&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Class2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> op2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Method2&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Class3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> op3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Method3&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Subsystem Classes</strong>: Thực hiện chức năng của hệ thống con. Xử lý công việc được giao bởi đối tượng Facade mà không nhận biết sự tồn tại của nó.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Facade</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Class1</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> one </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Class1</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Class2</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> two </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Class2</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Class3</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> three </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Class3</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> op1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Facade op1()&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        one</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">op1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> op2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Facade op2()&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        two</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">op2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> op3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Facade op3()&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        three</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">op3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Facade Method()&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        three</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">op3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        two</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">op2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        one</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">op1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【Khách hàng】</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> FacadePattern</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Facade</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> facade</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Facade</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        facade</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        facade</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">op1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>【Kết quả】</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>Facade Method()</span></span>
<span class="line"><span>Method3</span></span>
<span class="line"><span>Method2</span></span>
<span class="line"><span>Method1</span></span>
<span class="line"><span>Facade op1()</span></span>
<span class="line"><span>Method1</span></span></code></pre></div><h2 id="pseudocode" tabindex="-1"><a class="header-anchor" href="#pseudocode"><span>Pseudocode</span></a></h2><p>Trong ví dụ này, mẫu <strong>Facade</strong> giúp đơn giản hóa giao tiếp giữa khách hàng và framework chuyển đổi video phức tạp.</p><figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20231006165901.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>Bạn có thể tạo một lớp facade để đóng gói các chức năng cần thiết và ẩn đi mã code khác, từ đó không cần phải tương tác trực tiếp với hàng chục lớp trong framework. Cấu trúc này cũng giảm thiểu tác động khi nâng cấp hoặc thay đổi framework trong tương lai, chỉ cần chỉnh sửa cài đặt của phương thức facade trong chương trình.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Ở đây có một số lớp trong framework chuyển đổi video phức tạp của bên thứ ba. Chúng ta không biết mã code bên trong nên không thể đơn giản hóa chúng.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> VideoFile</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> OggCompressionCodec</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> MPEG4CompressionCodec</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> CodecFactory</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> BitrateReader</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> AudioMixer</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Để ẩn đi sự phức tạp của framework trong một giao diện đơn giản, chúng ta tạo ra một lớp facade. Đây là một sự cân nhắc giữa tính năng và tính đơn giản.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> VideoConverter</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method convert(filename, format):File is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        file = new VideoFile(filename)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        sourceCodec = new CodecFactory.extract(file)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        if (format == &quot;mp4&quot;)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            destinationCodec = new MPEG4CompressionCodec()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        else</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            destinationCodec = new OggCompressionCodec()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        buffer = BitrateReader.read(filename, sourceCodec)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        result = BitrateReader.convert(buffer, destinationCodec)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        result = (new AudioMixer()).fix(result)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        return new File(result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Lớp trong ứng dụng không phụ thuộc vào hàng ngàn lớp trong framework phức tạp. Tương tự, nếu bạn quyết định thay đổi framework, bạn chỉ cần viết lại lớp facade.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Application</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method main() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        convertor = new VideoConverter()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        mp4 = convertor.convert(&quot;funny-cats-video.ogg&quot;, &quot;mp4&quot;)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        mp4.save()</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vi-du" tabindex="-1"><a class="header-anchor" href="#vi-du"><span>Ví dụ</span></a></h2><p><strong>Sử dụng ví dụ:</strong> Mẫu facade thường được sử dụng trong các chương trình được phát triển bằng Java. Nó đặc biệt hữu ích khi làm việc với các thư viện và API phức tạp.</p><p>Dưới đây là một số ví dụ về facade trong các thư viện Java cốt lõi:</p><ul><li><a href="http://docs.oracle.com/javaee/7/api/javax/faces/context/FacesContext.html" target="_blank" rel="noopener noreferrer"><code>javax.faces.context.FacesContext</code></a> sử dụng các lớp <a href="http://docs.oracle.com/javaee/7/api/javax/faces/lifecycle/Lifecycle.html" target="_blank" rel="noopener noreferrer"><code>Life­Cycle</code></a>, <a href="http://docs.oracle.com/javaee/7/api/javax/faces/application/ViewHandler.html" target="_blank" rel="noopener noreferrer"><code>View­Handler</code></a> và <a href="http://docs.oracle.com/javaee/7/api/javax/faces/application/NavigationHandler.html" target="_blank" rel="noopener noreferrer"><code>Navigation­Handler</code></a> trong nền tảng để thực hiện công việc, nhưng đa số khách hàng không biết điều này.</li><li><a href="http://docs.oracle.com/javaee/7/api/javax/faces/context/ExternalContext.html" target="_blank" rel="noopener noreferrer"><code>javax.faces.context.ExternalContext</code></a> sử dụng các lớp <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html" target="_blank" rel="noopener noreferrer"><code>Servlet­Context</code></a>, <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html" target="_blank" rel="noopener noreferrer"><code>Http­Session</code></a>, <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html" target="_blank" rel="noopener noreferrer"><code>Http­Servlet­Request</code></a>, <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletResponse.html" target="_blank" rel="noopener noreferrer"><code>Http­Servlet­Response</code></a> và các lớp khác.</li></ul><p><strong>Cách nhận biết:</strong> Facade có thể được nhận biết bằng cách sử dụng một giao diện đơn giản để đóng gói công việc phức tạp của nhiều lớp. Thông thường, facade quản lý toàn bộ vòng đời của các đối tượng mà nó sử dụng.</p><h2 id="moi-quan-he-voi-cac-mau-khac" tabindex="-1"><a class="header-anchor" href="#moi-quan-he-voi-cac-mau-khac"><span>Mối quan hệ với các mẫu khác</span></a></h2><ul><li>[[Facade Pattern]] định nghĩa một giao diện mới cho các đối tượng hiện có, trong khi [[Adapter Pattern]] cố gắng sử dụng giao diện hiện có. <em>Adapter</em> thường chỉ đóng gói một đối tượng, trong khi <em>Facade</em> thường hoạt động trên toàn bộ hệ thống con đối tượng.</li><li>Khi chỉ cần ẩn cách tạo đối tượng của hệ thống con khỏi mã khách hàng, bạn có thể sử dụng [[Abstract Factory Pattern]] thay vì [[Facade Pattern]].</li><li>[[Flyweight Pattern]] cho thấy cách tạo ra một lượng lớn các đối tượng nhỏ, trong khi <em>Facade</em> cho thấy cách sử dụng một đối tượng đại diện cho toàn bộ hệ thống con.</li><li>[[Facade Pattern]] và [[Mediator Pattern]] có trách nhiệm tương tự: cả hai cố gắng tổ chức sự tương tác giữa các thành phần trong một hệ thống chặt chẽ. <ul><li><em>Facade</em> định nghĩa một giao diện đơn giản cho tất cả các đối tượng trong hệ thống con, nhưng nó không cung cấp bất kỳ chức năng mới nào. Các đối tượng trong hệ thống con có thể tương tác trực tiếp với nhau.</li><li><em>Mediator</em> tập trung tất cả các hoạt động giao tiếp của các thành phần trong hệ thống. Các thành phần chỉ biết về đối tượng trung gian và không thể tương tác trực tiếp với nhau.</li></ul></li><li>[[Facade Pattern]] thường có thể chuyển đổi thành một lớp [[Singleton Pattern]], vì trong hầu hết các trường hợp, chỉ cần một đối tượng facade là đủ.</li><li>[[Facade Pattern]] và [[Proxy Pattern]] tương tự nhau trong việc lưu trữ một thực thể phức tạp và tự khởi tạo nó. <em>Proxy</em> và đối tượng dịch vụ tuân theo cùng một giao diện, cho phép thay thế lẫn nhau, điều này khác với <em>Facade</em>.</li></ul>`,30),t=[l];function c(r,o){return s(),a("div",null,t)}const d=n(e,[["render",c],["__file","facade.html.vue"]]),h=JSON.parse('{"path":"/design/design-pattern/patterns/structural/facade.html","title":"Facade Pattern","lang":"en-US","frontmatter":{"title":"Facade Pattern","tags":["design-pattern"],"categories":["design-pattern"],"date created":"2023-10-06T00:00:00.000Z","date modified":"2023-10-06T00:00:00.000Z","description":"Mục đích Facade Pattern là một mẫu thiết kế cấu trúc, cung cấp một giao diện đơn giản để truy cập vào một nhóm giao diện con trong một hệ thống phức tạp. Mẫu thiết kế này định n...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/design/design-pattern/patterns/structural/facade.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Facade Pattern"}],["meta",{"property":"og:description","content":"Mục đích Facade Pattern là một mẫu thiết kế cấu trúc, cung cấp một giao diện đơn giản để truy cập vào một nhóm giao diện con trong một hệ thống phức tạp. Mẫu thiết kế này định n..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20231006165447.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"design-pattern"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Facade Pattern\\",\\"image\\":[\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20231006165447.png\\",\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20231006165901.png\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Mục đích","slug":"muc-đich","link":"#muc-đich","children":[]},{"level":2,"title":"Trường hợp sử dụng","slug":"truong-hop-su-dung","link":"#truong-hop-su-dung","children":[]},{"level":2,"title":"Cấu trúc","slug":"cau-truc","link":"#cau-truc","children":[{"level":3,"title":"Mô tả cấu trúc","slug":"mo-ta-cau-truc","link":"#mo-ta-cau-truc","children":[]},{"level":3,"title":"Mẫu mã cấu trúc","slug":"mau-ma-cau-truc","link":"#mau-ma-cau-truc","children":[]}]},{"level":2,"title":"Pseudocode","slug":"pseudocode","link":"#pseudocode","children":[]},{"level":2,"title":"Ví dụ","slug":"vi-du","link":"#vi-du","children":[]},{"level":2,"title":"Mối quan hệ với các mẫu khác","slug":"moi-quan-he-voi-cac-mau-khac","link":"#moi-quan-he-voi-cac-mau-khac","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":6.02,"words":1805},"filePathRelative":"design/design-pattern/patterns/structural/facade.md","localizedDate":"June 28, 2024","excerpt":"<h2>Mục đích</h2>\\n<p><strong>Facade Pattern</strong> là một mẫu thiết kế cấu trúc, cung cấp một giao diện đơn giản để truy cập vào một nhóm giao diện con trong một hệ thống phức tạp. Mẫu thiết kế này định nghĩa một giao diện cao cấp, giúp việc sử dụng các giao diện con trong hệ thống dễ dàng hơn.</p>","autoDesc":true}');export{d as comp,h as data};
