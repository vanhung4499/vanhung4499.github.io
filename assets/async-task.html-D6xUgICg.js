import{_ as e,o,c as r,a as n}from"./app-5QVbWi7Z.js";const t={};function i(s,a){return o(),r("div",null,a[0]||(a[0]=[n(`<h1 id="异步任务" tabindex="-1"><a class="header-anchor" href="#异步任务"><span>异步任务</span></a></h1><p><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-job/" target="_blank" rel="noopener noreferrer"><code>yudao-spring-boot-starter-job</code></a> 技术组件，除了提供定时任务的功能，还提供了 Async 异步任务的能力。系统使用异步任务，提升执行效率。例如说：</p><ul><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/logger/OperateLogServiceImpl.java#L42-L56" target="_blank" rel="noopener noreferrer">操作日志模块</a>，异步记录【操作日志】</li><li><a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/logger/ApiAccessLogServiceImpl.java#L39-L44" target="_blank" rel="noopener noreferrer">访问日志模块</a>，异步记录【访问日志】</li></ul><p>友情提示：</p><p>如果你未学习过 Spring 异步任务，可以后续阅读 <a href="https://www.iocoder.cn/Spring-Boot/Async-Job/?yudao" target="_blank" rel="noopener noreferrer">《芋道 Spring Boot 异步任务入门 》</a> 文章。</p><h2 id="_1-async-配置" tabindex="-1"><a class="header-anchor" href="#_1-async-配置"><span><a href="#_1-async-%E9%85%8D%E7%BD%AE">#</a> 1. Async 配置</span></a></h2><p>在 <a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-framework/yudao-spring-boot-starter-job/src/main/java/cn/iocoder/yudao/framework/quartz/config/YudaoAsyncAutoConfiguration.java" target="_blank" rel="noopener noreferrer">YudaoAsyncAutoConfiguration</a> 配置类，设置使用 <a href="https://github.com/alibaba/transmittable-thread-local" target="_blank" rel="noopener noreferrer">TransmittableThreadLocal</a>，解决异步执行时上下文传递的问题。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/异步任务/01.png" alt="YudaoAsyncAutoConfiguration 配置" tabindex="0" loading="lazy"><figcaption>YudaoAsyncAutoConfiguration 配置</figcaption></figure><p>友情提示：</p><p>项目使用到 ThreadLocal 的地方，建议都使用 TransmittableThreadLocal 进行替换。</p><h2 id="_2-引入依赖" tabindex="-1"><a class="header-anchor" href="#_2-引入依赖"><span><a href="#_2-%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96">#</a> 2. 引入依赖</span></a></h2><p>以访问日志模块为例，讲解它如何使用异步任务，实现异步记录【访问日志】的功能。</p><h3 id="_2-1-引入依赖" tabindex="-1"><a class="header-anchor" href="#_2-1-引入依赖"><span><a href="#_2-1-%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96">#</a> 2.1 引入依赖</span></a></h3><p>在 <code>yudao-module-system-infra</code> 模块中，引入 <code>yudao-spring-boot-starter-job</code> 技术组件。如下所示：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;cn.iocoder.cloud&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;yudao-spring-boot-starter-job&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><h3 id="_2-2-添加-async-注解" tabindex="-1"><a class="header-anchor" href="#_2-2-添加-async-注解"><span><a href="#_2-2-%E6%B7%BB%E5%8A%A0-async-%E6%B3%A8%E8%A7%A3">#</a> 2.2 添加 @Async 注解</span></a></h3><p>在 <a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/logger/ApiAccessLogServiceImpl.java#L39-L44" target="_blank" rel="noopener noreferrer">ApiAccessLogServiceImpl</a> 的 <code>#createApiAccessLogAsync(...)</code> 方法上，添加 <code>@Async</code> 注解，声明它要异步执行。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/异步任务/02.png" alt="ApiAccessLogServiceImpl 类" tabindex="0" loading="lazy"><figcaption>ApiAccessLogServiceImpl 类</figcaption></figure><h3 id="_2-3-测试调用" tabindex="-1"><a class="header-anchor" href="#_2-3-测试调用"><span><a href="#_2-3-%E6%B5%8B%E8%AF%95%E8%B0%83%E7%94%A8">#</a> 2.3 测试调用</span></a></h3><p>随便请求一个 RESTful API 接口，可以看到在异步任务的线程池中，进行了访问日志的记录。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/异步任务/03.png" alt="IDEA 控制台" tabindex="0" loading="lazy"><figcaption>IDEA 控制台</figcaption></figure>`,21)]))}const l=e(t,[["render",i],["__file","async-task.html.vue"]]),d=JSON.parse('{"path":"/project/yudao-cloud/async-task.html","title":"异步任务","lang":"en-US","frontmatter":{"title":"异步任务","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":42,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. Async 配置","slug":"_1-async-配置","link":"#_1-async-配置","children":[]},{"level":2,"title":"# 2. 引入依赖","slug":"_2-引入依赖","link":"#_2-引入依赖","children":[{"level":3,"title":"# 2.1 引入依赖","slug":"_2-1-引入依赖","link":"#_2-1-引入依赖","children":[]},{"level":3,"title":"# 2.2 添加 @Async 注解","slug":"_2-2-添加-async-注解","link":"#_2-2-添加-async-注解","children":[]},{"level":3,"title":"# 2.3 测试调用","slug":"_2-3-测试调用","link":"#_2-3-测试调用","children":[]}]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":1.59,"words":478},"filePathRelative":"project/yudao-cloud/async-task.md","localizedDate":"July 7, 2024"}');export{l as comp,d as data};
