import{_ as s,o as n,c as a,d as i}from"./app-5bcKoFfw.js";const l={},e=i(`<h2 id="y-tuong" tabindex="-1"><a class="header-anchor" href="#y-tuong"><span>Ý tưởng</span></a></h2><p><strong>Builder Pattern</strong> (Builder Pattern) là một mẫu thiết kế tạo đối tương (creational design pattern), cho phép bạn tạo ra các đối tượng phức tạp bằng cách xây dựng chúng theo từng bước. Mẫu thiết kế này cho phép bạn sử dụng cùng một mã tạo ra các đối tượng khác nhau về loại và hình thức.</p><p>Bằng cách sử dụng Builder Pattern, người dùng chỉ cần chỉ định loại đối tượng cần tạo, không cần biết về quá trình xây dựng cụ thể và chi tiết.</p><p>Builder Pattern cho phép thay đổi cách biểu diễn nội bộ của một sản phẩm.</p><p>Nó tách biệt mã xây dựng và mã biểu diễn.</p><p>Nó kiểm soát quá trình xây dựng một cách tốt.</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20200724105836.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>Giải thích quy trình Builder Pattern:</p><ol><li>Client tạo đối tượng Director và cấu hình các đối tượng Builder cần thiết.</li><li>Director chịu trách nhiệm thông báo cho builder khi nào cần xây dựng các thành phần của sản phẩm.</li><li>Builder xử lý yêu cầu từ director và thêm các thành phần của sản phẩm.</li><li>Client nhận được sản phẩm từ builder.</li></ol><h2 id="tinh-huong-su-dung" tabindex="-1"><a class="header-anchor" href="#tinh-huong-su-dung"><span>Tình huống sử dụng</span></a></h2><ul><li>Sử dụng Builder Pattern để tránh việc sử dụng &quot;hàm tạo chồng chéo (telescopic constructor)&quot;.</li><li>Khi bạn muốn sử dụng mã để tạo ra các sản phẩm khác nhau về hình thức.</li><li>Sử dụng Builder Pattern để xây dựng cây hợp thành hoặc các đối tượng phức tạp khác.</li></ul><h2 id="cau-truc" tabindex="-1"><a class="header-anchor" href="#cau-truc"><span>Cấu trúc</span></a></h2><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20210506090518.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><ol><li><strong>Builder</strong> (Builder) là một giao diện khai báo các bước xây dựng sản phẩm chung cho tất cả các loại builder.</li><li><strong>Concrete Builder</strong> (Concrete Builders) cung cấp các cài đặt khác nhau cho quá trình xây dựng. Concrete Builder cũng có thể xây dựng các sản phẩm không tuân theo giao diện chung.</li><li><strong>Product</strong> (Sản phẩm) là đối tượng cuối cùng được tạo ra. Sản phẩm được xây dựng bởi các builder khác nhau không cần phải thuộc cùng một cấu trúc lớp hoặc giao diện.</li><li><strong>Director</strong> (Người chỉ đạo) lớp xác định thứ tự gọi các bước xây dựng, cho phép bạn tạo và tái sử dụng cấu hình sản phẩm cụ thể.</li><li><strong>Client</strong> (Khách hàng) phải liên kết một đối tượng builder với lớp Director. Thông thường, bạn chỉ cần liên kết một lần thông qua tham số của phương thức khởi tạo của Director. Tuy nhiên, còn một cách khác để chuyển đối tượng builder cho phương thức xây dựng của Director mỗi lần bạn muốn tạo một sản phẩm với builder khác nhau.</li></ol><p><strong>Product</strong> (Sản phẩm) là một lớp đại diện cho sản phẩm, được tạo thành từ nhiều thành phần.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> parts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> AddPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> part</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        parts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(part);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> show</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;============== Tạo sản phẩm ==============&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> part</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> parts) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(part);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>Builder</strong></p><p>Builder là một giao diện trừu tượng, xác định các phương thức xây dựng các thành phần của sản phẩm A, B và C, và khai báo phương thức getResult để nhận kết quả xây dựng sản phẩm.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> buildPartA</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> buildPartB</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> buildPartC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Product</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>ConcreteBuilder</strong></p><p>ConcreteBuilder triển khai các phương thức cụ thể của Builder.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ConcreteBuilder</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Product</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> product </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Product</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> buildPartA</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">AddPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Phần A&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> buildPartB</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">AddPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Phần B&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> buildPartC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">AddPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Phần C&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Product</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> product;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Director</strong></p><p>Director là lớp điều hành, điều hướng quá trình xây dựng sản phẩm (điều khiển thứ tự xây dựng các thành phần).</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Director</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> construct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">buildPartC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">buildPartA</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">buildPartB</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>Client</strong></p><p>Người dùng không cần biết về quá trình xây dựng cụ thể, chỉ cần chỉ định loại sản phẩm cần tạo.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> BuilderPattern</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Director</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> director</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Director</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> builder</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        director</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">construct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(builder);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Product</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> product</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">show</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>Kết quả</strong></p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>============== Tạo sản phẩm ==============</span></span>
<span class="line"><span>Phần C</span></span>
<span class="line"><span>Phần A</span></span>
<span class="line"><span>Phần B</span></span></code></pre></div><h2 id="pseudocode" tabindex="-1"><a class="header-anchor" href="#pseudocode"><span>Pseudocode</span></a></h2><p>Dưới đây là một ví dụ về mẫu thiết kế <strong>Builder</strong> cho thấy cách bạn có thể tái sử dụng mã xây dựng đối tượng để tạo ra các loại sản phẩm khác nhau - ví dụ: ô tô (Car) và hướng dẫn sử dụng tương ứng (Manual).</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20210506090759.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Chỉ khi sản phẩm phức tạp và cần cấu hình chi tiết, Builder Pattern mới có ý nghĩa. Dưới đây là hai sản phẩm</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// mặc dù không có cùng một giao diện, nhưng lại có mối quan hệ với nhau.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Car</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Một chiếc ô tô có thể được trang bị với thiết bị GPS, máy tính điều khiển và một số ghế. Các mẫu</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // khác nhau của ô tô (xe thể thao, SUV và xe mui trần) có thể được trang bị hoặc kích hoạt các tính năng khác nhau.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Manual</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Hướng dẫn sử dụng phải được biên soạn dựa trên cấu hình của ô tô và giới thiệu tất cả các tính năng của ô tô.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Giao diện Builder khai báo các phương thức để xây dựng các thành phần của sản phẩm.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    phương thức reset()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    phương thức setSeats(...)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    phương thức setEngine(...)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    phương thức setTripComputer(...)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    phương thức setGPS(...)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Lớp Concrete Builder sẽ tuân thủ giao diện Builder và cung cấp cài đặt cụ thể cho quá trình xây dựng. Trong chương trình của bạn, có thể</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// có nhiều biến thể của Concrete Builder được triển khai theo cách khác nhau.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> CarBuilder</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    private field car:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Car</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Một phiên bản mới của Concrete Builder phải chứa một đối tượng sản phẩm trống được sử dụng trong quá trình lắp ráp tiếp theo.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    constructor </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CarBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.reset()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // phương thức reset (đặt lại) có thể xóa đối tượng đang được tạo.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method reset() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.car = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Car</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Tất cả các bước xây dựng đều tương tác với cùng một đối tượng sản phẩm.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setSeats(...) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Đặt số lượng ghế của ô tô.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setEngine(...) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Lắp đặt động cơ cụ thể.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setTripComputer(...) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Lắp đặt máy tính điều khiển.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setGPS(...) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Lắp đặt hệ thống định vị toàn cầu (GPS).</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Concrete Builder phải cung cấp một phương thức để nhận kết quả xây dựng. Điều này là do các loại khác nhau của Concrete Builder</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // có thể tạo ra các sản phẩm khác nhau không tuân theo cùng một giao diện. Vì vậy, không thể khai báo các phương thức này trong giao diện Builder</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // (ít nhất trong ngôn ngữ lập trình kiểu tĩnh).</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method getProduct():</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Car</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        sản phẩm = this.car</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.reset()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        trả về sản phẩm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Builder khác biệt từ các mẫu thiết kế tạo khác ở chỗ nó cho phép bạn tạo ra các sản phẩm không tuân theo cùng một giao diện.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">class </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CarManualBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> implements </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    private field manual:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Manual</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    constructor </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CarManualBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.reset()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method reset() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.manual = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Manual</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setSeats(...) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Thêm tài liệu về chức năng ghế ô tô.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setEngine(...) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Thêm giới thiệu về động cơ.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setTripComputer(...) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Thêm giới thiệu về máy tính điều khiển.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setGPS(...) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Thêm giới thiệu về GPS.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method getProduct():</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Manual</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Trả về hướng dẫn sử dụng và đặt lại Builder.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Người chỉ đạo chỉ chịu trách nhiệm thực hiện các bước xây dựng theo một thứ tự cụ thể. Điều này sẽ hữu ích khi tạo ra sản phẩm dựa trên các bước hoặc cấu hình cụ thể.</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Vì khách hàng có thể điều khiển trực tiếp Builder, nên nghiêm ngặt mà nói, lớp Director không bắt buộc.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">class </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Director</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    private field builder: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Người chỉ đạo có thể tương tác với bất kỳ phiên bản Builder nào được chuyển cho nó bởi mã khách hàng. Điều này cho phép thay đổi</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // loại cuối cùng của sản phẩm mới được tạo bằng cách chuyển Builder khác nhau cho phương thức xây dựng.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method setBuilder(builder: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.builder = builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Người chỉ đạo có thể tạo ra nhiều biến thể sản phẩm bằng cách sử dụng cùng một bước xây dựng.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">	method constructSportsCar(builder: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        builder.reset()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        builder.setSeats(2)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        builder.setEngine(new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SportEngine</span><span style="color:#E06C75;--shiki-dark:#E06C75;">())</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        builder.setTripComputer(true)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        builder.setGPS(true)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method constructSUV(builder: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) là</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // ...</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Mã khách hàng sẽ tạo ra đối tượng Builder và chuyển nó cho Người chỉ đạo, sau đó thực hiện quá trình xây dựng. Kết quả cuối cùng</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// sẽ cần được lấy từ đối tượng Builder.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">class </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Application</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method makeCar() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        director = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Director</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        CarBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> builder = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CarBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        director.constructSportsCar(builder)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Car</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> car = builder.getProduct()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        CarManualBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> builder = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CarManualBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        director.constructSportsCar(builder)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Kết quả cuối cùng thường cần được lấy từ đối tượng Builder, vì Người chỉ đạo không biết về sự tồn tại của Builder và</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // sản phẩm, cũng không phụ thuộc vào chúng.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Manual</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> manual = builder.getProduct()</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vi-du" tabindex="-1"><a class="header-anchor" href="#vi-du"><span>Ví dụ</span></a></h2><p><strong>Ví dụ sử dụng:</strong> Builder Pattern là một mẫu thiết kế nổi tiếng trong thế giới Java. Nó được sử dụng đặc biệt hữu ích khi bạn cần tạo ra một đối tượng có thể có nhiều tùy chọn cấu hình.</p><p>Builder đã được sử dụng rộng rãi trong thư viện cốt lõi của Java:</p><ul><li><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#append-boolean-" target="_blank" rel="noopener noreferrer"><code>java.lang.StringBuilder#append()</code></a> (không đồng bộ)</li><li><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#append-boolean-" target="_blank" rel="noopener noreferrer"><code>java.lang.StringBuffer#append()</code></a> (đồng bộ)</li><li><a href="http://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html#put-byte-" target="_blank" rel="noopener noreferrer"><code>java.nio.ByteBuffer#put()</code></a> (cũng như <a href="http://docs.oracle.com/javase/8/docs/api/java/nio/CharBuffer.html#put-char-" target="_blank" rel="noopener noreferrer"><code>Char­Buffer</code></a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/nio/ShortBuffer.html#put-short-" target="_blank" rel="noopener noreferrer"><code>Short­Buffer</code></a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/nio/IntBuffer.html#put-int-" target="_blank" rel="noopener noreferrer"><code>Int­Buffer</code></a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/nio/LongBuffer.html#put-long-" target="_blank" rel="noopener noreferrer"><code>Long­Buffer</code></a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/nio/FloatBuffer.html#put-float-" target="_blank" rel="noopener noreferrer"><code>Float­Buffer</code></a> và <a href="http://docs.oracle.com/javase/8/docs/api/java/nio/DoubleBuffer.html#put-double-" target="_blank" rel="noopener noreferrer"><code>Double­Buffer</code></a>)</li><li>Tất cả các lớp triển khai <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Appendable.html" target="_blank" rel="noopener noreferrer"><code>java.lang.Appendable</code></a></li></ul><p><strong>Cách nhận biết:</strong> Builder Pattern có thể được nhận biết bằng cách xem xét lớp có một phương thức xây dựng và nhiều phương thức cấu hình cho các kết quả đối tượng. Phương thức xây dựng của Builder thường hỗ trợ chuỗi phương thức (ví dụ: <code>someBuilder-&gt;setValueA(1)-&gt;setValueB(2)-&gt;create()</code>)</p><h2 id="moi-quan-he-voi-cac-mau-thiet-ke-khac" tabindex="-1"><a class="header-anchor" href="#moi-quan-he-voi-cac-mau-thiet-ke-khac"><span>Mối quan hệ với các mẫu thiết kế khác</span></a></h2><ul><li>Trong giai đoạn thiết kế ban đầu của nhiều công việc, [[Factory Method Pattern]] được sử dụng (đơn giản hơn và có thể tùy chỉnh dễ dàng hơn thông qua lớp con), sau đó tiến triển thành sử dụng [[Abstract Factory Pattern]], [[Prototype Pattern]] hoặc [[Builder Pattern Pattern]] (linh hoạt hơn nhưng phức tạp hơn).</li><li>[[Builder Pattern]] tập trung vào cách xây dựng đối tượng phức tạp theo từng bước. [[Abstract Factory Pattern]] chuyên sản xuất một loạt các đối tượng liên quan. <em>Abstract Factory</em> trả về ngay lập tức sản phẩm, trong khi <em>Builder</em> cho phép bạn thực hiện một số bước xây dựng bổ sung trước khi nhận sản phẩm.</li><li>Bạn có thể sử dụng [[Builder Pattern]] khi tạo cây [[Composite Pattern]], vì điều này cho phép các bước xây dựng chạy đệ quy.</li><li>Bạn có thể kết hợp [[Builder Pattern]] với [[Bridge Pattern]]: <em>Director</em> chịu trách nhiệm về phần trừu tượng, trong khi các <em>Builder</em> khác nhau chịu trách nhiệm về phần cài đặt.</li><li>[[Abstract Factory Pattern]], [[Builder Pattern]] và [[Prototype Pattern]] có thể được triển khai bằng [[Singleton Pattern]].</li></ul>`,41),t=[e];function r(c,p){return n(),a("div",null,t)}const d=s(l,[["render",r],["__file","builder.html.vue"]]),h=JSON.parse('{"path":"/design/design-pattern/patterns/creational/builder.html","title":"Builder Pattern","lang":"en-US","frontmatter":{"title":"Builder Pattern","tags":["design-pattern"],"categories":["design-pattern"],"date created":"2023-10-06T00:00:00.000Z","date modified":"2023-10-06T00:00:00.000Z","description":"Ý tưởng Builder Pattern (Builder Pattern) là một mẫu thiết kế tạo đối tương (creational design pattern), cho phép bạn tạo ra các đối tượng phức tạp bằng cách xây dựng chúng theo...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/design/design-pattern/patterns/creational/builder.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Builder Pattern"}],["meta",{"property":"og:description","content":"Ý tưởng Builder Pattern (Builder Pattern) là một mẫu thiết kế tạo đối tương (creational design pattern), cho phép bạn tạo ra các đối tượng phức tạp bằng cách xây dựng chúng theo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/20200724105836.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"design-pattern"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Builder Pattern\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200724105836.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210506090518.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210506090759.png\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Ý tưởng","slug":"y-tuong","link":"#y-tuong","children":[]},{"level":2,"title":"Tình huống sử dụng","slug":"tinh-huong-su-dung","link":"#tinh-huong-su-dung","children":[]},{"level":2,"title":"Cấu trúc","slug":"cau-truc","link":"#cau-truc","children":[]},{"level":2,"title":"Pseudocode","slug":"pseudocode","link":"#pseudocode","children":[]},{"level":2,"title":"Ví dụ","slug":"vi-du","link":"#vi-du","children":[]},{"level":2,"title":"Mối quan hệ với các mẫu thiết kế khác","slug":"moi-quan-he-voi-cac-mau-thiet-ke-khac","link":"#moi-quan-he-voi-cac-mau-thiet-ke-khac","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":8.59,"words":2576},"filePathRelative":"design/design-pattern/patterns/creational/builder.md","localizedDate":"June 28, 2024","excerpt":"<h2>Ý tưởng</h2>\\n<p><strong>Builder Pattern</strong> (Builder Pattern) là một mẫu thiết kế tạo đối tương (creational design pattern), cho phép bạn tạo ra các đối tượng phức tạp bằng cách xây dựng chúng theo từng bước. Mẫu thiết kế này cho phép bạn sử dụng cùng một mã tạo ra các đối tượng khác nhau về loại và hình thức.</p>","autoDesc":true}');export{d as comp,h as data};
