import{_ as s,g as l,o as p,c as d,a as i,e as o,h as a,f as t,w as c}from"./app-5QVbWi7Z.js";const r={};function u(m,e){const n=l("RouteLink");return p(),d("div",null,[e[3]||(e[3]=i('<h1 id="ai-绘画创作" tabindex="-1"><a class="header-anchor" href="#ai-绘画创作"><span>AI 绘画创作</span></a></h1><p>AI 绘画，基于 LLM 大模型，实现使用文本生成图片的功能。目前接入的是：</p><ul><li>OpenAI 的 DALL 模型</li><li>StabilityAI 的 Stable Diffusion 模型</li><li>Midjourney 的 Midjourney 模型</li></ul><figure><img src="https://doc.iocoder.cn/img/AI手册/AI绘画/绘画.png" alt="AI 绘画" tabindex="0" loading="lazy"><figcaption>AI 绘画</figcaption></figure><p>整个功能，涉及到 2 个表：</p><ul><li>【配置】<code>ai_api_key</code>：API 秘钥表</li><li>【绘画】<code>ai_image</code>：绘画记录表</li></ul><p>下面，我们逐个表进行介绍，这个过程中也会讲讲对应的功能。</p><blockquote><p>省略 creator/create_time/updater/update_time/deleted/tenant_id 等通用字段</p></blockquote><p>补充说明：</p><p>AI 绘画只是 AI 在 Image 图片中的一种场景，实际还有图片解析（识别）、图片合并等等，后续根据情况接入。</p><p>不过有一点比较尴尬，项目所使用的 Spring AI 库，目前只支持“文本生成图片”的功能，其它功能貌似没有计划，这样导致后续需要自己逐个集成！</p><h2 id="_1-api-秘钥表" tabindex="-1"><a class="header-anchor" href="#_1-api-秘钥表"><span><a href="#_1-api-%E7%A7%98%E9%92%A5%E8%A1%A8">#</a> 1. API 秘钥表</span></a></h2>',12)),o("p",null,[e[1]||(e[1]=a("在 ")),t(n,{to:"/ai/chat/"},{default:c(()=>e[0]||(e[0]=[a("《AI 对话》")])),_:1}),e[2]||(e[2]=a(" 中，我们已经介绍了 API 秘钥表，这里就不再赘述了。"))]),e[4]||(e[4]=i('<p>你想使用哪个模型绘画，可以参考对应的文档，进行配置：</p><ul><li>OpenAI 的 DALL 模型：<a href="/ai/openai">《【模型接入】OpenAI》</a></li><li>StabilityAI 的 Stable Diffusion 模型：<a href="/ai/stable-diffusion">《【模型接入】Stable Diffusion》</a></li><li>Midjourney 的 Midjourney 模型：<a href="/ai/midjourney">《【模型接入】Midjourney》</a></li></ul><p>另外，通义千问、文心一言、星火等模型，也可以用来绘画，后续会看情况接入！</p><h2 id="_2-绘画记录表" tabindex="-1"><a class="header-anchor" href="#_2-绘画记录表"><span><a href="#_2-%E7%BB%98%E7%94%BB%E8%AE%B0%E5%BD%95%E8%A1%A8">#</a> 2. 绘画记录表</span></a></h2><p>绘画记录表，用户每发起一次“文本生成图片”，都会记录一条记录。</p><h3 id="_2-1-表结构" tabindex="-1"><a class="header-anchor" href="#_2-1-表结构"><span><a href="#_2-1-%E8%A1%A8%E7%BB%93%E6%9E%84">#</a> 2.1 表结构</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>CREATE TABLE `ai_image` (</span></span>\n<span class="line"><span>  `id` bigint NOT NULL AUTO_INCREMENT COMMENT &#39;编号&#39;,</span></span>\n<span class="line"><span>  `user_id` bigint NOT NULL COMMENT &#39;用户编号&#39;,</span></span>\n<span class="line"><span>  `public_status` bit(1) NOT NULL COMMENT &#39;是否发布&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `platform` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;平台&#39;,</span></span>\n<span class="line"><span>  `model` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;模型&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `prompt` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;提示词&#39;,</span></span>\n<span class="line"><span>  `width` int NOT NULL COMMENT &#39;图片宽度&#39;,</span></span>\n<span class="line"><span>  `height` int NOT NULL COMMENT &#39;图片高度&#39;,</span></span>\n<span class="line"><span>  `options` json DEFAULT NULL COMMENT &#39;绘制参数&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `status` tinyint NOT NULL COMMENT &#39;绘画状态&#39;,</span></span>\n<span class="line"><span>  `pic_url` varchar(2048) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;图片地址&#39;,</span></span>\n<span class="line"><span>  `error_message` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;错误信息&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `task_id` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_bin DEFAULT NULL COMMENT &#39;任务编号&#39;,</span></span>\n<span class="line"><span>  `buttons` varchar(2048) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_bin DEFAULT NULL COMMENT &#39;mj buttons 按钮&#39;,</span></span>\n<span class="line"><span>  PRIMARY KEY (`id`)</span></span>\n<span class="line"><span>) ENGINE=InnoDB AUTO_INCREMENT=131 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;AI 绘画表&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>① <code>user_id</code> 字段：对应 <code>system_users</code> 表的 <code>id</code> 字段，表示哪个用户生成的图片。</p><p><code>public_status</code> 字段：表示是否发布，默认为 <code>false</code> 不发布（不公开）。管理员可以在后台操作，设置某个图片为发布（公开）。</p><p>② <code>platform</code> 字段：表示平台，对应 AiPlatformEnum 枚举，目前支持多个 AI 大模型。</p><p><code>model</code> 字段：表示模型标识，对应不同的平台的模型标识，例如说 OpenAI 的 <code>dall-e-3</code>、<code>dall-e-2</code>，StabilityAI 的 <code>stable-diffusion-v1-6</code> 等等。</p><p>③ <code>prompt</code> 字段：表示提示词，用户输入的文本。</p><p><code>width</code>、<code>height</code> 字段：表示图片的宽度、高度。</p><p><code>options</code> 字段：表示绘制参数，JSON 格式，因为不同平台有不同的参数。例如说：OpenAI 的 OpenAiImageOptions、StabilityAI 的 StabilityAiImageOptions 拓展参数。</p><p>④ <code>status</code> 字段：表示绘画状态，对应 AiImageStatusEnum 枚举，目前有 10 进行中、20 生成成功、30 生成失败。因为绘图比较耗时，所以它的整体流程是：</p><ul><li>用户发起绘画请求，先插入一条状态为 10 进行中的 <code>ai_image</code> 记录</li><li>后端异步调用 AI 大模型，生成图片。生成成功后，更新状态为 20 生成成功</li><li>前端轮询查询，如果状态为 20 生成成功，就显示图片</li></ul><p><code>pic_url</code> 字段：表示图片地址，生成成功后，会把图片地址存储在这里。</p><p><code>error_message</code> 字段：表示错误信息，生成失败后，会把错误信息存储在这里。</p><p>⑤ <code>task_id</code> 字段：Midjourney 的生成图片是异步的，所以需要一个任务编号，用来查询生成状态。</p><p><code>buttons</code> 字段：Midjourney 生成图片后，会返回一些按钮，用来操作图片。这个字段存储这些按钮。</p><h3 id="_2-2-管理后台" tabindex="-1"><a class="header-anchor" href="#_2-2-管理后台"><span><a href="#_2-2-%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0">#</a> 2.2 管理后台</span></a></h3><p>① 前端对应 [AI 大模型 -&gt; AI 绘图] 菜单，对应 <code>yudao-ui-admin-vue3</code> 项目的 <code>@/views/ai/image</code> TODO 目录，提供给普通用户使用，生成图片。</p><figure><img src="https://doc.iocoder.cn/img/AI手册/AI绘画/绘画.png" alt="绘画" tabindex="0" loading="lazy"><figcaption>绘画</figcaption></figure><p>它的后端 HTTP 接口，由 <code>yudao-module-ai</code> 模块的 <code>image</code> 包的 AiImageController 实现。</p><p>最最最关键的代码！！！大家可以重点看看！！！</p><p>AiImageController 提供的 <code>#drawImage(...)</code> 生成图片接口。</p><p>它的内部，调用 Spring AI 的 ImageClient 来实现大模型的调用。</p><p>② 前端对应 [AI 大模型 -&gt; 控制台 -&gt; 绘图管理] 菜单，对应 <code>yudao-ui-admin-vue3</code> 项目的 <code>@/views/ai/image/mananger</code> 目录，提供给管理员使用，查看绘画记录。</p><figure><img src="https://doc.iocoder.cn/img/AI手册/AI绘画/绘画管理.png" alt="绘画管理" tabindex="0" loading="lazy"><figcaption>绘画管理</figcaption></figure>',29))])}const b=s(r,[["render",u],["__file","image.html.vue"]]),g=JSON.parse('{"path":"/project/rouyi-vue-pro/ai/image.html","title":"AI 绘画创作","lang":"en-US","frontmatter":{"title":"AI 绘画创作","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":131,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. API 秘钥表","slug":"_1-api-秘钥表","link":"#_1-api-秘钥表","children":[]},{"level":2,"title":"# 2. 绘画记录表","slug":"_2-绘画记录表","link":"#_2-绘画记录表","children":[{"level":3,"title":"# 2.1 表结构","slug":"_2-1-表结构","link":"#_2-1-表结构","children":[]},{"level":3,"title":"# 2.2 管理后台","slug":"_2-2-管理后台","link":"#_2-2-管理后台","children":[]}]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":4.13,"words":1240},"filePathRelative":"project/rouyi-vue-pro/ai/image.md","localizedDate":"July 7, 2024"}');export{b as comp,g as data};
