import{_ as s,o as n,c as a,d as i}from"./app-C7tm95bn.js";const t={},e=i(`<h1 id="kiem-tra-ma" tabindex="-1"><a class="header-anchor" href="#kiem-tra-ma"><span>Kiểm tra mã</span></a></h1><p>Vào tháng 1 năm 2019, [TypeScript chính thức quyết định sử dụng hoàn toàn ESLint] như công cụ kiểm tra mã và tạo ra một dự án mới <a href="https://github.com/typescript-eslint/typescript-eslint" target="_blank" rel="noopener noreferrer">typescript-eslint</a>, cung cấp bộ phân tích cú pháp cho tệp TypeScript <a href="https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser" target="_blank" rel="noopener noreferrer">@typescript-eslint/parser</a> và các tùy chọn cấu hình liên quan <a href="https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin" target="_blank" rel="noopener noreferrer">@typescript-eslint/eslint-plugin</a> v.v. Trong khi đó, hai giải pháp lint trước đó sẽ không được sử dụng nữa:</p><ul><li><a href="https://github.com/eslint/typescript-eslint-parser" target="_blank" rel="noopener noreferrer">typescript-eslint-parser</a> đã dừng bảo dưỡng</li><li><a href="https://palantir.github.io/tslint/" target="_blank" rel="noopener noreferrer">TSLint</a> sẽ cung cấp công cụ di chuyển và dừng bảo dưỡng TSLint sau khi typescript-eslint đủ tính năng (Once we consider ESLint feature-complete w.r.t. TSLint, we will deprecate TSLint and help users migrate to ESLint.</li></ul><p>Tổng kết, giải pháp kiểm tra mã cho TypeScript hiện tại và tương lai là <a href="https://github.com/typescript-eslint/typescript-eslint" target="_blank" rel="noopener noreferrer">typescript-eslint</a>.</p><h2 id="kiem-tra-ma-la-gi" tabindex="-1"><a class="header-anchor" href="#kiem-tra-ma-la-gi"><span>Kiểm tra mã là gì</span></a></h2><p>Kiểm tra mã chủ yếu được sử dụng để phát hiện lỗi mã, thống nhất phong cách mã.</p><p>Trong dự án JavaScript, chúng ta thường sử dụng <a href="https://eslint.org/" target="_blank" rel="noopener noreferrer">ESLint</a> để kiểm tra mã, nó mở rộng phạm vi ứng dụng rất lớn thông qua tính năng plug-in, kết hợp với <a href="https://github.com/typescript-eslint/typescript-eslint" target="_blank" rel="noopener noreferrer">typescript-eslint</a>, thậm chí có thể được sử dụng để kiểm tra mã TypeScript.</p><h2 id="tai-sao-can-kiem-tra-ma" tabindex="-1"><a class="header-anchor" href="#tai-sao-can-kiem-tra-ma"><span>Tại sao cần kiểm tra mã</span></a></h2><p>Có người sẽ nghĩ, JavaScript rất linh hoạt, vì vậy cần kiểm tra mã. Nhưng TypeScript đã có thể kiểm tra nhiều vấn đề trong giai đoạn biên dịch, vì sao vẫn cần kiểm tra mã?</p><p>Bởi vì TypeScript tập trung vào kiểm tra kiểu, chứ không phải phong cách mã. Khi số lượng thành viên trong nhóm tăng lên, cùng một logic có thể có sự khác biệt lớn khi được viết bởi những người khác nhau:</p><ul><li>Thụt lề nên là bốn khoảng trắng hay hai khoảng trắng?</li><li>Có nên cấm sử dụng <code>var</code> không?</li><li>Tên interface có nên bắt đầu bằng <code>I</code> không?</li><li>Có nên ép buộc sử dụng <code>===</code> thay vì <code>==</code> không?</li></ul><p>Những vấn đề này TypeScript không quan tâm, nhưng lại ảnh hưởng đến hiệu quả phát triển khi làm việc nhóm, tính khả hiểu và bảo dưỡng của mã.</p><p>Hãy xem một ví dụ cụ thể:</p><div class="language-ts" data-ext="ts" data-title="ts"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">var</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> myName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Tom&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">\`My name is </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E06C75;--shiki-dark:#E06C75;">myNane</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span><span style="color:#98C379;--shiki-dark:#98C379;">\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">\`My name is </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">myName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toStrng</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span><span style="color:#98C379;--shiki-dark:#98C379;">\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><p>Bạn có thể nhìn thấy có lỗi gì trong mã trên không?</p><p>Sau khi biên dịch bằng tsc và kiểm tra bằng eslint, thông báo lỗi như sau:</p><div class="language-ts" data-ext="ts" data-title="ts"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">var</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> myName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Tom&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Thông báo lỗi eslint:</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Unexpected var, use let or const instead.eslint(no-var)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">\`My name is </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E06C75;--shiki-dark:#E06C75;">myNane</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span><span style="color:#98C379;--shiki-dark:#98C379;">\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Thông báo lỗi tsc:</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Cannot find name &#39;myNane&#39;. Did you mean &#39;myName&#39;?</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Thông báo lỗi eslint:</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &#39;myNane&#39; is not defined.eslint(no-undef)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">\`My name is </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">myName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toStrng</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span><span style="color:#98C379;--shiki-dark:#98C379;">\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Thông báo lỗi tsc:</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Property &#39;toStrng&#39; does not exist on type &#39;string&#39;. Did you mean &#39;toString&#39;?</span></span></code></pre></div><table><thead><tr><th>Vấn đề tồn tại</th><th><code>tsc</code> có báo lỗi không</th><th><code>eslint</code> có báo lỗi không</th></tr></thead><tbody><tr><td>Nên sử dụng <code>let</code> hoặc <code>const</code> thay vì <code>var</code></td><td>❌</td><td>✅</td></tr><tr><td><code>myName</code> bị viết sai thành <code>myNane</code></td><td>✅</td><td>✅</td></tr><tr><td><code>toString</code> bị viết sai thành <code>toStrng</code></td><td>✅️</td><td>❌</td></tr></tbody></table><p>Trong ví dụ trên, chúng tôi sử dụng <code>var</code> để định nghĩa một biến, nhưng thực tế là ES6 có cú pháp tiên tiến hơn là <code>let</code> và <code>const</code>, lúc này có thể kiểm tra bằng <code>eslint</code>, nhắc nhở chúng tôi nên sử dụng <code>let</code> hoặc <code>const</code> thay vì <code>var</code>.</p><p>Đối với biến chưa được định nghĩa <code>myNane</code>, <code>tsc</code> và <code>eslint</code> đều có thể kiểm tra.</p><p>Vì <code>eslint</code> không thể nhận biết <code>myName</code> có những phương thức nào, nên không kiểm tra được lỗi chính tả của <code>toString</code>.</p><p>Từ đó có thể thấy, <code>eslint</code> có thể phát hiện ra một số lỗi mà <code>tsc</code> không quan tâm, kiểm tra ra một số vấn đề tiềm ẩn, vì vậy việc kiểm tra mã là rất quan trọng.</p><h2 id="su-dung-eslint-trong-typescript" tabindex="-1"><a class="header-anchor" href="#su-dung-eslint-trong-typescript"><span>Sử dụng ESLint trong TypeScript</span></a></h2><h3 id="cai-đat-eslint" tabindex="-1"><a class="header-anchor" href="#cai-đat-eslint"><span>Cài đặt ESLint</span></a></h3><p>ESLint có thể được cài đặt trong dự án hiện tại hoặc môi trường toàn cầu, bởi vì kiểm tra mã là một phần quan trọng của dự án, vì vậy chúng tôi thường sẽ cài đặt nó trong dự án hiện tại. Bạn có thể chạy lệnh sau để cài đặt:</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">npm</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --save-dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> eslint</span></span></code></pre></div><p>Vì ESLint mặc định sử dụng <a href="https://github.com/eslint/espree" target="_blank" rel="noopener noreferrer">Espree</a> để phân tích cú pháp, nó không thể nhận biết một số cú pháp TypeScript, vì vậy chúng tôi cần cài đặt <a href="https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser" target="_blank" rel="noopener noreferrer"><code>@typescript-eslint/parser</code></a>, để thay thế trình phân tích cú pháp mặc định, đừng quên cài đặt <code>typescript</code> cùng lúc:</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">npm</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --save-dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> typescript</span><span style="color:#98C379;--shiki-dark:#98C379;"> @typescript-eslint/parser</span></span></code></pre></div><p>Tiếp theo, bạn cần cài đặt plugin tương ứng <a href="https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin" target="_blank" rel="noopener noreferrer">@typescript-eslint/eslint-plugin</a>. Nó bổ sung cho các quy tắc mặc định của eslint, cung cấp một số quy tắc bổ sung phù hợp với cú pháp ts.</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">npm</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --save-dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> @typescript-eslint/eslint-plugin</span></span></code></pre></div><h3 id="tao-tep-cau-hinh" tabindex="-1"><a class="header-anchor" href="#tao-tep-cau-hinh"><span>Tạo tệp cấu hình</span></a></h3><p>ESLint cần một tệp cấu hình để quyết định kiểm tra quy tắc nào, tên tệp cấu hình thường là <code>.eslintrc.js</code> hoặc <code>.eslintrc.json</code>.</p><p>Khi chạy ESLint để kiểm tra một tệp, nó sẽ đầu tiên cố gắng đọc tệp cấu hình trong thư mục của tệp đó, sau đó tìm kiếm từng cấp một lên trên, kết hợp các cấu hình tìm thấy, làm cấu hình cho tệp đang kiểm tra.</p><p>Chúng tôi tạo một <code>.eslintrc.js</code> trong thư mục gốc của dự án, nội dung như sau:</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">module</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">exports</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    parser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;@typescript-eslint/parser&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    plugins</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;@typescript-eslint&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    rules</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Cấm sử dụng var</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &#39;no-var&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Ưu tiên sử dụng interface thay vì type</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &#39;@typescript-eslint/consistent-type-definitions&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;error&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;interface&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Trong cấu hình trên, chúng tôi chỉ định hai quy tắc, trong đó <code>no-var</code> là quy tắc gốc của ESLint, <code>@typescript-eslint/consistent-type-definitions</code> là quy tắc mới của <code>@typescript-eslint/eslint-plugin</code>.</p><p>Giá trị của quy tắc thường là một mảng (như <code>@typescript-eslint/consistent-type-definitions</code> trong ví dụ trên), trong đó mục đầu tiên là <code>off</code>, <code>warn</code> hoặc <code>error</code>, tương ứng với tắt, cảnh báo và báo lỗi. Các mục sau đó là các cấu hình khác của quy tắc.</p><p>Nếu không có cấu hình khác, thì giá trị của quy tắc có thể được rút gọn thành mục đầu tiên trong mảng (như <code>no-var</code> trong ví dụ trên).</p><p>Ý nghĩa của tắt, cảnh báo và báo lỗi là:</p><ul><li>Tắt: vô hiệu hóa quy tắc này</li><li>Cảnh báo: xuất thông báo lỗi khi kiểm tra mã, nhưng không ảnh hưởng đến exit code</li><li>Báo lỗi: khi phát hiện lỗi, không chỉ xuất thông báo lỗi, mà còn đặt exit code thành 1 (thông thường, nếu exit code không phải là 0, điều này có nghĩa là đã xảy ra lỗi khi thực hiện)</li></ul><h3 id="kiem-tra-mot-tep-ts" tabindex="-1"><a class="header-anchor" href="#kiem-tra-mot-tep-ts"><span>Kiểm tra một tệp ts</span></a></h3><p>Sau khi tạo tệp cấu hình, chúng ta hãy tạo một tệp ts để xem liệu có thể sử dụng ESLint để kiểm tra nó hay không.</p><p>Tạo một tệp mới <code>index.ts</code> và sao chép nội dung sau vào đó:</p><div class="language-ts" data-ext="ts" data-title="ts"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">var</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> myName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Tom&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">type</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {};</span></span></code></pre></div><p>Sau đó thực hiện lệnh sau:</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">./node_modules/.bin/eslint</span><span style="color:#98C379;--shiki-dark:#98C379;"> index.ts</span></span></code></pre></div><p>Bạn sẽ nhận được thông báo lỗi sau:</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/path/to/index.ts</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  1:1</span><span style="color:#98C379;--shiki-dark:#98C379;">  error</span><span style="color:#98C379;--shiki-dark:#98C379;">  Unexpected</span><span style="color:#98C379;--shiki-dark:#98C379;"> var,</span><span style="color:#98C379;--shiki-dark:#98C379;"> use</span><span style="color:#98C379;--shiki-dark:#98C379;"> let</span><span style="color:#98C379;--shiki-dark:#98C379;"> or</span><span style="color:#98C379;--shiki-dark:#98C379;"> const</span><span style="color:#98C379;--shiki-dark:#98C379;"> instead</span><span style="color:#98C379;--shiki-dark:#98C379;">  no-var</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  3:6</span><span style="color:#98C379;--shiki-dark:#98C379;">  error</span><span style="color:#98C379;--shiki-dark:#98C379;">  Use</span><span style="color:#98C379;--shiki-dark:#98C379;"> an</span><span style="color:#98C379;--shiki-dark:#98C379;"> \`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">interface</span><span style="color:#98C379;--shiki-dark:#98C379;">\`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> instead</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> a</span><span style="color:#98C379;--shiki-dark:#98C379;"> \`</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">type</span><span style="color:#98C379;--shiki-dark:#98C379;">\`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    @typescript-eslint/consistent-type-definitions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">✖</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#98C379;--shiki-dark:#98C379;"> problems</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (2 </span><span style="color:#98C379;--shiki-dark:#98C379;">errors,</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#98C379;--shiki-dark:#98C379;"> warnings</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  2</span><span style="color:#98C379;--shiki-dark:#98C379;"> errors</span><span style="color:#98C379;--shiki-dark:#98C379;"> and</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#98C379;--shiki-dark:#98C379;"> warnings</span><span style="color:#98C379;--shiki-dark:#98C379;"> potentially</span><span style="color:#98C379;--shiki-dark:#98C379;"> fixable</span><span style="color:#98C379;--shiki-dark:#98C379;"> with</span><span style="color:#98C379;--shiki-dark:#98C379;"> the</span><span style="color:#98C379;--shiki-dark:#98C379;"> \`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--fix</span><span style="color:#98C379;--shiki-dark:#98C379;">\`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> option.</span></span></code></pre></div><p>Kết quả trên cho thấy hai quy tắc mà chúng ta vừa cấu hình đều hoạt động: cấm sử dụng <code>var</code>; ưu tiên sử dụng <code>interface</code> thay vì <code>type</code>.</p><p>Lưu ý rằng chúng tôi sử dụng <code>./node_modules/.bin/eslint</code>, không phải là script <code>eslint</code> toàn cầu, bởi vì kiểm tra mã là một phần quan trọng của dự án, vì vậy chúng tôi thường sẽ cài đặt nó trong dự án hiện tại.</p><p>Tuy nhiên, việc thực hiện một đoạn script dài như vậy mỗi lần khá là bất tiện, chúng ta có thể tạo một npm script trong <code>package.json</code> để đơn giản hóa bước này:</p><div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;scripts&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;eslint&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;eslint index.ts&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Bây giờ, chỉ cần chạy <code>npm run eslint</code>.</p><h3 id="kiem-tra-tat-ca-cac-tep-ts-cua-toan-bo-du-an" tabindex="-1"><a class="header-anchor" href="#kiem-tra-tat-ca-cac-tep-ts-cua-toan-bo-du-an"><span>Kiểm tra tất cả các tệp ts của toàn bộ dự án</span></a></h3><p>Mã nguồn của dự án thường được đặt trong thư mục <code>src</code>, vì vậy chúng ta cần thay đổi script <code>eslint</code> trong <code>package.json</code> để kiểm tra một thư mục. Vì <code>eslint</code> mặc định sẽ không kiểm tra các tệp có phần mở rộng <code>.ts</code>, nên chúng ta cần thêm tham số <code>--ext .ts</code>:</p><div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;scripts&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;eslint&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;eslint src --ext .ts&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Bây giờ, khi chạy <code>npm run eslint</code>, tất cả các tệp có phần mở rộng <code>.ts</code> trong thư mục <code>src</code> sẽ được kiểm tra.</p><h3 id="tich-hop-kiem-tra-eslint-trong-vscode" tabindex="-1"><a class="header-anchor" href="#tich-hop-kiem-tra-eslint-trong-vscode"><span>Tích hợp kiểm tra ESLint trong VSCode</span></a></h3><p>Tích hợp kiểm tra ESLint trong trình biên tập có thể giúp phát hiện lỗi trong quá trình phát triển, thậm chí có thể tự động sửa lỗi khi lưu, đáng kể tăng hiệu quả phát triển.</p><p>Để tích hợp kiểm tra ESLint trong VSCode, chúng ta cần cài đặt plugin ESLint trước, nhấp vào nút &quot;Mở rộng&quot;, tìm kiếm ESLint, sau đó cài đặt.</p><p>Plugin ESLint trong VSCode mặc định sẽ không kiểm tra các tệp có phần mở rộng <code>.ts</code>, cần thêm cấu hình sau vào &quot;Code =&gt; Settings =&gt; Settings =&gt; Work Space&quot; (hoặc tạo một tệp cấu hình <code>.vscode/settings.json</code> trong thư mục gốc của dự án):</p><div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;eslint.validate&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;javascript&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;javascriptreact&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;typescript&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;typescript.tsdk&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;node_modules/typescript/lib&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Bây giờ, khi mở một tệp <code>.ts</code>, di chuyển chuột đến nơi có gợi ý màu đỏ.</p><p>Chúng ta cũng có thể bật tính năng tự động sửa lỗi khi lưu, thông qua cấu hình:</p><div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;eslint.autoFixOnSave&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;eslint.validate&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;javascript&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;javascriptreact&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;language&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;typescript&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;autoFix&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;typescript.tsdk&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;node_modules/typescript/lib&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Sau đó, khi lưu tệp, nó sẽ tự động được sửa thành:</p><div class="language-ts" data-ext="ts" data-title="ts"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> myName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Tom&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {}</span></span></code></pre></div><h3 id="su-dung-prettier-đe-sua-loi-đinh-dang" tabindex="-1"><a class="header-anchor" href="#su-dung-prettier-đe-sua-loi-đinh-dang"><span>Sử dụng Prettier để sửa lỗi định dạng</span></a></h3><p>ESLint bao gồm một số kiểm tra định dạng mã, chẳng hạn như dấu cách, dấu chấm phẩy, v.v. Tuy nhiên, trong cộng đồng front-end, có một công cụ tiên tiến hơn có thể được sử dụng để định dạng mã, đó là <a href="https://prettier.io/" target="_blank" rel="noopener noreferrer">Prettier</a>.</p><p>Prettier tập trung vào việc định dạng mã, thông qua phân tích cú pháp, tái cấu trúc định dạng của mã, để cho phép tất cả mọi người giữ cùng một phong cách mã.</p><p>Đầu tiên, bạn cần cài đặt Prettier:</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">npm</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --save-dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> prettier</span></span></code></pre></div><p>Sau đó, tạo một tệp <code>prettier.config.js</code> chứa các tùy chọn cấu hình của Prettier. Prettier có rất ít tùy chọn cấu hình, dưới đây tôi sẽ giới thiệu một quy tắc cấu hình mà tôi khuyến nghị mọi người tham khảo:</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// prettier.config.js or .prettierrc.js</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">module</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">exports</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Maximum 100 characters per line</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    printWidth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Use 4 spaces for indentation</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    tabWidth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Use spaces, not indentation characters</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    useTabs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // End lines with semicolons</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    semi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Use single quotes</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    singleQuote</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Only use quotes around object keys when necessary</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    quoteProps</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;as-needed&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Do not use single quotes in jsx, use double quotes</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    jsxSingleQuote</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // No need for commas at the end</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    trailingComma</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;none&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Spaces are required at the beginning and end of braces</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    bracketSpacing</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // The closing bracket of the jsx tag needs a line break</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    jsxBracketSameLine</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Arrow functions, even when there is only one parameter, need parentheses</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    arrowParens</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;always&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // The range of each file format is the entire content of the file</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    rangeStart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    rangeEnd</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">Infinity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // No need to write @prettier at the beginning of the file</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    requirePragma</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // No need to automatically insert @prettier at the beginning of the file</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    insertPragma</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Use the default line break standard</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    proseWrap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;preserve&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Decide whether or not to wrap html based on display style</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    htmlWhitespaceSensitivity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;css&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Use lf for line breaks</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    endOfLine</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;lf&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tiếp theo, cài đặt plugin Prettier trong VSCode, sau đó chỉnh sửa <code>.vscode/settings.json</code>:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;files.eol&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\n</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;editor.tabSize&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;editor.formatOnSave&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;editor.defaultFormatter&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;esbenp.prettier-vscode&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;eslint.autoFixOnSave&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;eslint.validate&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;javascript&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;javascriptreact&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;language&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;typescript&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;autoFix&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;typescript.tsdk&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;node_modules/typescript/lib&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Điều này sẽ tự động định dạng và tự động sửa các lỗi ESLint khi lưu tệp.</p><p>Lưu ý rằng, vì ESLint cũng có thể kiểm tra một số vấn đề định dạng mã, khi sử dụng với Prettier, chúng ta thường sẽ tắt các quy tắc liên quan đến định dạng mã trong ESLint, nếu không sẽ có xung đột.</p><h3 id="su-dung-cau-hinh-eslint-cua-alloyteam" tabindex="-1"><a class="header-anchor" href="#su-dung-cau-hinh-eslint-cua-alloyteam"><span>Sử dụng cấu hình ESLint của AlloyTeam</span></a></h3><p>Có quá nhiều quy tắc trong ESLint gốc và <code>@typescript-eslint/eslint-plugin</code>, và một số quy tắc gốc không được hỗ trợ tốt trong TypeScript và cần được tắt.</p><p>Tại đây, tôi khuyên bạn nên sử dụng <a href="https://github.com/AlloyTeam/eslint-config-alloy#typescript" target="_blank" rel="noopener noreferrer">phiên bản TypeScript của quy tắc ESLint của AlloyTeam</a>. Nó đã cung cấp cho chúng ta một bộ cấu hình quy tắc hoàn chỉnh và hoàn toàn tương thích với Prettier (eslint-config-alloy không chứa bất kỳ quy tắc định dạng mã nào, các vấn đề liên quan đến định dạng mã sẽ được Prettier chuyên nghiệp xử lý).</p><p>Cài đặt:</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">npm</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --save-dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> eslint</span><span style="color:#98C379;--shiki-dark:#98C379;"> typescript</span><span style="color:#98C379;--shiki-dark:#98C379;"> @typescript-eslint/parser</span><span style="color:#98C379;--shiki-dark:#98C379;"> @typescript-eslint/eslint-plugin</span><span style="color:#98C379;--shiki-dark:#98C379;"> eslint-config-alloy</span></span></code></pre></div><p>Tạo một tệp <code>.eslintrc.js</code> trong thư mục gốc của dự án của bạn và sao chép nội dung sau vào tệp:</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">module</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">exports</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    extends</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &#39;alloy&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &#39;alloy/typescript&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Biến môi trường của bạn (bao gồm nhiều biến toàn cục được định nghĩa trước)</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Your environments (which contains several predefined global variables)</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        //</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // browser: true,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // node: true,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // mocha: true,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // jest: true,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // jquery: true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    globals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Biến toàn cục của bạn (đặt thành false có nghĩa là nó không được phép gán lại)</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Your global variables (setting to false means it&#39;s not allowed to be reassigned)</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        //</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // myGlobal: false</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    rules</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Tùy chỉnh quy tắc của bạn</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Customize your rules</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Để biết thêm cách sử dụng, vui lòng tham khảo <a href="https://github.com/AlloyTeam/eslint-config-alloy" target="_blank" rel="noopener noreferrer">Quy tắc ESLint của AlloyTeam</a>.</p><h3 id="su-dung-eslint-đe-kiem-tra-cac-tep-tsx" tabindex="-1"><a class="header-anchor" href="#su-dung-eslint-đe-kiem-tra-cac-tep-tsx"><span>Sử dụng ESLint để kiểm tra các tệp tsx</span></a></h3><p>Nếu bạn cần hỗ trợ kiểm tra các tệp tsx cùng lúc, bạn cần điều chỉnh một số bước trên:</p><h4 id="cai-đat-eslint-plugin-react" tabindex="-1"><a class="header-anchor" href="#cai-đat-eslint-plugin-react"><span>Cài đặt <code>eslint-plugin-react</code></span></a></h4><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">npm</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --save-dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> eslint-plugin-react</span></span></code></pre></div><h4 id="them-phan-mo-rong-tsx-vao-scripts-eslint-trong-package-json" tabindex="-1"><a class="header-anchor" href="#them-phan-mo-rong-tsx-vao-scripts-eslint-trong-package-json"><span>Thêm phần mở rộng <code>.tsx</code> vào scripts.eslint trong package.json</span></a></h4><div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;scripts&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;eslint&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;eslint src --ext .ts,.tsx&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h4 id="them-kiem-tra-typescriptreact-vao-cau-hinh-cua-vscode" tabindex="-1"><a class="header-anchor" href="#them-kiem-tra-typescriptreact-vao-cau-hinh-cua-vscode"><span>Thêm kiểm tra typescriptreact vào cấu hình của VSCode</span></a></h4><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;files.eol&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">n&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;editor.tabSize&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;editor.formatOnSave&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;editor.defaultFormatter&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;esbenp.prettier-vscode&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;eslint.autoFixOnSave&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;eslint.validate&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;javascript&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;javascriptreact&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;language&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;typescript&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;autoFix&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;language&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;typescriptreact&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;autoFix&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;typescript.tsdk&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;node_modules/typescript/lib&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="su-dung-phien-ban-typescript-react-cua-quy-tac-eslint-cua-alloyteam" tabindex="-1"><a class="header-anchor" href="#su-dung-phien-ban-typescript-react-cua-quy-tac-eslint-cua-alloyteam"><span>Sử dụng phiên bản TypeScript React của quy tắc ESLint của AlloyTeam</span></a></h4><p><a href="https://github.com/AlloyTeam/eslint-config-alloy#typescript-react" target="_blank" rel="noopener noreferrer">Phiên bản TypeScript React của quy tắc ESLint của AlloyTeam</a></p><h2 id="xu-ly-su-co" tabindex="-1"><a class="header-anchor" href="#xu-ly-su-co"><span>Xử lý sự cố</span></a></h2><h3 id="khong-tim-thay-module-typescript-eslint-parser" tabindex="-1"><a class="header-anchor" href="#khong-tim-thay-module-typescript-eslint-parser"><span>Không tìm thấy module &#39;@typescript-eslint/parser&#39;</span></a></h3><p>Bạn đang chạy eslint toàn cục, cần đổi thành chạy <code>./node_modules/.bin/eslint</code>.</p><h3 id="vscode-khong-hien-thi-loi-cua-eslint" tabindex="-1"><a class="header-anchor" href="#vscode-khong-hien-thi-loi-cua-eslint"><span>VSCode không hiển thị lỗi của ESLint</span></a></h3><ol><li>Kiểm tra xem bạn đã cấu hình đúng trong &quot;File =&gt; Preferences =&gt; Settings&quot; chưa</li><li>Kiểm tra xem các gói npm cần thiết đã được cài đặt chưa</li><li>Kiểm tra xem <code>.eslintrc.js</code> đã được cấu hình chưa</li><li>Kiểm tra xem tệp có nằm trong <code>.eslintignore</code> không</li></ol><p>Nếu tất cả các bước trên đều không hiệu quả, bạn có thể cấu hình <code>&quot;eslint.trace.server&quot;: &quot;messages&quot;</code> trong &quot;File =&gt; Preferences =&gt; Settings&quot;, nhấn <code>Ctrl</code>+<code>Shift</code>+<code>U</code> để mở bảng xuất, sau đó chọn xuất ESLint để xem lỗi cụ thể.</p><h3 id="tai-sao-mot-so-bien-đuoc-đinh-nghia-vi-du-nhu-bien-đuoc-đinh-nghia-bang-enum-khong-đuoc-su-dung-nhung-eslint-lai-khong-bao-loi" tabindex="-1"><a class="header-anchor" href="#tai-sao-mot-so-bien-đuoc-đinh-nghia-vi-du-nhu-bien-đuoc-đinh-nghia-bang-enum-khong-đuoc-su-dung-nhung-eslint-lai-khong-bao-loi"><span>Tại sao một số biến được định nghĩa (ví dụ như biến được định nghĩa bằng <code>enum</code>) không được sử dụng, nhưng ESLint lại không báo lỗi?</span></a></h3><p>Bởi vì không thể hỗ trợ việc kiểm tra định nghĩa biến này. Đề nghị thêm cấu hình sau vào <code>tsconfig.json</code> để quá trình biên dịch <code>tsc</code> có thể kiểm tra được các biến được định nghĩa nhưng không sử dụng:</p><div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;compilerOptions&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;noUnusedLocals&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;noUnusedParameters&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="sau-khi-kich-hoat-nounusedparameters-chi-su-dung-tham-so-thu-hai-nhung-lai-phai-truyen-vao-tham-so-đau-tien-đieu-nay-se-bao-loi" tabindex="-1"><a class="header-anchor" href="#sau-khi-kich-hoat-nounusedparameters-chi-su-dung-tham-so-thu-hai-nhung-lai-phai-truyen-vao-tham-so-đau-tien-đieu-nay-se-bao-loi"><span>Sau khi kích hoạt noUnusedParameters, chỉ sử dụng tham số thứ hai, nhưng lại phải truyền vào tham số đầu tiên, điều này sẽ báo lỗi</span></a></h3><p>Tham số đầu tiên có thể bắt đầu bằng dấu gạch dưới, xem thêm tại <a href="https://github.com/Microsoft/TypeScript/issues/9458" target="_blank" rel="noopener noreferrer">https://github.com/Microsoft/TypeScript/issues/9458</a></p>`,107),l=[e];function o(r,p){return n(),a("div",null,l)}const h=s(t,[["render",o],["__file","lint.html.vue"]]),d=JSON.parse(`{"path":"/programming/ts/engineering/lint.html","title":"Lint","lang":"en-US","frontmatter":{"title":"Lint","tags":["ts"],"categories":["ts"],"date created":"2024-03-15T00:00:00.000Z","date modified":"2024-03-15T00:00:00.000Z","order":1,"description":"Kiểm tra mã Vào tháng 1 năm 2019, [TypeScript chính thức quyết định sử dụng hoàn toàn ESLint] như công cụ kiểm tra mã và tạo ra một dự án mới typescript-eslint, cung cấp bộ phân...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/programming/ts/engineering/lint.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Lint"}],["meta",{"property":"og:description","content":"Kiểm tra mã Vào tháng 1 năm 2019, [TypeScript chính thức quyết định sử dụng hoàn toàn ESLint] như công cụ kiểm tra mã và tạo ra một dự án mới typescript-eslint, cung cấp bộ phân..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"ts"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Lint\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Kiểm tra mã là gì","slug":"kiem-tra-ma-la-gi","link":"#kiem-tra-ma-la-gi","children":[]},{"level":2,"title":"Tại sao cần kiểm tra mã","slug":"tai-sao-can-kiem-tra-ma","link":"#tai-sao-can-kiem-tra-ma","children":[]},{"level":2,"title":"Sử dụng ESLint trong TypeScript","slug":"su-dung-eslint-trong-typescript","link":"#su-dung-eslint-trong-typescript","children":[{"level":3,"title":"Cài đặt ESLint","slug":"cai-đat-eslint","link":"#cai-đat-eslint","children":[]},{"level":3,"title":"Tạo tệp cấu hình","slug":"tao-tep-cau-hinh","link":"#tao-tep-cau-hinh","children":[]},{"level":3,"title":"Kiểm tra một tệp ts","slug":"kiem-tra-mot-tep-ts","link":"#kiem-tra-mot-tep-ts","children":[]},{"level":3,"title":"Kiểm tra tất cả các tệp ts của toàn bộ dự án","slug":"kiem-tra-tat-ca-cac-tep-ts-cua-toan-bo-du-an","link":"#kiem-tra-tat-ca-cac-tep-ts-cua-toan-bo-du-an","children":[]},{"level":3,"title":"Tích hợp kiểm tra ESLint trong VSCode","slug":"tich-hop-kiem-tra-eslint-trong-vscode","link":"#tich-hop-kiem-tra-eslint-trong-vscode","children":[]},{"level":3,"title":"Sử dụng Prettier để sửa lỗi định dạng","slug":"su-dung-prettier-đe-sua-loi-đinh-dang","link":"#su-dung-prettier-đe-sua-loi-đinh-dang","children":[]},{"level":3,"title":"Sử dụng cấu hình ESLint của AlloyTeam","slug":"su-dung-cau-hinh-eslint-cua-alloyteam","link":"#su-dung-cau-hinh-eslint-cua-alloyteam","children":[]},{"level":3,"title":"Sử dụng ESLint để kiểm tra các tệp tsx","slug":"su-dung-eslint-đe-kiem-tra-cac-tep-tsx","link":"#su-dung-eslint-đe-kiem-tra-cac-tep-tsx","children":[]}]},{"level":2,"title":"Xử lý sự cố","slug":"xu-ly-su-co","link":"#xu-ly-su-co","children":[{"level":3,"title":"Không tìm thấy module '@typescript-eslint/parser'","slug":"khong-tim-thay-module-typescript-eslint-parser","link":"#khong-tim-thay-module-typescript-eslint-parser","children":[]},{"level":3,"title":"VSCode không hiển thị lỗi của ESLint","slug":"vscode-khong-hien-thi-loi-cua-eslint","link":"#vscode-khong-hien-thi-loi-cua-eslint","children":[]},{"level":3,"title":"Tại sao một số biến được định nghĩa (ví dụ như biến được định nghĩa bằng enum) không được sử dụng, nhưng ESLint lại không báo lỗi?","slug":"tai-sao-mot-so-bien-đuoc-đinh-nghia-vi-du-nhu-bien-đuoc-đinh-nghia-bang-enum-khong-đuoc-su-dung-nhung-eslint-lai-khong-bao-loi","link":"#tai-sao-mot-so-bien-đuoc-đinh-nghia-vi-du-nhu-bien-đuoc-đinh-nghia-bang-enum-khong-đuoc-su-dung-nhung-eslint-lai-khong-bao-loi","children":[]},{"level":3,"title":"Sau khi kích hoạt noUnusedParameters, chỉ sử dụng tham số thứ hai, nhưng lại phải truyền vào tham số đầu tiên, điều này sẽ báo lỗi","slug":"sau-khi-kich-hoat-nounusedparameters-chi-su-dung-tham-so-thu-hai-nhung-lai-phai-truyen-vao-tham-so-đau-tien-đieu-nay-se-bao-loi","link":"#sau-khi-kich-hoat-nounusedparameters-chi-su-dung-tham-so-thu-hai-nhung-lai-phai-truyen-vao-tham-so-đau-tien-đieu-nay-se-bao-loi","children":[]}]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":11.66,"words":3499},"filePathRelative":"programming/ts/engineering/lint.md","localizedDate":"June 28, 2024","excerpt":"\\n<p>Vào tháng 1 năm 2019, [TypeScript chính thức quyết định sử dụng hoàn toàn ESLint] như công cụ kiểm tra mã và tạo ra một dự án mới <a href=\\"https://github.com/typescript-eslint/typescript-eslint\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">typescript-eslint</a>, cung cấp bộ phân tích cú pháp cho tệp TypeScript <a href=\\"https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">@typescript-eslint/parser</a> và các tùy chọn cấu hình liên quan <a href=\\"https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">@typescript-eslint/eslint-plugin</a> v.v. Trong khi đó, hai giải pháp lint trước đó sẽ không được sử dụng nữa:</p>","autoDesc":true}`);export{h as comp,d as data};
