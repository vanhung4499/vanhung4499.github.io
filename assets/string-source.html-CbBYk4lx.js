import{_ as i,g as l,o as r,c as o,e as t,h as s,f as p,w as e,a}from"./app-BRTHG7K9.js";const c={},k=a(`<h1 id="string-source-code" tabindex="-1"><a class="header-anchor" href="#string-source-code"><span>String Source Code</span></a></h1><p>Hãy xem source code của class <code>String</code> trong Java:</p><h3 id="khai-bao-lop-string" tabindex="-1"><a class="header-anchor" href="#khai-bao-lop-string"><span>Khai báo lớp String</span></a></h3><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    implements</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> java.io.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Comparable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> CharSequence</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>“Đầu tiên, lớp String là <strong>final</strong>, có nghĩa là nó không thể được kế thừa bởi lớp con. Những kiến thức này chúng ta sẽ tìm hiểu khi học về lập trình hướng đối tượng.”</p><p>“Thứ hai, lớp String triển khai interface Serializable, điều này có nghĩa là nó có thể được tuần tự hóa (chúng ta sẽ đề cập đến sau).”</p><p>“Thứ ba, lớp String triển khai interface Comparable, điều này có nghĩa là tốt nhất là không nên sử dụng &#39;==&#39; để so sánh hai chuỗi có bằng nhau hay không, thay vào đó nên sử dụng phương thức <code>compareTo()</code>.”</p><p>Bởi vì &#39;==&#39; được sử dụng để so sánh địa chỉ của hai đối tượng, điều này sẽ được thảo luận chi tiết khi nói về so sánh chuỗi. Nếu chỉ muốn so sánh nội dung của chuỗi, bạn có thể sử dụng phương thức equals của lớp String, mã nguồn và chú thích được hiển thị như sau:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> equals</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Object</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> anObject) {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Kiểm tra xem đây có phải là cùng một đối tượng không, nếu đúng thì trả về true</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> ==</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> anObject) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Kiểm tra xem anObject có phải là một thể hiện của lớp String hay không</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (anObject </span><span style="color:#C678DD;--shiki-dark:#C678DD;">instanceof</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> String) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> anotherString </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (String) anObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Ép kiểu anObject thành kiểu String</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> n </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Lấy độ dài của chuỗi hiện tại</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Kiểm tra xem hai chuỗi có cùng độ dài không</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (n </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> anotherString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            char</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> v1[] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Mảng ký tự của chuỗi hiện tại</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            char</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> v2[] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> anotherString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Mảng ký tự của chuỗi khác</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Chỉ số để duyệt qua từng ký tự trong mảng</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">            // Duyệt qua và so sánh từng ký tự của hai chuỗi</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            while</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (n</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> !=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">                // Nếu có bất kỳ vị trí nào ký tự khác nhau, trả về false</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (v1[i] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> v2[i])</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">                    return</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">++;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            }</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">            // Nếu tất cả các ký tự đều giống nhau, trả về true</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            return</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Nếu anObject không phải là kiểu String hoặc độ dài không bằng nhau, trả về false</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),h=a(`<h3 id="tai-sao-string-sau-nay-đuoc-toi-uu-hoa-tu-mang-char-sang-mang-byte" tabindex="-1"><a class="header-anchor" href="#tai-sao-string-sau-nay-đuoc-toi-uu-hoa-tu-mang-char-sang-mang-byte"><span>Tại sao String sau này được tối ưu hóa từ mảng char sang mảng byte</span></a></h3><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> char</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> value[]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>“Thứ năm, trước Java 9, String được triển khai bằng mảng char, sau đó chuyển sang triển khai bằng mảng byte và thêm trường coder để biểu diễn mã hóa. Lợi ích của việc này là trong các chương trình chủ yếu sử dụng ký tự Latin1, String có thể giảm một nửa lượng bộ nhớ chiếm dụng. Tuy nhiên, không có bữa trưa miễn phí trên thế giới này, cải tiến này mang lại sự tiết kiệm bộ nhớ đồng thời đưa vào chi phí kiểm tra mã hóa.”</p><blockquote><p>Latin1 (Latin-1) là một bộ ký tự đơn byte (tức là mỗi ký tự chỉ sử dụng một byte cho mã hóa), cũng được gọi là ISO-8859-1 (Tiêu chuẩn quốc tế 8859-1), bao gồm tất cả các ký tự được sử dụng trong ngôn ngữ Tây Âu như tiếng Anh, Pháp, Đức, Tây Ban Nha, Bồ Đào Nha, Ý và các ngôn ngữ khác. Trong mã hóa Latin1, mỗi ký tự sử dụng một byte 8-bit, có thể biểu diễn 256 ký tự khác nhau, bao gồm toàn bộ bộ ký tự ASCII từ 0x00 đến 0x7F và các ký tự đặc biệt của các ngôn ngữ Tây Âu như é, ü, ñ và những ký tự khác.</p></blockquote><p>Dưới đây là mã nguồn của lớp String trong JDK 11, chú ý sự khác biệt so với JDK 8.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    implements</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> java.io.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Comparable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> CharSequence</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Stable</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> byte</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> byte</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> coder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> hash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Chuyển từ <code>char[]</code> sang <code>byte[]</code> chủ yếu là để tiết kiệm không gian bộ nhớ của chuỗi. Việc giảm bộ nhớ chiếm dụng mang lại lợi ích là giảm số lần thu gom rác (GC).</p><blockquote><p>GC, hay thu gom rác, được đề cập trong JVM.</p></blockquote><p>Trước hết, trong JVM, mỗi ký tự loại <code>char</code> chiếm 2 byte và sử dụng mã hóa UTF-8, giá trị nằm trong khoảng &#39;\\u0000&#39; (0) đến &#39;\\uffff&#39; (65,535) (bao gồm cả hai giới hạn).</p><p>Tuy nhiên, sử dụng <code>char[]</code> để đại diện cho String dẫn đến việc ngay cả khi mỗi ký tự chỉ cần 1 byte để biểu diễn, vẫn phải sử dụng 2 byte.</p><p>Từ JDK 9 trở đi, để giảm tài nguyên, String được triển khai bằng <code>byte[]</code> và thêm trường <code>coder</code> để xác định mã hóa (Latin-1 hoặc UTF-16). Mã hóa Latin-1 tiết kiệm không gian hơn UTF-8, đặc biệt là đối với các chuỗi chứa chủ yếu các ký tự Latin.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * The identifier of the encoding used to encode the bytes in</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * {@code value}. The supported values in this implementation are</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * LATIN1</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * UTF16</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * @implNote This field is trusted by the VM, and is a subject to</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * constant folding if String instance is constant. Overwriting this</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * field after construction will cause problems.</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> byte</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> coder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>Java sẽ tự động đặt mã hóa thành mã hóa tương ứng dựa trên nội dung của chuỗi, Latin-1 hoặc UTF16.</p><p>Nói cách khác, từ <code>char[]</code> thành <code>byte[]</code>, tiếng Việt là hai byte và tiếng Anh thuần túy là một byte. Trước đó, tiếng Việt là hai byte và tiếng Anh cũng là hai byte .</p><p>Trong UTF-8, các ký tự 0-127 được biểu thị bằng 1 byte, sử dụng cùng mã hóa như ASCII. Chỉ các ký tự có số từ 128 trở lên mới được biểu thị bằng 2, 3 hoặc 4 byte.</p><p>Nếu chỉ có một byte thì bit cao nhất là 0;<br> Nếu có nhiều byte thì byte đầu tiên bắt đầu từ bit cao nhất và nếu có nhiều bit liên tiếp có giá trị 1 thì sử dụng nhiều byte để mã hóa và các byte còn lại bắt đầu bằng 10.</p><p>Những biểu hiện cụ thể là:</p><ul><li>0xxxxxxx: 1 byte;</li><li>110xxxxx 10xxxxxx: Dạng mã hóa 2 byte (hai số 1 đầu tiên);</li><li>1110xxxx 10xxxxxx 10xxxxxx: dạng mã hóa 3 byte (bắt đầu bằng ba số 1);</li><li>11110xxx 10xxxxxx 10xxxxxx 10xxxxxx: dạng mã hóa 4 byte (bắt đầu bằng 4 số 1).</li></ul><p>Nói cách khác, UTF-8 có độ dài thay đổi, điều này rất bất tiện đối với một lớp như String với các phương thức truy cập ngẫu nhiên. Cái gọi là truy cập ngẫu nhiên là phương thức charAt và subString. Nếu bạn chỉ định một số theo ý muốn, String phải có khả năng đưa ra kết quả. Nếu bộ nhớ mà mỗi ký tự trong chuỗi chiếm giữ có độ dài thay đổi thì khi thực hiện truy cập ngẫu nhiên, bạn cần đếm độ dài của từng ký tự ngay từ đầu để tìm được ký tự mình muốn.</p><p>Sau đó, bạn có thể hỏi, UTF-16 cũng có độ dài thay đổi phải không? Một ký tự cũng có thể chiếm 4 byte?</p><p>Thật vậy, UTF-16 sử dụng 2 hoặc 4 byte để lưu trữ ký tự.</p><ul><li>Đối với các ký tự Unicode trong khoảng từ 0 đến FFFF, UTF-16 sử dụng 2 byte để lưu trữ.</li><li>Đối với các ký tự có số Unicode trong khoảng 10000 - 10FFFF, UTF-16 sử dụng 4 byte để lưu trữ, cụ thể: tất cả các bit của số ký tự được chia thành hai phần và các bit cao hơn được sử dụng với giá trị nằm trong khoảng 2-byte lưu trữ giữa D800-DBFF, các bit thấp hơn (các bit còn lại) được lưu trữ trong byte kép có giá trị trong khoảng DC00-DFFF.</li></ul><p>Tuy nhiên, trong Java, mỗi ký tự (char) là 2 byte và các đối tượng String được lưu trữ dưới dạng cặp char. Tất cả các hoạt động trên String, chẳng hạn như <code>charAt</code>, <code>substring</code>, thậm chí cả <code>length</code>, đều được thực hiện dựa trên số lượng các char trong Java.</p><p>Do đó, UTF-16 trong thế giới Java có thể xem như là một loại mã hóa có độ dài cố định.</p><h3 id="phuong-thuc-hashcode-cua-lop-string" tabindex="-1"><a class="header-anchor" href="#phuong-thuc-hashcode-cua-lop-string"><span>Phương thức hashCode của lớp String</span></a></h3><p>&quot;Thứ sáu, mỗi chuỗi đều có một giá trị băm (hash value), khá có thể cao là không trùng lặp, do đó String rất thích hợp để sử dụng làm khóa trong HashMap (chúng ta sẽ thảo luận về điều này chi tiết sau).&quot;</p><p>Hãy cùng nhìn vào phương thức hashCode của lớp String.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> hash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Biến cache để lưu giá trị băm của chuỗi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> hashCode</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> h </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> hash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Lấy giá trị băm từ cache</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Nếu giá trị băm chưa được tính toán (tức là bằng 0) và chuỗi không rỗng, thì tính toán giá trị băm</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (h </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> &gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        char</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> val[] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Lấy mảng ký tự của chuỗi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Tính toán giá trị băm bằng cách lặp qua từng ký tự của chuỗi</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">++</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            h </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 31</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> *</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> h </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> val[i]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Sử dụng số 31 làm hệ số nhân</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        hash </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> h</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Lưu giá trị băm đã tính vào biến cache</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> h</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Trả về giá trị băm</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Phương thức hashCode đầu tiên kiểm tra xem giá trị băm đã được tính toán chưa. Nếu đã có, nó trả về giá trị băm từ cache. Ngược lại, nó tính toán giá trị băm bằng cách lặp qua từng ký tự của chuỗi và sử dụng một phép nhân và cộng hợp lý.</p><p>Cách tính toán này được gọi là &quot;Phương pháp băm nhân 31&quot;. Sau khi tính toán xong, kết quả được lưu trữ trong biến thành viên <code>hash</code> để sử dụng cho các lần gọi hashCode sau này mà không cần tính toán lại. Đây là một dạng tối ưu hóa được gọi là &quot;tính toán lười biếng&quot;.</p><p>Phương pháp &quot;Phương pháp băm nhân 31&quot; là một thuật toán băm chuỗi đơn giản nhưng hiệu quả thường được sử dụng để băm các chuỗi. Ý tưởng cơ bản là nhân từng ký tự của chuỗi với một số nguyên tố nguyên 31 và lũy thừa và cộng chúng lại để có được giá trị băm. Cụ thể, nếu chuỗi được biểu thị là s và có độ dài là n, công thức tính giá trị băm H(s) sẽ là:</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">H</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(s) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (s[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">*</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 31</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">^</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(n</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (s[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#E06C75;--shiki-dark:#E06C75;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">*</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 31</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">^</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(n</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ...</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (s[n</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#E06C75;--shiki-dark:#E06C75;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">*</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 31</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">^</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span></code></pre></div><p>Ở đây, s[i] đại diện cho giá trị mã ASCII của ký tự thứ i trong chuỗi, và <code>^</code> biểu thị cho phép mũ.</p><p>Lợi ích của phương pháp &quot;Phương pháp băm nhân 31&quot; bao gồm tính đơn giản, tốc độ tính toán nhanh và phân phối giá trị băm khá đồng đều trong các bảng băm.</p><p>Bạn có thể mô phỏng phương thức hashCode của String bằng cách sử dụng phương pháp sau:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HashCodeExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> text</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Hung Nguyen&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> hashCode</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> computeHashCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(text);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Giá trị băm của chuỗi </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> text </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> là: &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> hashCode);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Giá trị băm của String: &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hashCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> computeHashCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> h</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(); i++) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            h </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 31</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> *</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> h </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">charAt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(i);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> h;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Hãy xem kết quả:</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>Giá trị băm của chuỗi &quot;Hung Nguyen&quot; là: 782735712</span></span>
<span class="line"><span>Giá trị băm của String: 782735712</span></span></code></pre></div><p>Như bạn có thể thấy, kết quả là giống nhau. Bạn đã học được điều gì mới không?</p><h3 id="phuong-thuc-substring-cua-lop-string" tabindex="-1"><a class="header-anchor" href="#phuong-thuc-substring-cua-lop-string"><span>Phương thức substring của lớp String</span></a></h3><p>Trong lớp String, có một phương thức phổ biến là substring, được sử dụng để cắt lát chuỗi, hãy cùng nhìn vào mã nguồn của nó.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> substring</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> beginIndex) {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Kiểm tra xem chỉ số bắt đầu có nhỏ hơn 0 hay không, nếu có, ném ra ngoại lệ StringIndexOutOfBoundsException</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (beginIndex </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> StringIndexOutOfBoundsException</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(beginIndex)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Tính toán độ dài của chuỗi con</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> subLen </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> beginIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Kiểm tra xem độ dài chuỗi con có là số âm hay không, nếu có, ném ra ngoại lệ StringIndexOutOfBoundsException</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (subLen </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> StringIndexOutOfBoundsException</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(subLen)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Nếu chỉ số bắt đầu là 0, tức là chuỗi con giống với chuỗi gốc, trả về chuỗi gốc; ngược lại, tạo và trả về một chuỗi mới</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (beginIndex </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">?</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> this</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> beginIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> subLen)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>Phương thức substring đầu tiên kiểm tra tính hợp lệ của tham số đầu vào. Nếu tham số không hợp lệ, nó sẽ ném ra ngoại lệ StringIndexOutOfBoundsException (chúng ta sẽ thảo luận chi tiết về ngoại lệ này sau). Tiếp theo, phương thức tính toán độ dài của chuỗi con dựa trên chỉ số bắt đầu. Nếu độ dài của chuỗi con là số âm, nó cũng sẽ ném ra ngoại lệ StringIndexOutOfBoundsException.</p><p>Nếu beginIndex là 0, điều đó có nghĩa là chuỗi con là giống với chuỗi gốc, phương thức sẽ trả về chuỗi gốc. Ngược lại, nó sẽ tạo ra và trả về một đối tượng chuỗi mới từ mảng ký tự <code>value</code> (mảng ký tự của chuỗi gốc), bắt đầu từ chỉ số <code>beginIndex</code> và có độ dài <code>subLen</code>.</p><p>Dưới đây là một vài ví dụ về việc sử dụng phương thức substring:</p><p>① Lấy một đoạn con chuỗi từ vị trí đầu đến vị trí cuối:</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> subStr </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">substring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">12</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">  // Lấy từ ký tự thứ 7 (bao gồm) đến ký tự thứ 12 (không bao gồm)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(subStr);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">  // Kết quả là &quot;world&quot;</span></span></code></pre></div><p>② Lấy tiền tố hoặc hậu tố của chuỗi:</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> prefix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">substring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">  // Lấy 5 ký tự đầu tiên, tức là &quot;Hello&quot;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> suffix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">substring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">     // Lấy từ ký tự thứ 7 đến hết chuỗi, tức là &quot;world!&quot;</span></span></code></pre></div><p>③ Xử lý khoảng trắng và dấu phân cách trong chuỗi:</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;   Hello,   world!  &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> trimmed </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">trim</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">                  // Loại bỏ khoảng trắng ở đầu và cuối chuỗi</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] words </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> trimmed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">split</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">s+&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">       // Tách chuỗi thành mảng các từ dựa trên khoảng trắng</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> firstWord </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> words[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">substring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">  // Lấy ký tự đầu tiên của từ đầu tiên</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(firstWord);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">                // Kết quả là &quot;H&quot;</span></span></code></pre></div><p>④ Xử lý số và ký tự đặc biệt trong chuỗi:</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;1234-5678-9012-3456&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] parts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">split</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;-&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">             // Tách chuỗi thành 4 phần dựa trên dấu gạch ngang</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> last4Digits </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> parts[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#E06C75;--shiki-dark:#E06C75;">]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">substring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">  // Lấy 3 chữ số cuối của phần cuối cùng</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(last4Digits);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">             // Kết quả là &quot;456&quot;</span></span></code></pre></div><p>Tóm lại, phương thức substring cho phép bạn linh hoạt cắt lát chuỗi dựa trên nhu cầu, làm cho việc xử lý chuỗi trở nên tiện lợi hơn nhiều.</p><h3 id="phuong-thuc-indexof-cua-lop-string" tabindex="-1"><a class="header-anchor" href="#phuong-thuc-indexof-cua-lop-string"><span>Phương thức indexOf của lớp String</span></a></h3><p>Phương thức <code>indexOf</code> trong lớp String được sử dụng để tìm kiếm vị trí đầu tiên của một chuỗi con trong chuỗi gốc và trả về chỉ số của vị trí đó. Dưới đây là mã nguồn của phương thức này:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * Tìm kiếm mảng ký tự target trong mảng ký tự source,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * bắt đầu từ vị trí fromIndex của mảng source.</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * sourceOffset và sourceCount xác định phạm vi tìm kiếm trong mảng source,</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * targetOffset và targetCount xác định phạm vi tìm kiếm trong mảng target.</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * Nếu tìm thấy chuỗi target trong mảng source, trả về chỉ số bắt đầu của nó trong mảng source (bắt đầu từ 0),</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> * nếu không tìm thấy, trả về -1.</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> indexOf</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">char</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] source</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sourceOffset</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sourceCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        char</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] target</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> targetOffset</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> targetCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> fromIndex) {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Nếu vị trí bắt đầu tìm kiếm đã vượt quá phạm vi của mảng source, trả về -1 (nếu mảng target rỗng, trả về sourceCount)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (fromIndex </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sourceCount) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (targetCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> ?</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sourceCount </span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Nếu vị trí bắt đầu tìm kiếm nhỏ hơn 0, thì bắt đầu từ vị trí 0</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (fromIndex </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        fromIndex </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Nếu mảng target rỗng, trả về vị trí bắt đầu tìm kiếm</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (targetCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> fromIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Lấy ký tự đầu tiên của mảng target để tìm kiếm</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    char</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> first </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> target[targetOffset]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Tính chỉ số tối đa trong mảng source để tìm kiếm</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> max </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sourceOffset </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (sourceCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> targetCount)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Duyệt từng vị trí trong mảng source để tìm chuỗi target</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    for</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sourceOffset </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> fromIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">++</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Tìm ký tự đầu tiên của mảng target trong mảng source</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (source[i] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> first) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            while</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">++</span><span style="color:#E06C75;--shiki-dark:#E06C75;">i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> max </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> source[i] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> first)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Nếu đã tìm thấy ký tự đầu tiên của mảng target trong mảng source</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> max) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> j </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> end </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> j </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> targetCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">            // Kiểm tra xem các ký tự còn lại của mảng target có khớp với mảng source không</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> k </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> targetOffset </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> j </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> end </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> source[j] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> target[k]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> j</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">++,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> k</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">++</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">            // Nếu tất cả các ký tự của mảng target khớp với mảng source, trả về chỉ số bắt đầu của chuỗi target trong mảng source</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (j </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> end) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">                return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sourceOffset</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Không tìm thấy chuỗi target trong mảng source, trả về -1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Đây là các ví dụ và giải thích về phương thức <code>indexOf</code>:</p><h3 id="vi-du-1-tim-vi-tri-cua-chuoi-con" tabindex="-1"><a class="header-anchor" href="#vi-du-1-tim-vi-tri-cua-chuoi-con"><span>Ví dụ 1: Tìm vị trí của chuỗi con</span></a></h3><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> index </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">indexOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">  // Tìm vị trí xuất hiện đầu tiên của chuỗi &quot;world&quot; trong str</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(index);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // In ra 7</span></span></code></pre></div><p>Trong ví dụ này, chúng ta tìm vị trí đầu tiên mà chuỗi <code>&quot;world&quot;</code> xuất hiện trong <code>str</code>, kết quả là <code>7</code>, vì <code>&quot;world&quot;</code> bắt đầu từ vị trí <code>7</code> trong chuỗi <code>&quot;Hello, world!&quot;</code>.</p><h3 id="vi-du-2-tim-vi-tri-cua-mot-ky-tu-trong-chuoi" tabindex="-1"><a class="header-anchor" href="#vi-du-2-tim-vi-tri-cua-mot-ky-tu-trong-chuoi"><span>Ví dụ 2: Tìm vị trí của một ký tự trong chuỗi</span></a></h3><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> index </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">indexOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">     // Tìm vị trí xuất hiện đầu tiên của dấu phẩy trong str</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(index);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // In ra 5</span></span></code></pre></div><p>Ở đây chúng ta tìm vị trí đầu tiên mà dấu phẩy <code>,</code> xuất hiện trong chuỗi <code>&quot;Hello, world!&quot;</code>, kết quả là <code>5</code>, vì dấu phẩy nằm ở vị trí thứ <code>5</code> trong chuỗi.</p><h3 id="vi-du-3-tim-vi-tri-cua-chuoi-con-tu-mot-vi-tri-nhat-đinh" tabindex="-1"><a class="header-anchor" href="#vi-du-3-tim-vi-tri-cua-chuoi-con-tu-mot-vi-tri-nhat-đinh"><span>Ví dụ 3: Tìm vị trí của chuỗi con từ một vị trí nhất định</span></a></h3><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> index </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">indexOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;l&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">  // Tìm vị trí xuất hiện đầu tiên của chuỗi &quot;l&quot; từ vị trí 3 trong str</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(index);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // In ra 3</span></span></code></pre></div><p>Ở ví dụ này, chúng ta tìm vị trí đầu tiên mà chuỗi <code>&quot;l&quot;</code> xuất hiện từ vị trí <code>3</code> trong chuỗi <code>&quot;Hello, world!&quot;</code>, kết quả là <code>3</code>, vì chuỗi <code>&quot;l&quot;</code> đầu tiên xuất hiện ở vị trí <code>3</code> trong chuỗi.</p><h3 id="vi-du-4-tim-vi-tri-cua-nhieu-chuoi-con" tabindex="-1"><a class="header-anchor" href="#vi-du-4-tim-vi-tri-cua-nhieu-chuoi-con"><span>Ví dụ 4: Tìm vị trí của nhiều chuỗi con</span></a></h3><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> index1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">indexOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;o&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Tìm vị trí xuất hiện đầu tiên của chuỗi &quot;o&quot; trong str</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> index2 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">indexOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;o&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"> // Tìm vị trí xuất hiện đầu tiên của chuỗi &quot;o&quot; từ vị trí 5 trong str</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(index1);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">       // In ra 4</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(index2);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">       // In ra 8</span></span></code></pre></div><p>Trong ví dụ này, chúng ta tìm vị trí đầu tiên mà chuỗi <code>&quot;o&quot;</code> xuất hiện trong chuỗi <code>&quot;Hello, world!&quot;</code>, kết quả là <code>4</code>. Sau đó, chúng ta tìm vị trí đầu tiên mà chuỗi <code>&quot;o&quot;</code> xuất hiện từ vị trí <code>5</code> trong chuỗi <code>&quot;Hello, world!&quot;</code>, kết quả là <code>8</code>.</p><p>Dưới đây là phiên bản dịch từ tiếng Trung sang tiếng Việt của đoạn văn bạn đã cung cấp:</p><hr><h3 id="cac-phuong-thuc-khac-cua-lop-string" tabindex="-1"><a class="header-anchor" href="#cac-phuong-thuc-khac-cua-lop-string"><span>Các phương thức khác của lớp String</span></a></h3><ol><li><p>Ví dụ như <code>length()</code> được sử dụng để trả về độ dài của chuỗi.</p></li><li><p>Ví dụ như <code>isEmpty()</code> được sử dụng để kiểm tra xem chuỗi có rỗng không.</p></li><li><p>Ví dụ như <code>charAt()</code> được sử dụng để trả về ký tự tại chỉ số được chỉ định.</p></li><li><p>Ví dụ như <code>valueOf()</code> được sử dụng để chuyển đổi các kiểu dữ liệu khác thành chuỗi.</p></li></ol><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">valueOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">123</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">  // Chuyển đổi số nguyên 123 thành chuỗi</span></span></code></pre></div><p>Phía sau phương thức <code>valueOf</code>, thực tế là gọi phương thức <code>toString</code> của lớp bao bọc. Ví dụ, chuyển đổi số nguyên thành chuỗi gọi phương thức <code>toString</code> của lớp <code>Integer</code>.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> valueOf</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(i);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>Và phương thức <code>toString</code> của lớp <code>Integer</code> sau đó gọi phương thức tĩnh <code>toString</code>.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> toString</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i) {</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Giá trị nhỏ nhất trả về &quot;-2147483648&quot;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">MIN_VALUE</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;-2147483648&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Độ dài của số nguyên, độ dài của số âm giảm đi 1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> size </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">?</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> stringSize</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">i) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> stringSize</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(i)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Sao chép số nguyên vào mảng ký tự</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    char</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] buf </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> char</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[size]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Quá trình sao chép cụ thể</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    getChars</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> buf)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Trả về chuỗi bằng cách tạo mới từ mảng ký tự</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(buf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>Về phương thức <code>getChars</code>, đây là quá trình sao chép số nguyên vào mảng ký tự, chi tiết này sẽ không mở rộng ở đây.</p><ol start="5"><li>Ví dụ như <code>getBytes()</code> được sử dụng để trả về mảng byte của chuỗi, có thể chỉ định mã hóa, ví dụ như:</li></ol><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> text </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Hùng&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Arrays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">StandardCharsets</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">UTF_8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)));</span></span></code></pre></div><ol start="6"><li>Ví dụ như <code>trim()</code> được sử dụng để loại bỏ các ký tự khoảng trắng ở hai đầu chuỗi, xem mã nguồn:</li></ol><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> trim</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> len </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> st </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    char</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] val </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    /* Tránh opcode getfield */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    while</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ((st </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> len) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (val[st] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39; &#39;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        st</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">++;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    while</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ((st </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> len) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (val[len </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39; &#39;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        len</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ((st </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">||</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (len </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">?</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> substring</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(st</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> len) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>Ví dụ: <code>&quot; java &quot;.trim()</code> sẽ trả về &quot;java&quot;.</p><p>Ngoài ra, còn có các phương thức như <a href="/programming/java/string/split">split</a>, <a href="/programming/java/string/equals">equals</a>, <a href="/programming/java/string/join">join</a> và nhiều phương thức khác, chúng ta sẽ cụ thể hơn trong các bài viết sau.</p>`,86);function d(B,y){const n=l("RouteLink");return r(),o("div",null,[k,t("p",null,[s("“Thứ tư, "),p(n,{to:"/programming/java/string/builder-buffer.html"},{default:e(()=>[s("String và StringBuffer, StringBuilder")]),_:1}),s(" đều thực thi interface CharSequence, vì vậy chúng là những người anh em gần gũi nhau. Bởi vì String là không thay đổi, vì vậy khi cần ghép chuỗi, bạn có thể xem xét hai người anh em tốt hơn là StringBuffer và StringBuilder, vì chúng là có thể thay đổi.”")]),h])}const u=i(c,[["render",d],["__file","string-source.html.vue"]]),E=JSON.parse('{"path":"/programming/java/string/string-source.html","title":"String Source Code","lang":"en-US","frontmatter":{"title":"String Source Code","tags":["java"],"categories":["java"],"order":1,"description":"String Source Code Hãy xem source code của class String trong Java: Khai báo lớp String “Đầu tiên, lớp String là final, có nghĩa là nó không thể được kế thừa bởi lớp con. Những ...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/programming/java/string/string-source.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"String Source Code"}],["meta",{"property":"og:description","content":"String Source Code Hãy xem source code của class String trong Java: Khai báo lớp String “Đầu tiên, lớp String là final, có nghĩa là nó không thể được kế thừa bởi lớp con. Những ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-04T09:37:15.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:modified_time","content":"2024-07-04T09:37:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"String Source Code\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-04T09:37:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":3,"title":"Khai báo lớp String","slug":"khai-bao-lop-string","link":"#khai-bao-lop-string","children":[]},{"level":3,"title":"Tại sao String sau này được tối ưu hóa từ mảng char sang mảng byte","slug":"tai-sao-string-sau-nay-đuoc-toi-uu-hoa-tu-mang-char-sang-mang-byte","link":"#tai-sao-string-sau-nay-đuoc-toi-uu-hoa-tu-mang-char-sang-mang-byte","children":[]},{"level":3,"title":"Phương thức hashCode của lớp String","slug":"phuong-thuc-hashcode-cua-lop-string","link":"#phuong-thuc-hashcode-cua-lop-string","children":[]},{"level":3,"title":"Phương thức substring của lớp String","slug":"phuong-thuc-substring-cua-lop-string","link":"#phuong-thuc-substring-cua-lop-string","children":[]},{"level":3,"title":"Phương thức indexOf của lớp String","slug":"phuong-thuc-indexof-cua-lop-string","link":"#phuong-thuc-indexof-cua-lop-string","children":[]},{"level":3,"title":"Ví dụ 1: Tìm vị trí của chuỗi con","slug":"vi-du-1-tim-vi-tri-cua-chuoi-con","link":"#vi-du-1-tim-vi-tri-cua-chuoi-con","children":[]},{"level":3,"title":"Ví dụ 2: Tìm vị trí của một ký tự trong chuỗi","slug":"vi-du-2-tim-vi-tri-cua-mot-ky-tu-trong-chuoi","link":"#vi-du-2-tim-vi-tri-cua-mot-ky-tu-trong-chuoi","children":[]},{"level":3,"title":"Ví dụ 3: Tìm vị trí của chuỗi con từ một vị trí nhất định","slug":"vi-du-3-tim-vi-tri-cua-chuoi-con-tu-mot-vi-tri-nhat-đinh","link":"#vi-du-3-tim-vi-tri-cua-chuoi-con-tu-mot-vi-tri-nhat-đinh","children":[]},{"level":3,"title":"Ví dụ 4: Tìm vị trí của nhiều chuỗi con","slug":"vi-du-4-tim-vi-tri-cua-nhieu-chuoi-con","link":"#vi-du-4-tim-vi-tri-cua-nhieu-chuoi-con","children":[]},{"level":3,"title":"Các phương thức khác của lớp String","slug":"cac-phuong-thuc-khac-cua-lop-string","link":"#cac-phuong-thuc-khac-cua-lop-string","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1720085835000,"contributors":[{"name":"Hung Nguyen","email":"vanhung4499@gmail.com","commits":2}]},"readingTime":{"minutes":15.72,"words":4717},"filePathRelative":"programming/java/string/string-source.md","localizedDate":"June 28, 2024","excerpt":"\\n<p>Hãy xem source code của class <code>String</code> trong Java:</p>\\n<h3>Khai báo lớp String</h3>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\">public</span><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\"> final</span><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\"> class</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\"> String</span></span>\\n<span class=\\"line\\"><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\">    implements</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\"> java.io.</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">Serializable</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">,</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\"> Comparable</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">String</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">&gt;,</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\"> CharSequence</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n</div>","autoDesc":true}');export{u as comp,E as data};
