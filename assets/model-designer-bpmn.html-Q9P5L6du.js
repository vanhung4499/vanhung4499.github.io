import{_ as o,g as s,o as l,c as p,e as d,a as i,h as e,f as r,w as a}from"./app-5QVbWi7Z.js";const E={};function c(g,t){const n=s("RouteLink");return l(),p("div",null,[t[20]||(t[20]=d("h1",{id:"流程设计器-bpmn",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#流程设计器-bpmn"},[d("span",null,"流程设计器（BPMN）")])],-1)),t[21]||(t[21]=d("p",null,"相关视频：",-1)),d("ul",null,[t[7]||(t[7]=i('<li><a href="https://t.zsxq.com/04iynUF6e" target="_blank" rel="noopener noreferrer">05、如何实现流程模型的新建？</a></li><li><a href="https://t.zsxq.com/04rNVbEQB" target="_blank" rel="noopener noreferrer">06、如何实现流程模型的流程图的设计？</a></li><li><a href="https://t.zsxq.com/042neybYz" target="_blank" rel="noopener noreferrer">07、如何实现流程模型的流程图的预览？</a></li><li><a href="https://t.zsxq.com/04jUBMjyF" target="_blank" rel="noopener noreferrer">09、如何实现流程模型的发布？</a></li><li><a href="https://t.zsxq.com/04MF6URvz" target="_blank" rel="noopener noreferrer">10、如何实现流程定义的查询？</a></li>',5)),d("li",null,[t[2]||(t[2]=d("a",{href:"https://t.zsxq.com/04R72rzzN",target:"_blank",rel:"noopener noreferrer"},"21、如何实现流程的流程图的高亮？",-1)),t[3]||(t[3]=d("br",null,null,-1)),t[4]||(t[4]=e(" 在 ")),r(n,{to:"/bpm/use-bpm-form/"},{default:a(()=>t[0]||(t[0]=[e("《审批接入（流程表单）》")])),_:1}),t[5]||(t[5]=e("、")),r(n,{to:"/bpm/use-business-form/"},{default:a(()=>t[1]||(t[1]=[e("《审批接入（业务表单）》")])),_:1}),t[6]||(t[6]=e(" 小节中，我们已经新建过流程模型，并发布为流程定义，如下图所示："))])]),t[22]||(t[22]=i('<figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/示例流程.png" alt="示例流程" tabindex="0" loading="lazy"><figcaption>示例流程</figcaption></figure><p>本文，我们将进一步讲解【<strong>流程模型</strong>】、【<strong>流程定义</strong>】，特别是如何使用 BPMN 流程设计器。</p><h2 id="_1-流程模型" tabindex="-1"><a class="header-anchor" href="#_1-流程模型"><span><a href="#_1-%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B">#</a> 1. 流程模型</span></a></h2><p>流程模型，对应 [工作流程 -&gt; 流程管理 -&gt; 流程模型] 菜单，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/功能演示/管理后台.png" alt="流程模型" tabindex="0" loading="lazy"><figcaption>流程模型</figcaption></figure><ul><li>后端，由 BpmModelController 提供接口</li><li>前端，由 <code>/views/bpm/model/index.vue</code> 实现界面</li></ul><h3 id="_1-1-表结构" tabindex="-1"><a class="header-anchor" href="#_1-1-表结构"><span><a href="#_1-1-%E8%A1%A8%E7%BB%93%E6%9E%84">#</a> 1.1 表结构</span></a></h3><p>流程设计模型部署表，由 Flowable 提供的 <code>ACT_RE_MODEL</code> 表实现，如下所示：</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(255)</td><td></td><td>√</td><td>名称</td></tr><tr><td>KEY_</td><td>KEY_</td><td>nvarchar(255)</td><td></td><td>√</td><td>key</td></tr><tr><td>CATEGORY_</td><td>分类</td><td>nvarchar(255)</td><td></td><td>√</td><td>分类</td></tr><tr><td>CREATE_TIME_</td><td>创建时间</td><td>datetime</td><td></td><td>√</td><td>创建时间</td></tr><tr><td>LAST_UPDATE_TIME_</td><td>最新修改时间</td><td>datetime</td><td></td><td>√</td><td>最新修改时间</td></tr><tr><td>VERSION_</td><td>版本</td><td>int</td><td></td><td>√</td><td>版本</td></tr><tr><td>META_INFO_</td><td>META_INFO_</td><td>nvarchar(255)</td><td></td><td>√</td><td>以 json 格式保存流程定义的信息</td></tr><tr><td>DEPLOYMENT_ID_</td><td>部署ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>部署ID</td></tr><tr><td>EDITOR_SOURCE_VALUE_ID_</td><td></td><td>datetime</td><td></td><td>√</td><td></td></tr><tr><td>EDITOR_SOURCE_EXTRA_VALUE_ID_</td><td></td><td>datetime</td><td></td><td>√</td><td></td></tr></tbody></table><p>我们可以通过 <code>META_INFO</code> 字段，额外拓展了 <code>icon</code> 图标、<code>description</code> 描述、<code>formType</code>、<code>formId</code>、<code>formCustomCreatePath</code>、<code>formCustomViewPath</code> 表单等信息。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/META_INFO.png" alt="模型的拓展字段" tabindex="0" loading="lazy"><figcaption>模型的拓展字段</figcaption></figure><h3 id="_1-2-流程设计器" tabindex="-1"><a class="header-anchor" href="#_1-2-流程设计器"><span><a href="#_1-2-%E6%B5%81%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%99%A8">#</a> 1.2 流程设计器</span></a></h3><p>① BPMN 流程设计器，由项目的 <a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/components/bpmnProcessDesigner/package/designer/ProcessDesigner.vue" target="_blank" rel="noopener noreferrer">ProcessDesigner.vue</a> 实现。</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/流程设计器.png" alt="流程设计器" tabindex="0" loading="lazy"><figcaption>流程设计器</figcaption></figure><p>它是基于 <a href="https://github.com/miyuesc/bpmn-process-designer" target="_blank" rel="noopener noreferrer">https://github.com/miyuesc/bpmn-process-designer</a> 拓展，底层是 <a href="https://github.com/bpmn-io" target="_blank" rel="noopener noreferrer">bpmn-js</a>。</p><p>补充说明：</p><p><code>bpmn-process-designer</code> 提供 Vue2 + ElementUI、Vue3 + NaiveUI 两个版本，而我们是 Vue3 + ElementPlus，是通过 Vue2 + ElementUI 迁移适配实现。</p><p>② BPMN 预览，支持高亮，由 <a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/components/bpmnProcessDesigner/package/designer/ProcessViewer.vue" target="_blank" rel="noopener noreferrer">ProcessViewer.vue</a> 实现。</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/流程预览.png" alt="流程预览" tabindex="0" loading="lazy"><figcaption>流程预览</figcaption></figure><p>它是直接基于 <a href="https://github.com/bpmn-io" target="_blank" rel="noopener noreferrer">bpmn-js</a> 拓展，没有基于 <code>bpmn-process-designer</code>。</p><hr><p>下面，我们将详细讲解 BPMN 流程设计器的各个配置项：任务（表单）、任务（审批人）、多实例（会签配置）、执行监听器、任务监听器等等。</p><h3 id="_1-3-任务-表单" tabindex="-1"><a class="header-anchor" href="#_1-3-任务-表单"><span><a href="#_1-3-%E4%BB%BB%E5%8A%A1-%E8%A1%A8%E5%8D%95">#</a> 1.3 任务（表单）</span></a></h3><h4 id="_1-3-1-表单配置" tabindex="-1"><a class="header-anchor" href="#_1-3-1-表单配置"><span><a href="#_1-3-1-%E8%A1%A8%E5%8D%95%E9%85%8D%E7%BD%AE">#</a> 1.3.1 表单配置</span></a></h4><p>每个任务节点，有个 [表单] 配置项，用于配置任务审批时，补充填写表单信息。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/流程设计器的表单配置.png" alt="流程设计器的表单配置.png" tabindex="0" loading="lazy"><figcaption>流程设计器的表单配置.png</figcaption></figure><p>拓展知识：</p><p>① 问题：配置的表单，最终是怎么存储的？</p><p>回答：在 BPMN 的 UserTask 节点上，有个 <code>formKey</code> 属性，用于存储表单的 key，这里我们就存了【流程表单】的编号。</p><p>② 问题：为什么只支持【流程表单】，不支持【业务表单】呢？</p><p>回答：【业务表单】暂时没想到比较优雅的二次修改方案，因为它属于业务系统，无法在审批通过时，一起进行提交。</p><p>③ 问题：表单设计器，怎么使用远程数据？</p><p>回答：参见 <a href="https://docs.qq.com/doc/DZlNIVkZSTlVJVEd2" target="_blank" rel="noopener noreferrer">https://docs.qq.com/doc/DZlNIVkZSTlVJVEd2</a> 文档。</p><h4 id="_1-3-2-表单效果" tabindex="-1"><a class="header-anchor" href="#_1-3-2-表单效果"><span><a href="#_1-3-2-%E8%A1%A8%E5%8D%95%E6%95%88%E6%9E%9C">#</a> 1.3.2 表单效果</span></a></h4><p>在审批任务通过时，需要额外填写表单信息，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/流程设计器的表单效果.png" alt="流程设计器的表单效果.png" tabindex="0" loading="lazy"><figcaption>流程设计器的表单效果.png</figcaption></figure><p>填写的表单数据，会存储到 Flowable 任务的 <code>variables</code> 中，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/流程设计器的表单数据.png" alt="流程设计器的表单数据" tabindex="0" loading="lazy"><figcaption>流程设计器的表单数据</figcaption></figure><h3 id="_1-4-任务-审批人" tabindex="-1"><a class="header-anchor" href="#_1-4-任务-审批人"><span><a href="#_1-4-%E4%BB%BB%E5%8A%A1-%E5%AE%A1%E6%89%B9%E4%BA%BA">#</a> 1.4 任务（审批人）</span></a></h3><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程设计器的审批人配置.png" alt="流程设计器的审批人配置.png" tabindex="0" loading="lazy"><figcaption>流程设计器的审批人配置.png</figcaption></figure>',40)),d("p",null,[t[9]||(t[9]=e("详细见 ")),r(n,{to:"/bpm/assignee/"},{default:a(()=>t[8]||(t[8]=[e("《选择审批人、发起人自选》")])),_:1}),t[10]||(t[10]=e(" 文档。"))]),t[23]||(t[23]=d("h3",{id:"_1-5-多实例-会签配置",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#_1-5-多实例-会签配置"},[d("span",null,[d("a",{href:"#_1-5-%E5%A4%9A%E5%AE%9E%E4%BE%8B-%E4%BC%9A%E7%AD%BE%E9%85%8D%E7%BD%AE"},"#"),e(" 1.5 多实例（会签配置）")])])],-1)),t[24]||(t[24]=d("figure",null,[d("img",{src:"https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/流程设计器的会签配置.png",alt:"流程设计器的会签配置",tabindex:"0",loading:"lazy"}),d("figcaption",null,"流程设计器的会签配置")],-1)),d("p",null,[t[12]||(t[12]=e("详细见 ")),r(n,{to:"/bpm/multi-instance/"},{default:a(()=>t[11]||(t[11]=[e("《会签、或签、依次审批》")])),_:1}),t[13]||(t[13]=e(" 文档。"))]),t[25]||(t[25]=d("h3",{id:"_1-6-执行监听器",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#_1-6-执行监听器"},[d("span",null,[d("a",{href:"#_1-6-%E6%89%A7%E8%A1%8C%E7%9B%91%E5%90%AC%E5%99%A8"},"#"),e(" 1.6 执行监听器")])])],-1)),t[26]||(t[26]=d("figure",null,[d("img",{src:"https://doc.iocoder.cn/img/工作流手册/流程表达式/BpmTaskAssignStartUserExpressionConfig.png",alt:"BpmTaskAssignStartUserExpressionConfig",tabindex:"0",loading:"lazy"}),d("figcaption",null,"BpmTaskAssignStartUserExpressionConfig")],-1)),d("p",null,[t[15]||(t[15]=e("详细见 ")),r(n,{to:"/bpm/listener/"},{default:a(()=>t[14]||(t[14]=[e("《执行监听器、任务监听器》")])),_:1}),t[16]||(t[16]=e(" 文档。"))]),t[27]||(t[27]=d("h3",{id:"_1-7-任务监听器",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#_1-7-任务监听器"},[d("span",null,[d("a",{href:"#_1-7-%E4%BB%BB%E5%8A%A1%E7%9B%91%E5%90%AC%E5%99%A8"},"#"),e(" 1.7 任务监听器")])])],-1)),t[28]||(t[28]=d("figure",null,[d("img",{src:"https://doc.iocoder.cn/img/工作流手册/监听器/DemoDelegateClassTaskListenerConfig.png",alt:"配置监听器",tabindex:"0",loading:"lazy"}),d("figcaption",null,"配置监听器")],-1)),d("p",null,[t[18]||(t[18]=e("详细见 ")),r(n,{to:"/bpm/listener/"},{default:a(()=>t[17]||(t[17]=[e("《执行监听器、任务监听器》")])),_:1}),t[19]||(t[19]=e(" 文档。"))]),t[29]||(t[29]=i('<h2 id="_2-流程定义" tabindex="-1"><a class="header-anchor" href="#_2-流程定义"><span><a href="#_2-%E6%B5%81%E7%A8%8B%E5%AE%9A%E4%B9%89">#</a> 2. 流程定义</span></a></h2><p>流程模型在部署后，会创建一个新版本的流程定义，并怪气老版本的流程定义。最终，我们点击某个流程模型的「流程定义」按钮，可以看到它对应的流程定义，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/流程定义.png" alt="流程定义" tabindex="0" loading="lazy"><figcaption>流程定义</figcaption></figure><ul><li>后端，由 BpmProcessDefinitionController 提供接口</li><li>前端，由 <a href="https://github.com/yudaocode/yudao-ui-admin-vue3" target="_blank" rel="noopener noreferrer"><code>/views/bpm/definition/index.vue</code></a> 实现界面</li></ul><h3 id="_2-1-表结构" tabindex="-1"><a class="header-anchor" href="#_2-1-表结构"><span><a href="#_2-1-%E8%A1%A8%E7%BB%93%E6%9E%84">#</a> 2.1 表结构</span></a></h3><p>① 流程定义表，由 Flowable 提供的 <code>ACT_RE_PROCDEF</code> 表实现，如下所示：</p><table><thead><tr><th>字段</th><th>类型</th><th>主键</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>ID_</td><td>NVARCHAR2(64)</td><td>Y</td><td>主键</td><td></td></tr><tr><td>REV_</td><td>INTEGER</td><td>N</td><td>数据版本号</td><td></td></tr><tr><td>CATEGORY_</td><td>NVARCHAR2(255)</td><td>N</td><td>流程定义分类</td><td>读取 xml 文件中程的 <code>targetNamespace</code> 值</td></tr><tr><td>NAME_</td><td>NVARCHAR2(255)</td><td>N</td><td>流程定义的名称</td><td>读取流程文件中 <code>process</code>元素的 <code>name</code> 属性</td></tr><tr><td>KEY_</td><td>NVARCHAR2(255)</td><td>N</td><td>流程定义key</td><td>读取流程文件中 <code>process</code> 元素的 id 属性</td></tr><tr><td>VERSION_</td><td>INTEGER</td><td>N</td><td>版本</td><td></td></tr><tr><td>DEPLOYMENT_ID_</td><td>NVARCHAR2(64)</td><td>N</td><td>部署ID</td><td>流程定义对应的部署数据 ID</td></tr><tr><td>RESOURCE_NAME_</td><td>NVARCHAR2(2000)</td><td>N</td><td>bpmn文件名称</td><td>一般为流程文件的相对路径</td></tr><tr><td>DGRM_RESOURCE_NAME_</td><td>VARCHAR2(4000)</td><td>N</td><td>流程定义对应的流程图资源名称</td><td></td></tr><tr><td>DESCRIPTION_</td><td>NVARCHAR2(2000)</td><td>N</td><td>说明</td><td></td></tr><tr><td>HAS_START_FORM_KEY_</td><td>NUMBER(1)</td><td>N</td><td>是否存在开始节点formKey</td><td><code>start</code> 节点是否存在 <code>formKey</code>：0-否，1-是</td></tr><tr><td>HAS_GRAPHICAL_NOTATION_</td><td>NUMBER(1)</td><td>N</td><td></td><td></td></tr><tr><td>SUSPENSION_STATE_</td><td>INTEGER</td><td>N</td><td>流程定义状态</td><td>1-激活、2中止</td></tr><tr><td>TENANT_ID_</td><td>NVARCHAR2(255)</td><td>N</td><td></td><td></td></tr><tr><td>ENGINE_VERSION_</td><td>NVARCHAR2(255)</td><td>N</td><td></td><td>引擎版本</td></tr></tbody></table><p>② 由于 <code>ACT_RE_PROCDEF</code> 表没有类似 <code>ACT_RE_MODEL</code> 有 <code>META_INFO_</code> 字段，所以我们额外创建了一个 BPM 流程定义的信息表，用于存储流程定义的额外信息。如下所示：</p><blockquote><p>省略 creator/create_time/updater/update_time/deleted/tenant_id 等通用字段</p></blockquote><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>CREATE TABLE `bpm_process_definition_info` (</span></span>\n<span class="line"><span>  `id` bigint NOT NULL AUTO_INCREMENT COMMENT &#39;编号&#39;,</span></span>\n<span class="line"><span>  `process_definition_id` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;流程定义的编号&#39;,</span></span>\n<span class="line"><span>  `model_id` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;流程模型的编号&#39;,</span></span>\n<span class="line"><span>  `icon` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;图标&#39;,</span></span>\n<span class="line"><span>  `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;描述&#39;,</span></span>\n<span class="line"><span>  `form_type` tinyint NOT NULL COMMENT &#39;表单类型&#39;,</span></span>\n<span class="line"><span>  `form_id` bigint DEFAULT NULL COMMENT &#39;表单编号&#39;,</span></span>\n<span class="line"><span>  `form_conf` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;表单的配置&#39;,</span></span>\n<span class="line"><span>  `form_fields` varchar(5000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;表单项的数组&#39;,</span></span>\n<span class="line"><span>  `form_custom_create_path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;自定义表单的提交路径&#39;,</span></span>\n<span class="line"><span>  `form_custom_view_path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;自定义表单的查看路径&#39;,</span></span>\n<span class="line"><span>  PRIMARY KEY (`id`) USING BTREE</span></span>\n<span class="line"><span>) ENGINE=InnoDB AUTO_INCREMENT=246 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;BPM 流程定义的信息表&#39;;</span></span></code></pre></div><p>本质上，就是把 <code>ACT_RE_MODEL</code> 的 <code>META_INFO_</code> 字段存储到 <code>bpm_process_definition_info</code> 表中。</p><p>因此，最终每次流程模型在部署时，会往 Flowable 插入一条 <code>ACT_RE_PROCDEF</code> 记录，也会往 <code>bpm_process_definition_info</code> 表中插入一条记录。</p><h3 id="_2-2-流程定义列表-可发起流程" tabindex="-1"><a class="header-anchor" href="#_2-2-流程定义列表-可发起流程"><span><a href="#_2-2-%E6%B5%81%E7%A8%8B%E5%AE%9A%E4%B9%89%E5%88%97%E8%A1%A8-%E5%8F%AF%E5%8F%91%E8%B5%B7%E6%B5%81%E7%A8%8B">#</a> 2.2 流程定义列表（可发起流程）</span></a></h3><p>注意！一个流程模型，有且仅有一个【激活】状态的流程定义。最终，用户发起流程时，选择的是【激活】状态的流程定义。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/激活的流程定义.png" alt="激活的流程定义" tabindex="0" loading="lazy"><figcaption>激活的流程定义</figcaption></figure>',15))])}const m=o(E,[["render",c],["__file","model-designer-bpmn.html.vue"]]),u=JSON.parse('{"path":"/project/rouyi-vue-pro/bpm/model-designer-bpmn.html","title":"流程设计器（BPMN）","lang":"en-US","frontmatter":{"title":"流程设计器（BPMN）","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":65,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 流程模型","slug":"_1-流程模型","link":"#_1-流程模型","children":[{"level":3,"title":"# 1.1 表结构","slug":"_1-1-表结构","link":"#_1-1-表结构","children":[]},{"level":3,"title":"# 1.2 流程设计器","slug":"_1-2-流程设计器","link":"#_1-2-流程设计器","children":[]},{"level":3,"title":"# 1.3 任务（表单）","slug":"_1-3-任务-表单","link":"#_1-3-任务-表单","children":[]},{"level":3,"title":"# 1.4 任务（审批人）","slug":"_1-4-任务-审批人","link":"#_1-4-任务-审批人","children":[]},{"level":3,"title":"# 1.5 多实例（会签配置）","slug":"_1-5-多实例-会签配置","link":"#_1-5-多实例-会签配置","children":[]},{"level":3,"title":"# 1.6 执行监听器","slug":"_1-6-执行监听器","link":"#_1-6-执行监听器","children":[]},{"level":3,"title":"# 1.7 任务监听器","slug":"_1-7-任务监听器","link":"#_1-7-任务监听器","children":[]}]},{"level":2,"title":"# 2. 流程定义","slug":"_2-流程定义","link":"#_2-流程定义","children":[{"level":3,"title":"# 2.1 表结构","slug":"_2-1-表结构","link":"#_2-1-表结构","children":[]},{"level":3,"title":"# 2.2 流程定义列表（可发起流程）","slug":"_2-2-流程定义列表-可发起流程","link":"#_2-2-流程定义列表-可发起流程","children":[]}]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":8.44,"words":2531},"filePathRelative":"project/rouyi-vue-pro/bpm/model-designer-bpmn.md","localizedDate":"July 7, 2024"}');export{m as comp,u as data};
