import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as i,a as s,b as a,e as n}from"./app-C-_dXKvP.js";const e={},r=s("h2",{id:"_1-gioi-thieu-ve-sap-xep-topo",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-gioi-thieu-ve-sap-xep-topo"},[s("span",null,"1. Giới thiệu về sắp xếp topo")])],-1),p=s("blockquote",null,[s("p",null,[s("strong",null,"Sắp xếp topo (Topological Sorting)"),a(": Là phương pháp sắp xếp tuyến tính các đỉnh của đồ thị có hướng không chu trình (DAG), sao cho đối với mọi cặp đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" và "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),a(", nếu có cạnh hướng từ "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" đến "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),a(", thì "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" phải xuất hiện trước "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),a(". Chuỗi tuyến tính của các đỉnh của đồ thị sau khi sắp xếp topo được gọi là sắp xếp topo.")])],-1),o=s("p",null,"Sắp xếp topo áp dụng cho đồ thị có hướng không chu trình (DAG), không áp dụng cho đồ thị vô hướng và đồ thị có hướng có chu trình.",-1),c=s("figure",null,[s("img",{src:"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230504153553.png",alt:"20230504153553.png",tabindex:"0",loading:"lazy"}),s("figcaption",null,"20230504153553.png")],-1),h=s("p",null,[a("Như hình trên là một ví dụ về đồ thị có hướng không chu trình (DAG), "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"v"),s("mn",null,"1")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"2")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"3")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"4")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"5")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"6")])]),s("annotation",{encoding:"application/x-tex"},"v_1 \\rightarrow v_2 \\rightarrow v_3 \\rightarrow v_4 \\rightarrow v_5 \\rightarrow v_6")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"5")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"6")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" là một chuỗi sắp xếp topo của đồ thị này. Đồng thời, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"v"),s("mn",null,"1")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"2")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"3")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"4")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"6")]),s("mo",null,"→"),s("msub",null,[s("mi",null,"v"),s("mn",null,"5")])]),s("annotation",{encoding:"application/x-tex"},"v_1 \\rightarrow v_2 \\rightarrow v_3 \\rightarrow v_4 \\rightarrow v_6 \\rightarrow v_5")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"6")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"5")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" cũng là một chuỗi sắp xếp topo của đồ thị này. Tức là đối với một đồ thị có hướng không chu trình, có thể có nhiều chuỗi sắp xếp topo.")],-1),m=s("h2",{id:"_2-cach-trien-khai-sap-xep-topo",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-cach-trien-khai-sap-xep-topo"},[s("span",null,"2. Cách triển khai sắp xếp topo")])],-1),d=s("p",null,'Sắp xếp topo có hai phương pháp triển khai, đó là "Thuật toán Kahn" và "Thuật toán DFS tìm kiếm theo chiều sâu". Tiếp theo chúng ta sẽ đi xem cách thức triển khai của từng phương pháp.',-1),k=s("h3",{id:"_2-1-thuat-toan-kahn",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-1-thuat-toan-kahn"},[s("span",null,"2.1 Thuật toán Kahn")])],-1),u=s("blockquote",null,[s("p",null,[s("strong",null,"Ý tưởng cơ bản của thuật toán Kahn"),a(":")]),s("ol",null,[s("li",null,[a("Liên tục tìm các đỉnh có bậc vào bằng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" trong đồ thị có hướng, và đưa chúng ra.")]),s("li",null,[a("Sau đó xóa các đỉnh có bậc vào bằng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" và các cạnh có hướng xuất phát từ các đỉnh đó.")]),s("li",null,[a("Lặp lại quá trình trên cho đến khi đồ thị trống hoặc không tìm thấy đỉnh có bậc vào bằng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" nào.")])])],-1),y=s("h4",{id:"_2-1-1-cac-buoc-trien-khai-cua-thuat-toan-kahn",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-1-1-cac-buoc-trien-khai-cua-thuat-toan-kahn"},[s("span",null,"2.1.1 Các bước triển khai của thuật toán Kahn")])],-1),g=s("ol",null,[s("li",null,[a("Sử dụng mảng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"e"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"indegrees")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"in"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"rees")])])]),a(" để ghi nhận bậc vào của các đỉnh trong đồ thị.")]),s("li",null,[a("Duy trì một tập hợp các đỉnh có bậc vào bằng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(") (có thể sử dụng stack, queue, priority queue).")]),s("li",null,[a("Mỗi lần lấy ra một đỉnh không có đỉnh tiền nhiệm (tức bậc vào bằng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(") từ tập hợp, đưa nó vào chuỗi sắp xếp topo ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"o"),s("mi",null,"r"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"order")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er")])])]),a(").")]),s("li",null,[a("Xóa đỉnh đó khỏi đồ thị và xóa các cạnh có hướng xuất phát từ đỉnh đó. Nếu bậc vào của đỉnh kết thúc là "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(", đưa đỉnh đó vào tập hợp "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(".")]),s("li",null,[a("Lặp lại quá trình trên cho đến khi tập hợp "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(" trống hoặc còn đỉnh trong đồ thị chưa được duyệt qua (đồng nghĩa với việc tồn tại chu trình, không thể tạo thành chuỗi sắp xếp topo).")]),s("li",null,[a("Nếu không tồn tại chu trình, thì thứ tự các đỉnh trong "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"o"),s("mi",null,"r"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"order")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er")])])]),a(" chính là kết quả của sắp xếp topo.")])],-1),B=n(`<h4 id="_2-1-2-code-trien-khai-thuat-toan-kahn" tabindex="-1"><a class="header-anchor" href="#_2-1-2-code-trien-khai-thuat-toan-kahn"><span>2.1.2 Code triển khai thuật toán Kahn</span></a></h4><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> collections</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> Solution</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    # Sắp xếp topo, đồ thị chứa tất cả các cạnh hướng của các đỉnh (bao gồm cả đỉnh không có cạnh)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> topologicalSortingKahn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">graph</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#56B6C2;">dict</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        indegrees </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {u: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph}   </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># indegrees dùng để ghi nhận bậc vào của các đỉnh</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph:</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph[u]:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">           # Đếm số lượng đỉnh vào của tất cả các đỉnh</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">        # Đưa các đỉnh có bậc vào bằng 0 vào tập hợp S</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        S </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> collections.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">deque</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">([u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees </span><span style="color:#D73A49;--shiki-dark:#C678DD;">if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees[u] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        order </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []                          </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># order dùng để lưu chuỗi sắp xếp topo</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        while</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> S:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            u </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> S.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">pop</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()                     </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Lấy ra một đỉnh không có đỉnh tiền nhiệm</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            order.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)                 </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Đưa đỉnh đó vào chuỗi sắp xếp topo order</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph[u]:              </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Duyệt qua các đỉnh kề v của đỉnh u</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">-=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">           # Xóa cạnh hướng xuất phát từ đỉnh u</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">                if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:       </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Nếu bậc vào của đỉnh v kết thúc là 0</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                    S.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(v)             </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Đưa đỉnh v vào tập hợp S</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        if</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> len</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(indegrees) </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">!=</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> len</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(order):    </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Còn đỉnh chưa duyệt qua (tồn tại chu trình), không thể tạo thành chuỗi sắp xếp topo</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> order                        </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Trả về chuỗi sắp xếp topo</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> findOrder</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">n</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#56B6C2;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">edges</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">        # Xây dựng đồ thị</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        graph </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> dict</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> range</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(n):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            graph[i] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u, v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> edges:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            graph[u].</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(v)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">topologicalSortingKahn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(graph)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-thuat-toan-sap-xep-topo-dua-tren-dfs" tabindex="-1"><a class="header-anchor" href="#_2-2-thuat-toan-sap-xep-topo-dua-tren-dfs"><span>2.2 Thuật toán sắp xếp topo dựa trên DFS</span></a></h3>`,3),v=s("blockquote",null,[s("p",null,[s("strong",null,"Ý tưởng cơ bản của thuật toán sắp xếp topo dựa trên DFS"),a(":")]),s("ol",null,[s("li",null,[a("Đối với mỗi đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(", ta triển khai duyệt theo chiều sâu từ đỉnh đó theo các cạnh hướng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"<"),s("mi",null,"u"),s("mo",{separator:"true"},","),s("mi",null,"v"),s("mo",null,">")]),s("annotation",{encoding:"application/x-tex"},"<u, v>")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7335em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">")])])]),a(". Nếu tất cả các đỉnh kề "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),a(" của đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" đã được duyệt qua, thì khi quay lại đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(", đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" phải đứng trước tất cả các đỉnh kề "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),a(" của nó trong chuỗi sắp xếp topo.")]),s("li",null,"Như vậy, khi ta duyệt qua mỗi đỉnh và triển khai duyệt theo chiều sâu, ta sẽ đưa đỉnh đó vào stack. Cuối cùng, từ đỉnh đầu stack đến đỉnh cuối stack sẽ là một chuỗi sắp xếp topo.")])],-1),A=s("h4",{id:"_2-2-1-cac-buoc-trien-khai-cua-thuat-toan-sap-xep-topo-dua-tren-dfs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-2-1-cac-buoc-trien-khai-cua-thuat-toan-sap-xep-topo-dua-tren-dfs"},[s("span",null,"2.2.1 Các bước triển khai của thuật toán sắp xếp topo dựa trên DFS")])],-1),x=s("ol",null,[s("li",null,[a("Sử dụng tập hợp "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"i"),s("mi",null,"t"),s("mi",null,"e"),s("mi",null,"d")]),s("annotation",{encoding:"application/x-tex"},"visited")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"d")])])]),a(" để ghi nhận xem đỉnh hiện tại đã được duyệt qua hay chưa, tránh việc duyệt qua lại.")]),s("li",null,[a("Sử dụng tập hợp "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"o"),s("mi",null,"n"),s("mi",null,"S"),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"c"),s("mi",null,"k")]),s("annotation",{encoding:"application/x-tex"},"onStack")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"St"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),a(" để ghi nhận xem đỉnh hiện tại đã được duyệt qua trong cùng một lần duyệt theo chiều sâu hay chưa. Nếu đỉnh hiện tại đã được duyệt qua trong cùng một lần duyệt theo chiều sâu, có nghĩa là đồ thị có chu trình và không thể tạo thành chuỗi sắp xếp topo.")]),s("li",null,[a("Sử dụng biến boolean "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"h"),s("mi",null,"a"),s("mi",null,"s"),s("mi",null,"C"),s("mi",null,"y"),s("mi",null,"c"),s("mi",null,"l"),s("mi",null,"e")]),s("annotation",{encoding:"application/x-tex"},"hasCycle")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"ha"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mord mathnormal"},"yc"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e")])])]),a(" để kiểm tra xem đồ thị có chu trình hay không.")]),s("li",null,[a("Bắt đầu từ một đỉnh chưa được duyệt qua. "),s("ol",null,[s("li",null,"Nếu đỉnh hiện tại đã được duyệt qua trong cùng một lần duyệt theo chiều sâu, có nghĩa là đồ thị có chu trình."),s("li",null,"Nếu đỉnh hiện tại đã được duyệt qua hoặc có chu trình, không cần tiếp tục duyệt, trả về kết quả.")])]),s("li",null,[a("Đánh dấu đỉnh hiện tại là đã được duyệt qua và đã được duyệt qua trong cùng một lần duyệt theo chiều sâu. Sau đó, duyệt theo chiều sâu từ đỉnh hiện tại theo các cạnh hướng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"<"),s("mi",null,"u"),s("mo",{separator:"true"},","),s("mi",null,"v"),s("mo",null,">")]),s("annotation",{encoding:"application/x-tex"},"<u, v>")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7335em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">")])])]),a(".")]),s("li",null,[a("Khi tất cả các đỉnh kề "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),a(" của đỉnh hiện tại "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" đã được duyệt qua, quay lại đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" và đưa đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" vào stack.")]),s("li",null,"Hủy đánh dấu đỉnh hiện tại đã được duyệt qua trong cùng một lần duyệt theo chiều sâu."),s("li",null,[a("Lặp lại các bước "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"4"),s("mo",null,"∼"),s("mn",null,"7")]),s("annotation",{encoding:"application/x-tex"},"4 \\sim 7")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"7")])])]),a(" cho tất cả các đỉnh chưa được duyệt qua, cho đến khi tất cả các đỉnh đã được duyệt qua hoặc có chu trình.")]),s("li",null,"Nếu không có chu trình, đảo ngược stack và lấy các đỉnh từ đỉnh đầu stack đến đỉnh cuối stack, kết quả chính là chuỗi sắp xếp topo.")],-1),D=n(`<h4 id="_2-2-2-code-trien-khai-thuat-toan-sap-xep-topo-dua-tren-dfs" tabindex="-1"><a class="header-anchor" href="#_2-2-2-code-trien-khai-thuat-toan-sap-xep-topo-dua-tren-dfs"><span>2.2.2 Code triển khai thuật toán sắp xếp topo dựa trên DFS</span></a></h4><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> collections</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> Solution</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    # Sắp xếp topo, đồ thị chứa tất cả các cạnh hướng của các đỉnh (bao gồm cả đỉnh không có cạnh)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> topologicalSortingDFS</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">graph</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#56B6C2;">dict</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        visited </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> set</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()                     </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Ghi nhận xem đỉnh đã được duyệt qua hay chưa</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        onStack </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> set</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()                     </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Ghi nhận xem đỉnh đã được duyệt qua trong cùng một lần duyệt theo chiều sâu hay chưa</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        order </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []                          </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Dùng để lưu chuỗi sắp xếp topo</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        hasCycle </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> False</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">                    # Kiểm tra xem đồ thị có chu trình hay không</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> dfs</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">u</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            nonlocal</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> hasCycle</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> onStack:                </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Nếu đỉnh đã được duyệt qua trong cùng một lần duyệt theo chiều sâu, có nghĩa là đồ thị có chu trình</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                hasCycle </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> True</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> visited </span><span style="color:#D73A49;--shiki-dark:#C678DD;">or</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> hasCycle:    </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Nếu đỉnh đã được duyệt qua hoặc có chu trình, không cần tiếp tục duyệt, trả về kết quả</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">                return</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            visited.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)                  </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Đánh dấu đỉnh đã được duyệt qua</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            onStack.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)                  </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Đánh dấu đỉnh đã được duyệt qua trong cùng một lần duyệt theo chiều sâu</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph[u]:              </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Duyệt qua các đỉnh kề v của đỉnh u</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#61AFEF;">                dfs</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(v)                      </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Duyệt theo chiều sâu đỉnh v</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                    </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            order.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)                 </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Đưa đỉnh u vào stack</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            onStack.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">remove</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)               </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Hủy đánh dấu đỉnh đã được duyệt qua trong cùng một lần duyệt theo chiều sâu</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph:</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">not</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> visited:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#61AFEF;">                dfs</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)                      </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Duyệt qua các đỉnh chưa được duyệt qua</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> hasCycle:                        </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Kiểm tra xem có chu trình hay không</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []                       </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Có chu trình, không thể tạo thành chuỗi sắp xếp topo</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        order.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">reverse</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()                     </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Đảo ngược stack và lấy các đỉnh từ đỉnh đầu stack đến đỉnh cuối stack</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> order                        </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Trả về chuỗi sắp xếp topo</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> findOrder</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">n</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#56B6C2;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">edges</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">        # Xây dựng đồ thị</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        graph </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> dict</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> range</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(n):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            graph[i] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v, u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> edges:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            graph[u].</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(v)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">topologicalSortingDFS</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(graph)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-ung-dung-cua-sap-xep-topo" tabindex="-1"><a class="header-anchor" href="#_3-ung-dung-cua-sap-xep-topo"><span>3. Ứng dụng của sắp xếp topo</span></a></h2><p>Sắp xếp topo có thể được sử dụng để giải quyết một số vấn đề liên quan đến sự phụ thuộc, như thứ tự thực hiện dự án, thứ tự chọn môn học, v.v.</p><h3 id="_3-1-bang-mon-hoc-ii" tabindex="-1"><a class="header-anchor" href="#_3-1-bang-mon-hoc-ii"><span>3.1 Bảng môn học II</span></a></h3><h4 id="_3-1-1-lien-ket-đe-bai" tabindex="-1"><a class="header-anchor" href="#_3-1-1-lien-ket-đe-bai"><span>3.1.1 Liên kết đề bài</span></a></h4><ul><li><a href="https://leetcode.com/problems/course-schedule-ii/" target="_blank" rel="noopener noreferrer">210. Course Schedule II</a></li></ul><h4 id="_3-1-2-tom-tat-đe-bai" tabindex="-1"><a class="header-anchor" href="#_3-1-2-tom-tat-đe-bai"><span>3.1.2 Tóm tắt đề bài</span></a></h4>`,8),E=s("p",null,[s("strong",null,"Mô tả"),a(": Cho một số nguyên "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"C"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"r"),s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"numCourses")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"rses")])])]),a(", đại diện cho số lượng môn học phải chọn trong học kỳ này, các môn học được đánh số từ "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" đến "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"C"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"r"),s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"s"),s("mo",null,"−"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"numCourses - 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"rses"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(". Cho một mảng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"p"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"q"),s("mi",null,"u"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"i"),s("mi",null,"t"),s("mi",null,"e"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"prerequisites")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.854em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"rere"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"es")])])]),a(" biểu thị mối quan hệ tiên quyết giữa các môn học, trong đó "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"p"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"q"),s("mi",null,"u"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"i"),s("mi",null,"t"),s("mi",null,"e"),s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mo",{stretchy:"false"},"["),s("mi",null,"a"),s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"b"),s("mi",null,"i"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"prerequisites[i] = [ai, bi]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"rere"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"es"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"ai"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"bi"),s("span",{class:"mclose"},"]")])])]),a(" có nghĩa là để học môn "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"ai")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord mathnormal"},"ai")])])]),a(", phải hoàn thành môn "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"b"),s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"bi")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"bi")])])]),a(" trước.")],-1),b=n(`<p><strong>Yêu cầu</strong>: Trả về thứ tự học các môn để hoàn thành tất cả các môn học. Nếu có nhiều thứ tự đúng, chỉ cần trả về một trong số đó. Nếu không thể hoàn thành tất cả các môn học, trả về một mảng rỗng.</p><p><strong>Giải thích</strong>:</p><ul><li>Ví dụ 1:</li></ul><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Input: numCourses </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, prerequisites </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Output: [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Explanation: Tổng cộng có </span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> môn học. Để học môn </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, bạn phải hoàn thành môn </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> trước. Do đó, thứ tự học đúng là [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">].</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Ví dụ 2:</li></ul><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Input: numCourses </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, prerequisites </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Output: [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Explanation: Tổng cộng có </span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> môn học. Để học môn </span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, bạn phải hoàn thành môn </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> và môn </span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> trước. Và môn </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> và môn </span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> phải được xếp sau môn </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">. Do đó, một thứ tự học đúng là [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]. Một thứ tự học khác là [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">].</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-3-y-tuong-giai-quyet" tabindex="-1"><a class="header-anchor" href="#_3-1-3-y-tuong-giai-quyet"><span>3.1.3 Ý tưởng giải quyết</span></a></h4><h5 id="y-tuong-1-sap-xep-topo" tabindex="-1"><a class="header-anchor" href="#y-tuong-1-sap-xep-topo"><span>Ý tưởng 1: Sắp xếp topo</span></a></h5>`,8),F=s("p",null,[a('Bài toán này là phiên bản nâng cấp của bài toán "207. Course Schedule". Chỉ cần thêm một mảng '),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"o"),s("mi",null,"r"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"order")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er")])])]),a(" để lưu trữ thứ tự học.")],-1),C=s("ol",null,[s("li",null,[a("Sử dụng bảng băm "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"p"),s("mi",null,"h")]),s("annotation",{encoding:"application/x-tex"},"graph")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"h")])])]),a(" để lưu trữ đồ thị môn học và đếm số lượng đỉnh vào, lưu vào danh sách "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"e"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"indegrees")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"in"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"rees")])])]),a(".")]),s("li",null,[a("Sử dụng hàng đợi "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(" để đưa tất cả các đỉnh có độ vào bằng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" vào hàng đợi.")]),s("li",null,[a("Chọn một đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" từ hàng đợi và thêm nó vào mảng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"o"),s("mi",null,"r"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"order")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er")])])]),a(".")]),s("li",null,[a("Xóa đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u")]),s("annotation",{encoding:"application/x-tex"},"u")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"u")])])]),a(" khỏi đồ thị và xóa các cạnh đi ra từ đỉnh đó ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"<"),s("mi",null,"u"),s("mo",{separator:"true"},","),s("mi",null,"v"),s("mo",null,">")]),s("annotation",{encoding:"application/x-tex"},"<u, v>")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7335em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">")])])]),a("). Nếu đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v")]),s("annotation",{encoding:"application/x-tex"},"v")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),a(" có độ vào bằng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),a(" sau khi xóa cạnh, thêm nó vào hàng đợi "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(".")]),s("li",null,"Lặp lại bước 3 và 4 cho đến khi hàng đợi không còn đỉnh nào."),s("li",null,[a("Kiểm tra xem tổng số đỉnh và số đỉnh trong thứ tự topo có bằng nhau không. Nếu bằng nhau, trả về mảng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"o"),s("mi",null,"r"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"order")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er")])])]),a(", ngược lại, trả về một mảng rỗng.")])],-1),w=n(`<h5 id="y-tuong-1-code" tabindex="-1"><a class="header-anchor" href="#y-tuong-1-code"><span>Ý tưởng 1: Code</span></a></h5><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> collections</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> Solution</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    # Sắp xếp topo, graph chứa tất cả các cạnh hướng (bao gồm các đỉnh không có cạnh)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> topologicalSortingKahn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">graph</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#56B6C2;">dict</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        indegrees </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {u: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph}   </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># indegrees dùng để lưu trữ độ vào của tất cả các đỉnh</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph:</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph[u]:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">           # Đếm số lượng đỉnh vào</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">        # Thêm các đỉnh có độ vào bằng 0 vào hàng đợi S</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        S </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> collections.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">deque</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">([u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees </span><span style="color:#D73A49;--shiki-dark:#C678DD;">if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees[u] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        order </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []                          </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># order dùng để lưu trữ thứ tự topo</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        while</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> S:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            u </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> S.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">pop</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()                     </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Chọn một đỉnh không có đỉnh tiền đề từ hàng đợi S</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            order.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)                 </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Thêm đỉnh vào thứ tự topo order</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph[u]:              </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Duyệt qua các đỉnh kề v của đỉnh u</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">-=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">           # Xóa cạnh hướng từ đỉnh u</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">                if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:       </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Nếu sau khi xóa cạnh, đỉnh v có độ vào bằng 0</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                    S.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(v)             </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Thêm đỉnh vào hàng đợi S</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        if</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> len</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(indegrees) </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">!=</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> len</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(order):    </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Còn đỉnh chưa được duyệt (có chu trình), không thể tạo thành thứ tự topo</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> order                        </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Trả về thứ tự topo</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> findOrder</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">numCourses</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#56B6C2;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">prerequisites</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        graph </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> dict</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> range</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(numCourses):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            graph[i] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v, u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> prerequisites:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            graph[u].</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(v)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">topologicalSortingKahn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(graph)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="y-tuong-1-phan-tich-đo-phuc-tap" tabindex="-1"><a class="header-anchor" href="#y-tuong-1-phan-tich-đo-phuc-tap"><span>Ý tưởng 1: Phân tích độ phức tạp</span></a></h5>`,3),f=s("ul",null,[s("li",null,[s("strong",null,"Độ phức tạp thời gian"),a(": "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"+"),s("mi",null,"m"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n + m)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mclose"},")")])])]),a(", trong đó "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" là số lượng môn học và "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m")])])]),a(" là số lượng yêu cầu tiên quyết.")]),s("li",null,[s("strong",null,"Độ phức tạp không gian"),a(": "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"+"),s("mi",null,"m"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n + m)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mclose"},")")])])]),a(".")])],-1),M=n('<h3 id="_3-2-tim-trang-thai-an-toan-cuoi-cung" tabindex="-1"><a class="header-anchor" href="#_3-2-tim-trang-thai-an-toan-cuoi-cung"><span>3.2 Tìm trạng thái an toàn cuối cùng</span></a></h3><h4 id="_3-2-1-lien-ket-đe-bai" tabindex="-1"><a class="header-anchor" href="#_3-2-1-lien-ket-đe-bai"><span>3.2.1 Liên kết đề bài</span></a></h4><ul><li><a href="https://leetcode.com/problems/find-eventual-safe-states/" target="_blank" rel="noopener noreferrer">802. Find Eventual Safe States</a></li></ul><h4 id="_3-2-2-tom-tat-đe-bai" tabindex="-1"><a class="header-anchor" href="#_3-2-2-tom-tat-đe-bai"><span>3.2.2 Tóm tắt đề bài</span></a></h4>',4),_=s("p",null,[s("strong",null,"Mô tả"),a(": Cho một đồ thị có hướng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"p"),s("mi",null,"h")]),s("annotation",{encoding:"application/x-tex"},"graph")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"h")])])]),a(", trong đó "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"p"),s("mi",null,"h"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"graph[i]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]")])])]),a(" là danh sách các đỉnh kề với đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord mathnormal"},"i")])])]),a(", có nghĩa là từ đỉnh "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord mathnormal"},"i")])])]),a(" có một cạnh đi đến mỗi đỉnh trong "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"p"),s("mi",null,"h"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"graph[i]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]")])])]),a(".")],-1),S=s("p",null,[s("strong",null,"Yêu cầu"),a(": Tìm tất cả các đỉnh an toàn trong đồ thị và trả về chúng dưới dạng một mảng được sắp xếp theo thứ tự tăng dần.")],-1),L=s("p",null,[s("strong",null,"Giải thích"),a(":")],-1),q=s("ul",null,[s("li",null,[s("strong",null,"Đỉnh cuối"),a(": Nếu một đỉnh không có cạnh đi ra, thì nó là đỉnh cuối. Nghĩa là, nếu không có cạnh đi ra, thì đỉnh đó là đỉnh cuối.")]),s("li",null,[s("strong",null,"Đỉnh an toàn"),a(": Nếu tất cả các đường đi có thể từ đỉnh đó đến đỉnh cuối, thì đỉnh đó là đỉnh an toàn.")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mo",null,"="),s("mo",null,"="),s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"p"),s("mi",null,"h"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"n"),s("mi",null,"g"),s("mi",null,"t"),s("mi",null,"h")]),s("annotation",{encoding:"application/x-tex"},"n == graph.length")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"=="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"h")])])]),a(".")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mo",null,"≤"),s("mi",null,"n"),s("mo",null,"≤"),s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"4")])]),s("annotation",{encoding:"application/x-tex"},"1 \\le n \\le 10^4")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7804em","vertical-align":"-0.136em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≤"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7719em","vertical-align":"-0.136em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≤"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])])])])])])])])]),a(".")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0"),s("mo",null,"≤"),s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"p"),s("mi",null,"h"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"n"),s("mi",null,"g"),s("mi",null,"t"),s("mi",null,"h"),s("mo",null,"≤"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"0 \\le graph[i].length \\le n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7804em","vertical-align":"-0.136em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≤"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≤"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(".")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0"),s("mo",null,"≤"),s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"p"),s("mi",null,"h"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},"["),s("mi",null,"j"),s("mo",{stretchy:"false"},"]"),s("mo",null,"≤"),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"0 \\le graph[i][j] \\le n - 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7804em","vertical-align":"-0.136em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≤"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≤"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(".")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"p"),s("mi",null,"h"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"graph[i]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]")])])]),a(" được sắp xếp theo thứ tự tăng dần.")]),s("li",null,"Đồ thị có thể chứa các chu trình."),s("li",null,[a("Số cạnh trong đồ thị nằm trong khoảng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mn",null,"4"),s("mo",null,"×"),s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"4")]),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"[1, 4 \\times 10^4]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])])])])])]),s("span",{class:"mclose"},"]")])])]),a(".")])],-1),z=n(`<p><strong>Ví dụ</strong>:</p><ul><li>Ví dụ 1:</li></ul><figure><img src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/17/picture1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Đầu vào: graph </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[],[]]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Đầu ra: [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">6</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Giải thích: Như hình minh họa.</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Đỉnh </span><span style="color:#005CC5;--shiki-dark:#D19A66;">5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> và đỉnh </span><span style="color:#005CC5;--shiki-dark:#D19A66;">6</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> là đỉnh cuối vì chúng không có cạnh đi ra.</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Tất cả các đường đi từ đỉnh </span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> và </span><span style="color:#005CC5;--shiki-dark:#D19A66;">6</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> đều dẫn đến đỉnh </span><span style="color:#005CC5;--shiki-dark:#D19A66;">5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> hoặc </span><span style="color:#005CC5;--shiki-dark:#D19A66;">6</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Ví dụ 2:</li></ul><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Đầu vào: graph </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],[]]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Đầu ra: [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Giải thích:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">Chỉ có đỉnh </span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> là đỉnh cuối, tất cả các đường đi từ đỉnh </span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> đều dẫn đến đỉnh </span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-3-y-tuong-giai-quyet" tabindex="-1"><a class="header-anchor" href="#_3-2-3-y-tuong-giai-quyet"><span>3.2.3 Ý tưởng giải quyết</span></a></h4><h5 id="y-tuong-1-sap-xep-topo-1" tabindex="-1"><a class="header-anchor" href="#y-tuong-1-sap-xep-topo-1"><span>Ý tưởng 1: Sắp xếp topo</span></a></h5><ol><li>Dựa vào yêu cầu đề bài, các đỉnh an toàn tương ứng với các đỉnh cuối có bậc ra bằng 0. Đồng thời, các đỉnh an toàn đều không thuộc chu trình.</li><li>Chúng ta có thể sử dụng thuật toán sắp xếp topo để kiểm tra xem một đỉnh có thuộc chu trình hay không.</li><li>Để tìm các đỉnh an toàn, chúng ta có thể sử dụng cách xây dựng đồ thị ngược. Điều này có nghĩa là chúng ta đảo ngược tất cả các cạnh trong đồ thị ban đầu. Điều này sẽ biến các đỉnh cuối có bậc ra bằng 0 thành các đỉnh có bậc vào bằng 0.</li><li>Sau đó, chúng ta sử dụng thuật toán sắp xếp topo để loại bỏ các đỉnh có bậc vào bằng 0. Nếu một đỉnh không thuộc chu trình, thì cuối cùng bậc vào của nó sẽ bằng 0. Các đỉnh này chính là các đỉnh an toàn. Các đỉnh thuộc chu trình sẽ có bậc vào khác 0.</li><li>Cuối cùng, chúng ta lưu trữ tất cả các đỉnh an toàn vào một mảng và trả về mảng đó.</li></ol><h5 id="y-tuong-1-code-1" tabindex="-1"><a class="header-anchor" href="#y-tuong-1-code-1"><span>Ý tưởng 1: Code</span></a></h5><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> Solution</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    # Sắp xếp topo, graph chứa tất cả các cạnh hướng của các đỉnh (bao gồm cả đỉnh không có cạnh)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> topologicalSortingKahn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">graph</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#56B6C2;">dict</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        indegrees </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {u: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph}   </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># indegrees dùng để ghi nhận bậc vào của tất cả các đỉnh</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph:</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph[u]:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">           # Đếm số lượng cạnh vào của tất cả các đỉnh</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">        # Đưa các đỉnh có bậc vào bằng 0 vào tập hợp S</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        S </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> collections.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">deque</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">([u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees </span><span style="color:#D73A49;--shiki-dark:#C678DD;">if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees[u] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        while</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> S:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            u </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> S.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">pop</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()                     </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Chọn một đỉnh không có đỉnh tiền nhiệm trong tập hợp S</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph[u]:              </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Duyệt qua các đỉnh kề v của đỉnh u</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">-=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">           # Xóa cạnh hướng từ đỉnh u đến đỉnh v</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">                if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees[v] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:       </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Nếu sau khi xóa cạnh đó, bậc vào của đỉnh v trở thành 0</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                    S.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(v)             </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Đưa đỉnh v vào tập hợp S</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        res </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees:</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> indegrees[u] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                res.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> res</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> eventualSafeNodes</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">graph</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: List[List[</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]]) -&gt; List[</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        graph_dict </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {u: [] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> range</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">len</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(graph))}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> u </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> range</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">len</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(graph)):</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> v </span><span style="color:#D73A49;--shiki-dark:#C678DD;">in</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> graph[u]:</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                graph_dict[v].</span><span style="color:#24292E;--shiki-dark:#61AFEF;">append</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(u)     </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># Xây dựng đồ thị ngược</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> self</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">topologicalSortingKahn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(graph_dict)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="y-tuong-1-phan-tich-đo-phuc-tap-1" tabindex="-1"><a class="header-anchor" href="#y-tuong-1-phan-tich-đo-phuc-tap-1"><span>Ý tưởng 1: Phân tích độ phức tạp</span></a></h5>`,12),T=s("ul",null,[s("li",null,[s("strong",null,"Độ phức tạp thời gian"),a(": "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"+"),s("mi",null,"m"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n + m)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mclose"},")")])])]),a(", trong đó "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" là số lượng đỉnh trong đồ thị, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m")])])]),a(" là số lượng cạnh trong đồ thị.")]),s("li",null,[s("strong",null,"Độ phức tạp không gian"),a(": "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"+"),s("mi",null,"m"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n + m)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mclose"},")")])])]),a(".")])],-1),N=[r,p,o,c,h,m,d,k,u,y,g,B,v,A,x,D,E,b,F,C,w,f,M,_,S,L,q,z,T];function O(G,K){return i(),t("div",null,N)}const X=l(e,[["render",O],["__file","Topological Sorting.html.vue"]]),H=JSON.parse('{"path":"/dsa/algo/graph/traversal/Topological%20Sorting.html","title":"Topological Sorting","lang":"en-US","frontmatter":{"title":"Topological Sorting","order":5,"tags":["algorithm"],"categories":["algorithm"],"description":"1. Giới thiệu về sắp xếp topo Sắp xếp topo (Topological Sorting): Là phương pháp sắp xếp tuyến tính các đỉnh của đồ thị có hướng không chu trình (DAG), sao cho đối với mọi cặp đ...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/dsa/algo/graph/traversal/Topological%20Sorting.html"}],["meta",{"property":"og:site_name","content":"vanhung4499"}],["meta",{"property":"og:title","content":"Topological Sorting"}],["meta",{"property":"og:description","content":"1. Giới thiệu về sắp xếp topo Sắp xếp topo (Topological Sorting): Là phương pháp sắp xếp tuyến tính các đỉnh của đồ thị có hướng không chu trình (DAG), sao cho đối với mọi cặp đ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230504153553.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-20T12:02:51.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:modified_time","content":"2024-06-20T12:02:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Topological Sorting\\",\\"image\\":[\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230504153553.png\\",\\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/17/picture1.png\\"],\\"dateModified\\":\\"2024-06-20T12:02:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\",\\"email\\":\\"vanhung4499@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"1. Giới thiệu về sắp xếp topo","slug":"_1-gioi-thieu-ve-sap-xep-topo","link":"#_1-gioi-thieu-ve-sap-xep-topo","children":[]},{"level":2,"title":"2. Cách triển khai sắp xếp topo","slug":"_2-cach-trien-khai-sap-xep-topo","link":"#_2-cach-trien-khai-sap-xep-topo","children":[{"level":3,"title":"2.1 Thuật toán Kahn","slug":"_2-1-thuat-toan-kahn","link":"#_2-1-thuat-toan-kahn","children":[]},{"level":3,"title":"2.2 Thuật toán sắp xếp topo dựa trên DFS","slug":"_2-2-thuat-toan-sap-xep-topo-dua-tren-dfs","link":"#_2-2-thuat-toan-sap-xep-topo-dua-tren-dfs","children":[]}]},{"level":2,"title":"3. Ứng dụng của sắp xếp topo","slug":"_3-ung-dung-cua-sap-xep-topo","link":"#_3-ung-dung-cua-sap-xep-topo","children":[{"level":3,"title":"3.1 Bảng môn học II","slug":"_3-1-bang-mon-hoc-ii","link":"#_3-1-bang-mon-hoc-ii","children":[]},{"level":3,"title":"3.2 Tìm trạng thái an toàn cuối cùng","slug":"_3-2-tim-trang-thai-an-toan-cuoi-cung","link":"#_3-2-tim-trang-thai-an-toan-cuoi-cung","children":[]}]}],"git":{"createdTime":1718884971000,"updatedTime":1718884971000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":13.39,"words":4016},"filePathRelative":"dsa/algo/graph/traversal/Topological Sorting.md","localizedDate":"June 20, 2024","excerpt":"<h2>1. Giới thiệu về sắp xếp topo</h2>\\n<blockquote>\\n<p><strong>Sắp xếp topo (Topological Sorting)</strong>: Là phương pháp sắp xếp tuyến tính các đỉnh của đồ thị có hướng không chu trình (DAG), sao cho đối với mọi cặp đỉnh <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\"application/x-tex\\">u</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\">u</span></span></span></span> và <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\"application/x-tex\\">v</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.03588em;\\">v</span></span></span></span>, nếu có cạnh hướng từ <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\"application/x-tex\\">u</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\">u</span></span></span></span> đến <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\"application/x-tex\\">v</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.03588em;\\">v</span></span></span></span>, thì <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\\"application/x-tex\\">u</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\">u</span></span></span></span> phải xuất hiện trước <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\\"application/x-tex\\">v</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.03588em;\\">v</span></span></span></span>. Chuỗi tuyến tính của các đỉnh của đồ thị sau khi sắp xếp topo được gọi là sắp xếp topo.</p>\\n</blockquote>","autoDesc":true}');export{X as comp,H as data};
