import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as n,e as i}from"./app-C-_dXKvP.js";const l={},e=i(`<h1 id="hello-typescript" tabindex="-1"><a class="header-anchor" href="#hello-typescript"><span>Hello TypeScript</span></a></h1><p>Chúng ta bắt đầu với một ví dụ đơn giản.</p><p>Sao chép đoạn mã sau vào tệp <code>hello.ts</code>:</p><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">person</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> string</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Hello, &#39;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#E06C75;"> person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">let</span><span style="color:#24292E;--shiki-dark:#E06C75;"> user</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Tom&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">console</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">user</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sau đó, chạy lệnh:</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">tsc</span><span style="color:#032F62;--shiki-dark:#98C379;"> hello.ts</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Điều này sẽ tạo ra một tệp đã biên dịch <code>hello.js</code>:</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Hello, &#39;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#E06C75;"> person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> user</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Tom&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">console</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">user</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Trong TypeScript, chúng ta sử dụng <code>:</code> để chỉ định kiểu dữ liệu của biến, không có hoặc có khoảng trắng trước và sau <code>:</code> đều được chấp nhận.</p><p>Trong ví dụ trên, chúng ta sử dụng <code>:</code> để chỉ định kiểu dữ liệu của tham số <code>person</code> là <code>string</code>. Tuy nhiên, sau khi biên dịch thành js, không có mã kiểm tra nào được chèn vào để kiểm tra kiểu dữ liệu.</p><p>Điều này xảy ra vì <strong>TypeScript chỉ kiểm tra kiểu dữ liệu tĩnh trong quá trình biên dịch, nếu phát hiện lỗi, quá trình biên dịch sẽ báo lỗi</strong>. Trong quá trình chạy, giống như các tệp JavaScript thông thường, không có kiểm tra kiểu dữ liệu.</p><p>Nếu chúng ta muốn đảm bảo kiểu dữ liệu tham số trong quá trình chạy, chúng ta vẫn phải kiểm tra kiểu dữ liệu thủ công:</p><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">person</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> string</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">typeof</span><span style="color:#24292E;--shiki-dark:#E06C75;"> person</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> ===</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;string&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Hello, &#39;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#E06C75;"> person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    } </span><span style="color:#D73A49;--shiki-dark:#C678DD;">else</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        throw</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Error</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;person is not a string&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">let</span><span style="color:#24292E;--shiki-dark:#E06C75;"> user</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Tom&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">console</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">user</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>let</code> là từ khóa của ES6, tương tự như <code>var</code>, được sử dụng để định nghĩa một biến cục bộ, bạn có thể tham khảo [[JS Block Scope#let|JS Let]].</p></blockquote><p>Hãy thử biên dịch đoạn mã này:</p><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">person</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="color:#005CC5;--shiki-dark:#E5C07B;"> string</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Hello, &#39;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#E06C75;"> person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">let</span><span style="color:#24292E;--shiki-dark:#E06C75;"> user</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">console</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">user</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Trình biên tập sẽ cung cấp lỗi và quá trình biên dịch cũng sẽ báo lỗi:</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">hello.ts:6:22</span><span style="color:#032F62;--shiki-dark:#98C379;"> -</span><span style="color:#032F62;--shiki-dark:#98C379;"> error</span><span style="color:#032F62;--shiki-dark:#98C379;"> TS2345:</span><span style="color:#032F62;--shiki-dark:#98C379;"> Argument</span><span style="color:#032F62;--shiki-dark:#98C379;"> of</span><span style="color:#032F62;--shiki-dark:#98C379;"> type</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;number[]&#39;</span><span style="color:#032F62;--shiki-dark:#98C379;"> is</span><span style="color:#032F62;--shiki-dark:#98C379;"> not</span><span style="color:#032F62;--shiki-dark:#98C379;"> assignable</span><span style="color:#032F62;--shiki-dark:#98C379;"> to</span><span style="color:#032F62;--shiki-dark:#98C379;"> parameter</span><span style="color:#032F62;--shiki-dark:#98C379;"> of</span><span style="color:#032F62;--shiki-dark:#98C379;"> type</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;string&#39;.</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Tuy nhiên, tệp js vẫn được tạo ra:</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">function</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;Hello, &#39;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#E06C75;"> person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> user</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">console</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">sayHello</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">user</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Điều này xảy ra vì <strong>TypeScript vẫn tạo ra kết quả biên dịch ngay cả khi có lỗi</strong>, chúng ta vẫn có thể sử dụng tệp đã biên dịch này.</p><p>Nếu bạn muốn dừng việc tạo tệp js khi có lỗi, bạn có thể cấu hình <code>noEmitOnError</code> trong <code>tsconfig.json</code>. Về <code>tsconfig.json</code>, bạn có thể tham khảo <a href="http://www.typescriptlang.org/docs/handbook/tsconfig-json.html" target="_blank" rel="noopener noreferrer">tài liệu chính thức</a>.</p>`,22),o=[e];function r(p,t){return n(),a("div",null,o)}const k=s(l,[["render",r],["__file","hello-ts.html.vue"]]),h=JSON.parse(`{"path":"/programming/ts/intro/hello-ts.html","title":"Hello TypeScript","lang":"en-US","frontmatter":{"title":"Hello TypeScript","tags":["ts"],"categories":"ts","date created":"2023-12-28T00:00:00.000Z","date modified":"2023-12-28T00:00:00.000Z","order":3,"description":"Hello TypeScript Chúng ta bắt đầu với một ví dụ đơn giản. Sao chép đoạn mã sau vào tệp hello.ts: Sau đó, chạy lệnh: Điều này sẽ tạo ra một tệp đã biên dịch hello.js: Trong TypeS...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/programming/ts/intro/hello-ts.html"}],["meta",{"property":"og:site_name","content":"vanhung4499"}],["meta",{"property":"og:title","content":"Hello TypeScript"}],["meta",{"property":"og:description","content":"Hello TypeScript Chúng ta bắt đầu với một ví dụ đơn giản. Sao chép đoạn mã sau vào tệp hello.ts: Sau đó, chạy lệnh: Điều này sẽ tạo ra một tệp đã biên dịch hello.js: Trong TypeS..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-20T12:02:51.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"ts"}],["meta",{"property":"article:modified_time","content":"2024-06-20T12:02:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hello TypeScript\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-20T12:02:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\",\\"email\\":\\"vanhung4499@gmail.com\\"}]}"]]},"headers":[],"git":{"createdTime":1718884971000,"updatedTime":1718884971000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":1.83,"words":548},"filePathRelative":"programming/ts/intro/hello-ts.md","localizedDate":"June 20, 2024","excerpt":"\\n<p>Chúng ta bắt đầu với một ví dụ đơn giản.</p>\\n<p>Sao chép đoạn mã sau vào tệp <code>hello.ts</code>:</p>\\n<div class=\\"language-ts line-numbers-mode\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\" style=\\"background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">function</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\"> sayHello</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic\\">person</span><span style=\\"color:#D73A49;--shiki-dark:#ABB2BF\\">:</span><span style=\\"color:#005CC5;--shiki-dark:#E5C07B\\"> string</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">    return</span><span style=\\"color:#032F62;--shiki-dark:#98C379\\"> 'Hello, '</span><span style=\\"color:#D73A49;--shiki-dark:#56B6C2\\"> +</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\"> person</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">let</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\"> user</span><span style=\\"color:#D73A49;--shiki-dark:#56B6C2\\"> =</span><span style=\\"color:#032F62;--shiki-dark:#98C379\\"> 'Tom'</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">console</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">log</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">sayHello</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\">user</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">));</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{k as comp,h as data};
