import{_ as a,o as n,c as s,a as e}from"./app-BRTHG7K9.js";const i={},l=e(`<h1 id="敏感词" tabindex="-1"><a class="header-anchor" href="#敏感词"><span>敏感词</span></a></h1><p>友情提示：</p><p>最新版本的代码，已经移除“敏感词”功能。原因是，该功能比较小众，可能只有极少数的用户需要~</p><p>如果你系统里需要，可以参考 <a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro/commit/9a31613e5b766977df62a4977a40ef08bdeefa0b" target="_blank" rel="noopener noreferrer">9a31613（后端）</a>、<a href="https://gitee.com/yudaocode/yudao-ui-admin-vue3/commit/0925253a9dd0e3d9502178fc5c8f4a907eaeb852" target="_blank" rel="noopener noreferrer">0925253（前端）</a> 把代码复制、粘贴回来。</p><p>本章节，介绍项目的敏感词功能，可用于文本检测，高效过滤色情、广告、敏感、暴恐等违规内容。例如说，用户昵称、评论、私信等文本内容，都可以使用敏感词功能进行过滤。</p><h2 id="_1-实现原理" tabindex="-1"><a class="header-anchor" href="#_1-实现原理"><span><a href="#_1-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86">#</a> 1. 实现原理</span></a></h2><p>敏感词采用 <a href="https://zh.m.wikipedia.org/zh-hans/Trie" target="_blank" rel="noopener noreferrer">前缀树</a> 算法，，核心代码见 <a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/util/collection/SimpleTrie.java" target="_blank" rel="noopener noreferrer">SimpleTrie</a> 类。</p><h2 id="_2-使用教程" tabindex="-1"><a class="header-anchor" href="#_2-使用教程"><span><a href="#_2-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B">#</a> 2. 使用教程</span></a></h2><p>对应的管理后台，可以在 [系统管理 -&gt; 敏感词] 菜单，进行敏感词的管理。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/敏感词/敏感词管理.png" alt="敏感词管理" tabindex="0" loading="lazy"><figcaption>敏感词管理</figcaption></figure><ul><li>前端实现：<a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/system/sensitiveWord/index.vue" target="_blank" rel="noopener noreferrer">sensitiveWord/index.vue</a></li><li>后端实现：<a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sensitiveword/SensitiveWordController.java" target="_blank" rel="noopener noreferrer">SensitiveWordController</a></li></ul><h3 id="_2-1-添加敏感词" tabindex="-1"><a class="header-anchor" href="#_2-1-添加敏感词"><span><a href="#_2-1-%E6%B7%BB%E5%8A%A0%E6%95%8F%E6%84%9F%E8%AF%8D">#</a> 2.1 添加敏感词</span></a></h3><figure><img src="https://cloud.iocoder.cn/img/敏感词/添加敏感词.png" alt="添加敏感词" tabindex="0" loading="lazy"><figcaption>添加敏感词</figcaption></figure><ul><li>标签：用于敏感词分组，不同的场景会需要使用不同的敏感词，通过标签进行分组。</li></ul><p>添加完敏感词后，刷新下界面。</p><h3 id="_2-2-测试敏感词" tabindex="-1"><a class="header-anchor" href="#_2-2-测试敏感词"><span><a href="#_2-2-%E6%B5%8B%E8%AF%95%E6%95%8F%E6%84%9F%E8%AF%8D">#</a> 2.2 测试敏感词</span></a></h3><p>① 输入检测文本为“你是白痴么？”，选择标签为“测试”，检测到有敏感词：</p><figure><img src="https://cloud.iocoder.cn/img/敏感词/测试敏感词-有.png" alt="测试敏感词" tabindex="0" loading="lazy"><figcaption>测试敏感词</figcaption></figure><p>② 选择标签为“蔬菜”，检测到米有敏感词：</p><figure><img src="https://cloud.iocoder.cn/img/敏感词/测试敏感词-无.png" alt="测试敏感词" tabindex="0" loading="lazy"><figcaption>测试敏感词</figcaption></figure><h2 id="_3-敏感词的使用" tabindex="-1"><a class="header-anchor" href="#_3-敏感词的使用"><span><a href="#_3-%E6%95%8F%E6%84%9F%E8%AF%8D%E7%9A%84%E4%BD%BF%E7%94%A8">#</a> 3. 敏感词的使用</span></a></h2><p><a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/sensitiveword/SensitiveWordApi.java" target="_blank" rel="noopener noreferrer">SensitiveWordApi</a> 提供了敏感词的 API 接口，可以在任意地方使用。方法如下：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>public interface SensitiveWordApi {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 获得文本所包含的不合法的敏感词数组</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @param text 文本</span></span>
<span class="line"><span>     * @param tags 标签数组</span></span>
<span class="line"><span>     * @return 不合法的敏感词数组</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    List&lt;String&gt; validateText(String text, List&lt;String&gt; tags);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 判断文本是否包含敏感词</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @param text 文本</span></span>
<span class="line"><span>     * @param tags 表述数组</span></span>
<span class="line"><span>     * @return 是否包含</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    boolean isTextValid(String text, List&lt;String&gt; tags);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用步骤如下：</p><p>① 在需要使用的 <code>yudao-module-*-biz</code> 模块的 <code>pom.xml</code> 中，引入 <code>yudao-module-system-api</code> 依赖。代码如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;cn.iocoder.cloud&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;yudao-module-system-api&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;\${revision}&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><p>② 在该 <code>yudao-module-*-biz</code> 模块的 <a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/rpc/config/RpcConfiguration.java" target="_blank" rel="noopener noreferrer">RpcConfiguration</a> 配置类，注入 SensitiveWordApi 接口。代码如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>@Configuration(proxyBeanMethods = false)</span></span>
<span class="line"><span>@EnableFeignClients(clients = {SensitiveWordApi.class.class})</span></span>
<span class="line"><span>public class RpcConfiguration {</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>③ 注入 SensitiveWordApi Bean，调用对应的方法即可。例如说：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>@Service</span></span>
<span class="line"><span>public class DemoService {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Resource</span></span>
<span class="line"><span>    private SensitiveWordApi sensitiveWordApi;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public void demo() {</span></span>
<span class="line"><span>        sensitiveWordApi.validateText(&quot;你是白痴吗&quot;, Collections.singletonList(&quot;测试&quot;));</span></span>
<span class="line"><span>        sensitiveWordApi.isTextValid(&quot;你是白痴吗&quot;, Collections.singletonList(&quot;蔬菜&quot;));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre></div>`,30),p=[l];function o(r,t){return n(),s("div",null,p)}const c=a(i,[["render",o],["__file","sensitive-word.html.vue"]]),u=JSON.parse('{"path":"/project/yudao-cloud/sensitive-word.html","title":"敏感词","lang":"en-US","frontmatter":{"title":"敏感词","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":146,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 实现原理","slug":"_1-实现原理","link":"#_1-实现原理","children":[]},{"level":2,"title":"# 2. 使用教程","slug":"_2-使用教程","link":"#_2-使用教程","children":[{"level":3,"title":"# 2.1 添加敏感词","slug":"_2-1-添加敏感词","link":"#_2-1-添加敏感词","children":[]},{"level":3,"title":"# 2.2 测试敏感词","slug":"_2-2-测试敏感词","link":"#_2-2-测试敏感词","children":[]}]},{"level":2,"title":"# 3. 敏感词的使用","slug":"_3-敏感词的使用","link":"#_3-敏感词的使用","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":2.56,"words":768},"filePathRelative":"project/yudao-cloud/sensitive-word.md","localizedDate":"July 7, 2024"}');export{c as comp,u as data};
