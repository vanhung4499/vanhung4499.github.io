import{_ as e,o as a,c as i,a as n}from"./app-BRTHG7K9.js";const o={},s=n('<h1 id="三方登录" tabindex="-1"><a class="header-anchor" href="#三方登录"><span>三方登录</span></a></h1><p>系统对接国内多个第三方平台，实现三方登录的功能。例如说：</p><ul><li>管理后台：企业微信、阿里钉钉</li><li>用户 App：微信公众号、微信小程序</li></ul><figure><img src="https://doc.iocoder.cn/img/三方登录/01.png" alt="管理后台" tabindex="0" loading="lazy"><figcaption>管理后台</figcaption></figure><p>友情提示：为了表述方便，本文主要使用管理后台的三方登录作为示例。</p><p>用户 App 也是支持该功能，你可以自己去体验一下。</p><h2 id="_1-表结构" tabindex="-1"><a class="header-anchor" href="#_1-表结构"><span><a href="#_1-%E8%A1%A8%E7%BB%93%E6%9E%84">#</a> 1. 表结构</span></a></h2><figure><img src="https://doc.iocoder.cn/img/三方登录/02.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>① 三方登录完成时，系统会将三方用户存储到 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/social/SocialUserDO.java" target="_blank" rel="noopener noreferrer"><code>system_social_user</code></a> 表中，通过 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/social/SocialTypeEnum.java" target="_blank" rel="noopener noreferrer"><code>type</code></a> 标记对应的第三方平台。</p><p>② 【未】关联本系统 User 的三方用户，需要在三方登录完成后，使用账号密码进行「<strong>绑定登录</strong>」，成功后记录到 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/social/SocialUserBindDO.java" target="_blank" rel="noopener noreferrer"><code>system_social_user_bind</code></a> 表中。</p><p>【已】关联本系统 User 的三方用户，在三方登录完成后，直接进入系统，即「<strong>快捷登录</strong>」。</p><h2 id="_2-绑定登录" tabindex="-1"><a class="header-anchor" href="#_2-绑定登录"><span><a href="#_2-%E7%BB%91%E5%AE%9A%E7%99%BB%E5%BD%95">#</a> 2. 绑定登录</span></a></h2><p>① 使用浏览器访问 <a href="http://127.0.0.1:1024/login" target="_blank" rel="noopener noreferrer">http://127.0.0.1:1024/login</a> 地址，点击 [钉钉] 或者 [企业微信] 进行三方登录。此时，会调用 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java#L97-L106" target="_blank" rel="noopener noreferrer"><code>/admin-api/system/auth/social-auth-redirect</code></a> 接口，获得第三方平台的登录地址，并进行跳转。</p><figure><img src="https://doc.iocoder.cn/img/三方登录/12.png" alt="三方登录" tabindex="0" loading="lazy"><figcaption>三方登录</figcaption></figure><p>然后，使用 [钉钉] 或者 [企业微信] 进行扫码，完成三方登录。</p><p>② 三方登录成功后，跳转回 <a href="http://127.0.0.1:1024/social-login" target="_blank" rel="noopener noreferrer">http://127.0.0.1:1024/social-login</a> 地址。此时，会调用 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java#L149-L154" target="_blank" rel="noopener noreferrer"><code>/admin-api/system/auth/social-login</code></a> 接口，尝试「快捷登录」。由于该三方用户【未】关联管理后台的 AdminUser 用户，所以会看到 “未绑定账号，需要进行绑定” 报错。</p><figure><img src="https://doc.iocoder.cn/img/三方登录/11.png" alt="三方登录页" tabindex="0" loading="lazy"><figcaption>三方登录页</figcaption></figure><p>③ 输入账号密码，点击 [提交] 按钮，进行「绑定登录」。此时，会调用 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java#L61-L66" target="_blank" rel="noopener noreferrer"><code>/admin-api/system/auth/login</code></a> 接口（在账号密码登录的基础上，额外带上 <code>socialType</code> + <code>socialCode</code> + <code>socialState</code> 参数）。成功后，即可进入系统的首页。</p><figure><img src="https://doc.iocoder.cn/img/三方登录/13.png" alt="三方登录页" tabindex="0" loading="lazy"><figcaption>三方登录页</figcaption></figure><h2 id="_3-快捷登录" tabindex="-1"><a class="header-anchor" href="#_3-快捷登录"><span><a href="#_3-%E5%BF%AB%E6%8D%B7%E7%99%BB%E5%BD%95">#</a> 3. 快捷登录</span></a></h2><p>退出系统，再进行一次三方登录的流程。</p><p>【相同】① 使用浏览器访问 <a href="http://127.0.0.1:1024/login" target="_blank" rel="noopener noreferrer">http://127.0.0.1:1024/login</a> 地址，点击 [钉钉] 或者 [企业微信] 进行三方登录。此时，会调用 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java#L97-L106" target="_blank" rel="noopener noreferrer"><code>/admin-api/system/auth/social-auth-redirect</code></a> 接口，获得第三方平台的登录地址，并进行跳转。</p><figure><img src="https://doc.iocoder.cn/img/三方登录/12.png" alt="三方登录" tabindex="0" loading="lazy"><figcaption>三方登录</figcaption></figure><p>【不同】② 三方登录成功后，跳转回 <a href="http://127.0.0.1:1024/social-login" target="_blank" rel="noopener noreferrer">http://127.0.0.1:1024/social-login</a> 地址。此时，会调用 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java#L149-L154" target="_blank" rel="noopener noreferrer"><code>/admin-api/system/auth/social-login</code></a> 接口，尝试「快捷登录」。由于该三方用户【已】关联管理后台的 AdminUser 用户，所以直接进入系统的首页。</p><figure><img src="https://doc.iocoder.cn/img/三方登录/13.png" alt="三方登录页" tabindex="0" loading="lazy"><figcaption>三方登录页</figcaption></figure><h2 id="_4-绑定与解绑" tabindex="-1"><a class="header-anchor" href="#_4-绑定与解绑"><span><a href="#_4-%E7%BB%91%E5%AE%9A%E4%B8%8E%E8%A7%A3%E7%BB%91">#</a> 4. 绑定与解绑</span></a></h2><p>访问 <a href="http://127.0.0.1:1024/user/profile" target="_blank" rel="noopener noreferrer">http://127.0.0.1:1024/user/profile</a> 地址，选择 [社交信息] 选项，可以三方用户的绑定与解绑。</p><figure><img src="https://doc.iocoder.cn/img/三方登录/21.png" alt="绑定与解绑" tabindex="0" loading="lazy"><figcaption>绑定与解绑</figcaption></figure><h2 id="_5-配置管理" tabindex="-1"><a class="header-anchor" href="#_5-配置管理"><span><a href="#_5-%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86">#</a> 5. 配置管理</span></a></h2><h3 id="_5-1-配置文件" tabindex="-1"><a class="header-anchor" href="#_5-1-配置文件"><span><a href="#_5-1-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">#</a> 5.1 配置文件</span></a></h3><p>在 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-server/src/main/resources/application-local.yaml#L196-L211" target="_blank" rel="noopener noreferrer"><code>application-{env}.yaml</code></a> 配置文件中，对应 <code>justauth</code> 配置项，填写你的第三方平台的配置信息。</p><figure><img src="https://doc.iocoder.cn/img/三方登录/31.png" alt="配置文件" tabindex="0" loading="lazy"><figcaption>配置文件</figcaption></figure><p>系统使用 <a href="https://gitee.com/yudaocode/justauth" target="_blank" rel="noopener noreferrer">JustAuth</a> 组件，想要对接其它第三方平台，只需要新增对应的配置信息即可。</p><h3 id="_5-2-数据库配置" tabindex="-1"><a class="header-anchor" href="#_5-2-数据库配置"><span><a href="#_5-2-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE">#</a> 5.2 数据库配置</span></a></h3><p>① <code>system_social_client</code> 表，它本质上是 JustAuth 配置的 DB 存储。</p><p>主要实现两个目的：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>CREATE TABLE `system_social_client` (</span></span>\n<span class="line"><span>  `id` bigint NOT NULL AUTO_INCREMENT COMMENT &#39;编号&#39;,</span></span>\n<span class="line"><span>  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;应用名&#39;,</span></span>\n<span class="line"><span>  `status` tinyint NOT NULL COMMENT &#39;状态&#39;,</span></span>\n<span class="line"><span>  // JustAuth 配置项</span></span>\n<span class="line"><span>  `social_type` tinyint NOT NULL COMMENT &#39;社交平台的类型&#39;,</span></span>\n<span class="line"><span>  `client_id` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;客户端编号&#39;,</span></span>\n<span class="line"><span>  `client_secret` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;客户端密钥&#39;,</span></span>\n<span class="line"><span>  `agent_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;代理编号&#39;,</span></span>\n<span class="line"><span>  // 目的 1</span></span>\n<span class="line"><span>  `tenant_id` bigint NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;租户编号&#39;,</span></span>\n<span class="line"><span>  // 目的 2</span></span>\n<span class="line"><span>  `user_type` tinyint NOT NULL COMMENT &#39;用户类型&#39;,</span></span>\n<span class="line"><span>  // ... 省略其它非关键字段</span></span>\n<span class="line"><span>  PRIMARY KEY (`id`) USING BTREE</span></span>\n<span class="line"><span>) ENGINE=InnoDB AUTO_INCREMENT=44 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;社交客户端表&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>在需要 SaaS 多租户的项目中，通过 <code>tenant_id</code> 字段隔离，实现不同租户对应不同第三方平台的配置</li><li>在多用户类型的项目中，通过 <code>user_type</code> 字段区分，实现不同用户类型对应不同第三方平台的配置</li></ol><p>注意，<code>system_social_client</code> 表的优先级，比 <code>application-{env}.yaml</code> 配置文件高！具体逻辑，可见 SocialClientServiceImpl 类的 <code>#buildAuthRequest(...)</code> 方法。</p><p>疑问：系统目前支持指定租户 + 用户类型 + 社交平台，对应多套配置吗？</p><p>不支持，需要自己改造。总体思路是：</p><ol><li><code>system_social_client</code> 额外再增加一个 <code>application</code> 应用字段，存储应用名，进行一步隔离</li><li>前端调用三方登录时，额外传递 <code>application</code> 应用字段，用于查询对应应用的配置<br> ② 在 [系统管理 -&gt; 三方登录 -&gt; 三方应用] 菜单下，可以进行<strong>当前租户</strong>的 <code>system_social_client</code> 表的配置管理。如下图所示：</li></ol><figure><img src="https://doc.iocoder.cn/img/三方登录/菜单-三方应用.png" alt="三方应用" tabindex="0" loading="lazy"><figcaption>三方应用</figcaption></figure><p>另外，在 [系统管理 -&gt; 三方登录 -&gt; 三方用户] 菜单下，可以进行<strong>当前租户</strong>的 <code>system_social_user</code> 三方用户表的查询。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/三方登录/菜单-三方用户.png" alt="三方应用" tabindex="0" loading="lazy"><figcaption>三方应用</figcaption></figure><h2 id="_6-第三方平台的申请" tabindex="-1"><a class="header-anchor" href="#_6-第三方平台的申请"><span><a href="#_6-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%94%B3%E8%AF%B7">#</a> 6. 第三方平台的申请</span></a></h2><ul><li>阿里钉钉：<a href="https://justauth.wiki/guide/oauth/dingtalk/" target="_blank" rel="noopener noreferrer">https://justauth.wiki/guide/oauth/dingtalk/</a></li><li>企业微信：<a href="https://justauth.wiki/guide/oauth/wechat_enterprise_qrcode/" target="_blank" rel="noopener noreferrer">https://justauth.wiki/guide/oauth/wechat_enterprise_qrcode/</a></li><li>微信开放平台：<a href="https://justauth.wiki/guide/oauth/wechat_open/" target="_blank" rel="noopener noreferrer">https://justauth.wiki/guide/oauth/wechat_open/</a></li></ul><p>注意，如果第三方平台如果需要配置具体的授信地址，需要添加 <code>/social-login</code> 用于三方登录回调页、<code>/user/profile</code> 用于三方用户的绑定与解绑。</p>',48),t=[s];function r(l,c){return a(),i("div",null,t)}const p=e(o,[["render",r],["__file","social-user.html.vue"]]),u=JSON.parse('{"path":"/project/rouyi-vue-pro/social-user.html","title":"三方登录","lang":"en-US","frontmatter":{"title":"三方登录","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":26,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 表结构","slug":"_1-表结构","link":"#_1-表结构","children":[]},{"level":2,"title":"# 2. 绑定登录","slug":"_2-绑定登录","link":"#_2-绑定登录","children":[]},{"level":2,"title":"# 3. 快捷登录","slug":"_3-快捷登录","link":"#_3-快捷登录","children":[]},{"level":2,"title":"# 4. 绑定与解绑","slug":"_4-绑定与解绑","link":"#_4-绑定与解绑","children":[]},{"level":2,"title":"# 5. 配置管理","slug":"_5-配置管理","link":"#_5-配置管理","children":[{"level":3,"title":"# 5.1 配置文件","slug":"_5-1-配置文件","link":"#_5-1-配置文件","children":[]},{"level":3,"title":"# 5.2 数据库配置","slug":"_5-2-数据库配置","link":"#_5-2-数据库配置","children":[]}]},{"level":2,"title":"# 6. 第三方平台的申请","slug":"_6-第三方平台的申请","link":"#_6-第三方平台的申请","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":5.42,"words":1625},"filePathRelative":"project/rouyi-vue-pro/social-user.md","localizedDate":"July 7, 2024"}');export{p as comp,u as data};
