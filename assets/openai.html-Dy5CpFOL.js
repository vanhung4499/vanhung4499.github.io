import{_ as r,g as p,o as i,c as o,e as a,h as e,f as s,w as l,a as n}from"./app-BRTHG7K9.js";const c={},d=n('<h1 id="【模型接入】openai" tabindex="-1"><a class="header-anchor" href="#【模型接入】openai"><span>【模型接入】OpenAI</span></a></h1><p>项目基于 Spring AI 提供的 <a href="https://github.com/spring-projects/spring-ai/tree/main/models/spring-ai-openai" target="_blank" rel="noopener noreferrer"><code>spring-ai-openai</code></a>，实现 OpenAI 的接入：</p><table><thead><tr><th>功能</th><th>模型</th><th>Spring AI 客户端</th></tr></thead><tbody><tr><td>AI 对话</td><td>gpt3.5、gpt4.0 等</td><td><a href="https://docs.spring.io/spring-ai/reference/api/chat/openai-chat.html" target="_blank" rel="noopener noreferrer">OpenAI Chat</a></td></tr><tr><td>AI 绘画</td><td><a href="https://en.wikipedia.org/wiki/DALL-E" target="_blank" rel="noopener noreferrer">DALL</a></td><td><a href="https://docs.spring.io/spring-ai/reference/api/image/openai-image.html" target="_blank" rel="noopener noreferrer">OpenAI Image Generation</a></td></tr></tbody></table><h2 id="_1-申请密钥" tabindex="-1"><a class="header-anchor" href="#_1-申请密钥"><span><a href="#_1-%E7%94%B3%E8%AF%B7%E5%AF%86%E9%92%A5">#</a> 1. 申请密钥</span></a></h2><p>由于 OpenAI 是非开源的模型，所以无法私有化部署，需要去官网申请 API Key，然后通过 Spring AI 提供的客户端接入。</p><p>不过，目前市面上有很多 OpenAI 的中转 API 服务，通过购买这些服务，也能实现接入。</p><p>疑问：什么是“中转 API 服务”？</p><p>简单来说，就是有人通过一定的渠道，获取了大量的 OpenAI、MidJourney 等 API 账号，然后部署一个 API 池子（服务）。</p><p>中转人卖给你一个 API KEY 令牌，你就可以把 AI 请求发送到他的池子：池子采取一定的算法选取一个 API 账号帮你把请求发送到大模型后端，然后再把大模型返回的结果转发给你。</p><p>下面，我们来看看这两种方式怎么申请？</p><h3 id="_1-1-方式一-官方-api-申请" tabindex="-1"><a class="header-anchor" href="#_1-1-方式一-官方-api-申请"><span><a href="#_1-1-%E6%96%B9%E5%BC%8F%E4%B8%80-%E5%AE%98%E6%96%B9-api-%E7%94%B3%E8%AF%B7">#</a> 1.1 方式一：官方 API 申请</span></a></h3><p>可以参考 <a href="https://www.cnblogs.com/klchang/p/17352911.html" target="_blank" rel="noopener noreferrer">《OpenAI API keys 的申请和测试小结 》</a> 进行申请。</p><p>会略微麻烦一些，我自己是直接采用了“方式二：中转 API 申请”。</p><hr><p>申请完成后，可以在我们系统的 [AI 大模型 -&gt; 控制台 -&gt; API 密钥] 菜单，进行密钥的配置。只需要填写“密钥”，不需要填写“自定义 API URL”（因为 Spring AI 默认官方地址）。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/AI手册/模型接入/OpenAI-官方.png" alt="官方的密钥配置" tabindex="0" loading="lazy"><figcaption>官方的密钥配置</figcaption></figure><p>友情提示：官方的 API 禁止国内直接访问，需要有 VPN 代理~</p><h3 id="_1-2-方式二-中转-api-申请" tabindex="-1"><a class="header-anchor" href="#_1-2-方式二-中转-api-申请"><span><a href="#_1-2-%E6%96%B9%E5%BC%8F%E4%BA%8C-%E4%B8%AD%E8%BD%AC-api-%E7%94%B3%E8%AF%B7">#</a> 1.2 方式二：中转 API 申请</span></a></h3><p>提供中转 API 服务的有很多，也可以 Google 直接搜索“openai API 中转”，例如说：</p><ul><li><a href="https://github.com/chatanywhere/GPT_API_free" target="_blank" rel="noopener noreferrer">GPT_API_free</a> 【可以免费领取一定额度，不多】</li><li><a href="https://api.holdai.top/register?aff=EcRu" target="_blank" rel="noopener noreferrer">毫秒 API</a></li><li><a href="https://wildcard.com.cn/api" target="_blank" rel="noopener noreferrer">Wildcard 的 API 随心用</a> 【我买的这个，比较贵】</li></ul><p>友情提示：少量购买，可以使用体验即可！</p><hr><p>购买完成后，可以在我们系统的 [AI 大模型 -&gt; 控制台 -&gt; API 密钥] 菜单，进行密钥的配置。需要填写“密钥” + “自定义 API URL”（因为让 Spring AI 使用该地址）。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/AI手册/模型接入/OpenAI-中转.png" alt="中转的密钥配置" tabindex="0" loading="lazy"><figcaption>中转的密钥配置</figcaption></figure><h3 id="_1-3-补充说明" tabindex="-1"><a class="header-anchor" href="#_1-3-补充说明"><span><a href="#_1-3-%E8%A1%A5%E5%85%85%E8%AF%B4%E6%98%8E">#</a> 1.3 补充说明</span></a></h3>',25),h=a("code",null,"max_tokens",-1),g=n(`<p>例如说：<code>gpt-3.5-turbo</code> 是 4096，<code>gpt-4-turbo</code> 是 8192。</p><p>不确定的话，就填写 4096 先~跑通之后，再网上查查。</p><h2 id="_2-如何使用" tabindex="-1"><a class="header-anchor" href="#_2-如何使用"><span><a href="#_2-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8">#</a> 2. 如何使用？</span></a></h2><p>① 如果你的项目里需要直接通过 <code>@Resource</code> 注入 OpenAiChatModel、OpenAiImageModel 等对象，需要把 <code>application.yaml</code> 配置文件里的 <code>spring.ai.openai</code> 配置项，替换成你的！</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>spring:</span></span>
<span class="line"><span>  ai:</span></span>
<span class="line"><span>    openai:</span></span>
<span class="line"><span>      api-key: # 你的密钥</span></span>
<span class="line"><span>      base-url: # 如果是中转 API，这里填写中转 API 的地址；如果是官方的，这里不需要填写</span></span></code></pre></div><p>② 如果你希望使用 [AI 大模型 -&gt; 控制台 -&gt; API 密钥] 菜单的密钥配置，则可以通过 AiApiKeyService 的 <code>#getChatModel(...)</code> 或 <code>#getImageModel(...)</code> 方法，获取对应的模型对象。</p><hr><p>① 和 ② 这两者的后续使用，就是标准的 Spring AI 客户端的使用，调用对应的方法即可。</p><p>另外，OpenAIChatModelTests 和 OpenAiImageModelTests 里有对应的测试用例，可以参考。</p>`,9);function A(I,_){const t=p("RouteLink");return i(),o("div",null,[d,a("p",null,[e("如果后续你要体验 "),s(t,{to:"/ai/chat/"},{default:l(()=>[e("《AI 对话》")]),_:1}),e(" ，需要在 [AI 大模型 -> 控制台 -> 聊天模型] 菜单，配置对应的聊天模型。注意，每个模型标识的 "),h,e("（回复数 Token 数）是不同的。")]),g])}const m=r(c,[["render",A],["__file","openai.html.vue"]]),u=JSON.parse('{"path":"/project/rouyi-vue-pro/ai/openai.html","title":"【模型接入】OpenAI","lang":"en-US","frontmatter":{"title":"【模型接入】OpenAI","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":135,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 申请密钥","slug":"_1-申请密钥","link":"#_1-申请密钥","children":[{"level":3,"title":"# 1.1 方式一：官方 API 申请","slug":"_1-1-方式一-官方-api-申请","link":"#_1-1-方式一-官方-api-申请","children":[]},{"level":3,"title":"# 1.2 方式二：中转 API 申请","slug":"_1-2-方式二-中转-api-申请","link":"#_1-2-方式二-中转-api-申请","children":[]},{"level":3,"title":"# 1.3 补充说明","slug":"_1-3-补充说明","link":"#_1-3-补充说明","children":[]}]},{"level":2,"title":"# 2. 如何使用？","slug":"_2-如何使用","link":"#_2-如何使用","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":3.2,"words":960},"filePathRelative":"project/rouyi-vue-pro/ai/openai.md","localizedDate":"July 7, 2024"}');export{m as comp,u as data};
