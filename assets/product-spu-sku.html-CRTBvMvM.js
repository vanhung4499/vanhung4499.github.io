import{_ as n,o as e,c as s,a}from"./app-BRTHG7K9.js";const i={},p=a('<h1 id="【商品】商品-spu-与-sku" tabindex="-1"><a class="header-anchor" href="#【商品】商品-spu-与-sku"><span>【商品】商品 SPU 与 SKU</span></a></h1><blockquote><p>参考 <a href="https://www.zhihu.com/question/19841574" target="_blank" rel="noopener noreferrer">《产品 SKU 是什么意思？与之相关的还有哪些？》</a> 整理</p></blockquote><h2 id="_1-表结构" tabindex="-1"><a class="header-anchor" href="#_1-表结构"><span><a href="#_1-%E8%A1%A8%E7%BB%93%E6%9E%84">#</a> 1. 表结构</span></a></h2><p>商品 SPU 与 SKU，由 <code>yudao-module-product-biz</code> 后端模块的 <code>spu</code>、<code>sku</code> 包实现，分成商品 SPU 和商品 SKU 两个表。</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/表关系.png" alt="表结构" tabindex="0" loading="lazy"><figcaption>表结构</figcaption></figure><h3 id="_1-1-商品-sku" tabindex="-1"><a class="header-anchor" href="#_1-1-商品-sku"><span><a href="#_1-1-%E5%95%86%E5%93%81-sku">#</a> 1.1 商品 SKU</span></a></h3><p><strong>SKU：Stock Keeping Unit</strong></p><p>中文翻译为库存单位。SKU 从库存视角，以库存进出为单位，可以是件、瓶、箱等等。</p><p>例如，iPhone 手机，按照规格( 颜色 + 内存 )可以组合出如下多个 SKU ：</p><table><thead><tr><th>SKU</th><th>颜色</th><th>内存</th></tr></thead><tbody><tr><td>A</td><td>白色</td><td>16G</td></tr><tr><td>B</td><td>白色</td><td>64G</td></tr><tr><td>C</td><td>黑色</td><td>16G</td></tr><tr><td>D</td><td>黑色</td><td>64G</td></tr></tbody></table><p>可以看出，颜色（白色、黑色）与内存（16G、64G）组合排列出四种 iPhone SKU。</p><p>最终 SKU 表结构如下：</p><blockquote><p>省略 creator/create_time/updater/update_time/deleted/tenant_id 等通用字段</p></blockquote><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>CREATE TABLE `product_sku` (</span></span>\n<span class="line"><span>  `id` bigint NOT NULL AUTO_INCREMENT COMMENT &#39;主键&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `spu_id` bigint NOT NULL COMMENT &#39;spu编号&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `properties` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;属性数组，JSON 格式 [{propertId: , valueId: }, {propertId: , valueId: }]&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `price` int NOT NULL DEFAULT &#39;-1&#39; COMMENT &#39;商品价格，单位：分&#39;,</span></span>\n<span class="line"><span>  `market_price` int DEFAULT NULL COMMENT &#39;市场价，单位：分&#39;,</span></span>\n<span class="line"><span>  `cost_price` int NOT NULL DEFAULT &#39;-1&#39; COMMENT &#39;成本价，单位： 分&#39;,</span></span>\n<span class="line"><span>  `bar_code` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;SKU 的条形码&#39;,</span></span>\n<span class="line"><span>  `pic_url` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;图片地址&#39;,</span></span>\n<span class="line"><span>  `stock` int DEFAULT NULL COMMENT &#39;库存&#39;,</span></span>\n<span class="line"><span>  `weight` double DEFAULT NULL COMMENT &#39;商品重量，单位：kg 千克&#39;,</span></span>\n<span class="line"><span>  `volume` double DEFAULT NULL COMMENT &#39;商品体积，单位：m^3 平米&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `first_brokerage_price` int DEFAULT NULL COMMENT &#39;一级分销的佣金，单位：分&#39;,</span></span>\n<span class="line"><span>  `second_brokerage_price` int DEFAULT NULL COMMENT &#39;二级分销的佣金，单位：分&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `sales_count` int DEFAULT NULL COMMENT &#39;商品销量&#39;,</span></span>\n<span class="line"><span>  PRIMARY KEY (`id`) USING BTREE</span></span>\n<span class="line"><span>) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;商品sku&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>① <code>spu_id</code> 字段：商品 SPU 的编号，关联 <code>product_spu</code> 表的 <code>id</code> 字段。</p><p>② <code>properties</code> 字段：商品属性，JSON 格式，例如：</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/SKU信息.png" alt="SKU 信息" tabindex="0" loading="lazy"><figcaption>SKU 信息</figcaption></figure><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>[</span></span>\n<span class="line"><span>  {</span></span>\n<span class="line"><span>    &quot;propertyId&quot;: 1,</span></span>\n<span class="line"><span>    &quot;propertyName&quot;: &quot;颜色&quot;,</span></span>\n<span class="line"><span>    &quot;valueId&quot;: 5,</span></span>\n<span class="line"><span>    &quot;valueName&quot;: &quot;黑色&quot;</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>  {</span></span>\n<span class="line"><span>    &quot;propertyId&quot;: 3,</span></span>\n<span class="line"><span>    &quot;propertyName&quot;: &quot;版本&quot;,</span></span>\n<span class="line"><span>    &quot;valueId&quot;: 8,</span></span>\n<span class="line"><span>    &quot;valueName&quot;: &quot;CH510&quot;</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>]</span></span></code></pre></div><p>很明显，<code>property_id</code> 对应 <code>product_property</code> 表的 <code>id</code> 字段，<code>value_id</code> 对应 <code>product_property_value</code> 表的 <code>id</code> 字段。</p><p>那么为什么要冗余 <code>propertyName</code>、<code>valueName</code> 字段呢？主要是为了方便查询，不用再关联 <code>product_property</code>、<code>product_property_value</code> 表，嘿嘿~</p><p>③ <code>price</code>、<code>market_price</code>、<code>cost_price</code>、<code>bar_code</code>、<code>weight</code>、<code>volume</code>、<code>pic_url</code> 字段，都是商品 SKU 的基本信息。</p><p>④ <code>sales_count</code> 字段：商品销量，每次用户下单时，更新该字段。</p><p>⑤ <code>first_brokerage_price</code>、<code>second_brokerage_price</code> 字段：一级分销、二级分销的佣金，可能未来会挪到【营销】模块下，目前不用特别关注。</p><h3 id="_1-2-商品-spu" tabindex="-1"><a class="header-anchor" href="#_1-2-商品-spu"><span><a href="#_1-2-%E5%95%86%E5%93%81-spu">#</a> 1.2 商品 SPU</span></a></h3><p><strong>SPU：Standard Product Unit</strong></p><p>中文翻译为标准产品单位。SPU 从产品视角，是产品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。通俗点讲，属性值、特性相同的商品就可以被称为一个 SPU。</p><p>例如 iPhone 14 就是一个 SPU，iPhone 14 Plus 也是一个 SPU ，这个与商家无关，与颜色、款式、套餐等规格无关。</p><p>商家出售某个 SPU，那么这就是一个商品。商品在 SPU 之上，增加了销售价格、运费等等信息。<strong>另外，一个商品可以包含多个 SKU</strong>。</p><p>最终 SPU 表结构如下：</p><blockquote><p>省略 creator/create_time/updater/update_time/deleted/tenant_id 等通用字段</p></blockquote><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>CREATE TABLE `product_spu` (</span></span>\n<span class="line"><span>  `id` bigint NOT NULL AUTO_INCREMENT COMMENT &#39;商品 SPU 编号，自增&#39;,</span></span>\n<span class="line"><span>  `name` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;商品名称&#39;,</span></span>\n<span class="line"><span>  `keyword` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;关键字&#39;,</span></span>\n<span class="line"><span>  `introduction` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;商品简介&#39;,</span></span>\n<span class="line"><span>  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT &#39;商品详情&#39;,</span></span>\n<span class="line"><span>  `category_id` bigint NOT NULL COMMENT &#39;商品分类编号&#39;,</span></span>\n<span class="line"><span>  `brand_id` int DEFAULT NULL COMMENT &#39;商品品牌编号&#39;,</span></span>\n<span class="line"><span>  `pic_url` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;商品封面图&#39;,</span></span>\n<span class="line"><span>  `slider_pic_urls` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT &#39;&#39; COMMENT &#39;商品轮播图地址\\n 数组，以逗号分隔\\n 最多上传15张&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `status` tinyint NOT NULL COMMENT &#39;商品状态: 0 上架（开启） 1 下架（禁用）-1 回收&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `spec_type` bit(1) DEFAULT NULL COMMENT &#39;规格类型：0 单规格 1 多规格&#39;,</span></span>\n<span class="line"><span>  `price` int NOT NULL DEFAULT &#39;-1&#39; COMMENT &#39;商品价格，单位使用：分&#39;,</span></span>\n<span class="line"><span>  `market_price` int DEFAULT NULL COMMENT &#39;市场价，单位使用：分&#39;,</span></span>\n<span class="line"><span>  `cost_price` int NOT NULL DEFAULT &#39;-1&#39; COMMENT &#39;成本价，单位： 分&#39;,</span></span>\n<span class="line"><span>  `stock` int NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;库存&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `delivery_types` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &#39;&#39; COMMENT &#39;配送方式数组&#39;,</span></span>\n<span class="line"><span>  `delivery_template_id` bigint DEFAULT NULL COMMENT &#39;物流配置模板编号&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `give_integral` int NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;赠送积分&#39;,</span></span>\n<span class="line"><span>  `sales_count` int DEFAULT &#39;0&#39; COMMENT &#39;商品销量&#39;,</span></span>\n<span class="line"><span>  `virtual_sales_count` int DEFAULT &#39;0&#39; COMMENT &#39;虚拟销量&#39;,</span></span>\n<span class="line"><span>  `browse_count` int DEFAULT &#39;0&#39; COMMENT &#39;商品点击量&#39;,</span></span>\n<span class="line"><span>  `sort` int NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;排序字段&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `sub_commission_type` bit(1) DEFAULT NULL COMMENT &#39;分销类型&#39;,</span></span>\n<span class="line"><span>  PRIMARY KEY (`id`) USING BTREE</span></span>\n<span class="line"><span>) ENGINE=InnoDB AUTO_INCREMENT=640 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;商品spu&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>① 【基础设置】<code>name</code>、<code>keyword</code>、<code>introduction</code>、<code>description</code>、<code>category_id</code>、<code>brand_id</code>、<code>pic_url</code>、<code>slider_pic_urls</code> 字段：商品 SPU 的基本信息。</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/SPU信息-基础设置.png" alt="基础设置" tabindex="0" loading="lazy"><figcaption>基础设置</figcaption></figure><p>② <code>status</code> 字段：商品状态，1 上架（开启）、0 下架（禁用）、-1 回收，用户在 uni-app 看到的商品，只有 <code>status</code> 为 1 的商品。</p><p>③ 【库存价格】<code>spec_type</code> 字段：规格类型，<code>false</code> 单规格、<code>true</code> 多规格。要注意，即使是单规格，也会创建一个 SKU，这个 SKU 的 <code>properties</code> 字段为“默认”数组 <code>[{&quot;propertyId&quot;:0,&quot;propertyName&quot;:&quot;默认&quot;,&quot;valueId&quot;:0,&quot;valueName&quot;:&quot;默认&quot;}]</code>。</p><p><code>price</code>、<code>market_price</code>、<code>cost_price</code> 字段：取对应 SKU 的最小值。<code>stock</code> 字段：取对应 SKU 库存的累加值。</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/SKU信息.png" alt="库存价格" tabindex="0" loading="lazy"><figcaption>库存价格</figcaption></figure><p>④ 【物流设置】<code>delivery_types</code> 字段：配送方式数组，目前有 1 快递发货、2 门店自提。</p><p><code>delivery_template_id</code> 字段：物流配置模板编号，仅当 <code>delivery_types</code> 为 1 时，才会有值。</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/SPU信息-物流设置.png" alt="物流设置" tabindex="0" loading="lazy"><figcaption>物流设置</figcaption></figure><p>⑤ 【其它设置】<code>give_integral</code> 字段：赠送积分，用户购买该商品，赠送的积分。</p><p><code>sales_count</code> 字段：商品销量，每次用户下单时，更新该字段。<code>virtual_sales_count</code> 字段：虚拟销量，最终展示给用户的销量是 <code>sales_count</code> + <code>virtual_sales_count</code> 。</p><p><code>browse_count</code> 字段：商品点击量，每次用户点击商品时，更新该字段。另外，也会往 <code>product_browse_history</code> 插入一条浏览记录。</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/SPU信息-其它设置.png" alt="其它设置" tabindex="0" loading="lazy"><figcaption>其它设置</figcaption></figure><h2 id="_2-管理后台" tabindex="-1"><a class="header-anchor" href="#_2-管理后台"><span><a href="#_2-%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0">#</a> 2. 管理后台</span></a></h2><h3 id="_2-1-商品列表" tabindex="-1"><a class="header-anchor" href="#_2-1-商品列表"><span><a href="#_2-1-%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8">#</a> 2.1 商品列表</span></a></h3><p>对应 [商城系统 -&gt; 商品中心 -&gt; 商品列表] 菜单，对应 <code>yudao-ui-admin-vue3</code> 项目的 <code>@/views/mall/product/spu</code> 目录。</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/管理后台-商品列表.png" alt="商品列表" tabindex="0" loading="lazy"><figcaption>商品列表</figcaption></figure><h3 id="_2-2-商品发布" tabindex="-1"><a class="header-anchor" href="#_2-2-商品发布"><span><a href="#_2-2-%E5%95%86%E5%93%81%E5%8F%91%E5%B8%83">#</a> 2.2 商品发布</span></a></h3><p>商品的新增、修改、详情界面，都对应 <code>yudao-ui-admin-vue3</code> 项目的 <code>@/views/mall/product/spu/form</code> 目录。</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/管理后台-商品发布.png" alt="商品发布" tabindex="0" loading="lazy"><figcaption>商品发布</figcaption></figure><p>考虑到前端代码的维护性，每个 Tab 对应一个组件，这样修改某个 Tab 的代码，不会影响到其它 Tab 的代码。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/管理后台-商品发布-前端代码.png" alt="前端代码" tabindex="0" loading="lazy"><figcaption>前端代码</figcaption></figure><ul><li>基础设置：<code>views/mall/product/spu/form/InfoForm.vue</code></li><li>库存价格：<code>views/mall/product/spu/form/SkuForm.vue</code></li><li>物流设置：<code>views/mall/product/spu/form/DeliveryForm.vue</code></li><li>商品描述：<code>views/mall/product/spu/form/DescriptionForm.vue</code></li><li>其它设置：<code>views/mall/product/spu/form/OtherForm.vue</code></li></ul><h2 id="_3-移动端" tabindex="-1"><a class="header-anchor" href="#_3-移动端"><span><a href="#_3-%E7%A7%BB%E5%8A%A8%E7%AB%AF">#</a> 3. 移动端</span></a></h2><p>商品在 uni-app 的代码，主要在 <code>yudao-ui-uniapp</code> 项目的 <code>@/pages/goods</code> 目录。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/移动端-前端代码.png" alt="前端代码" tabindex="0" loading="lazy"><figcaption>前端代码</figcaption></figure><h3 id="_3-1-商品列表" tabindex="-1"><a class="header-anchor" href="#_3-1-商品列表"><span><a href="#_3-1-%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8">#</a> 3.1 商品列表</span></a></h3><p>商品列表，对应 <code>@/pages/goods/list.vue</code> 文件。界面效果如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/移动端-商品列表.png" alt="商品列表" tabindex="0" loading="lazy"><figcaption>商品列表</figcaption></figure><h3 id="_3-2-商品详情" tabindex="-1"><a class="header-anchor" href="#_3-2-商品详情"><span><a href="#_3-2-%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85">#</a> 3.2 商品详情</span></a></h3><p>商品详情，对应 <code>@/pages/goods/index.vue</code> 文件。界面效果如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/移动端-商品详情.png" alt="商品详情" tabindex="0" loading="lazy"><figcaption>商品详情</figcaption></figure><p>考虑到商品详情界面的复杂性，所以将其拆分成多个组件，如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/商城手册/SPU与SKU/移动端-商品详情-前端代码.png" alt="商品详情" tabindex="0" loading="lazy"><figcaption>商品详情</figcaption></figure><p>另外，如果你想看商品 SKU 选择的代码，可以看 <code>/sheep/components/s-select-sku/s-select-sku.vue</code> 文件。</p><p>注意，拼团、秒杀商品的界面展示不同，所以单独分别对应了 <code>@/pages/goods/groupon.vue</code>、<code>@/pages/goods/seckill.vue</code> 文件。</p>',67),c=[p];function d(o,l){return e(),s("div",null,c)}const r=n(i,[["render",d],["__file","product-spu-sku.html.vue"]]),u=JSON.parse('{"path":"/project/yudao-cloud/mall/product-spu-sku.html","title":"【商品】商品 SPU 与 SKU","lang":"en-US","frontmatter":{"title":"【商品】商品 SPU 与 SKU","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":97,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 表结构","slug":"_1-表结构","link":"#_1-表结构","children":[{"level":3,"title":"# 1.1 商品 SKU","slug":"_1-1-商品-sku","link":"#_1-1-商品-sku","children":[]},{"level":3,"title":"# 1.2 商品 SPU","slug":"_1-2-商品-spu","link":"#_1-2-商品-spu","children":[]}]},{"level":2,"title":"# 2. 管理后台","slug":"_2-管理后台","link":"#_2-管理后台","children":[{"level":3,"title":"# 2.1 商品列表","slug":"_2-1-商品列表","link":"#_2-1-商品列表","children":[]},{"level":3,"title":"# 2.2 商品发布","slug":"_2-2-商品发布","link":"#_2-2-商品发布","children":[]}]},{"level":2,"title":"# 3. 移动端","slug":"_3-移动端","link":"#_3-移动端","children":[{"level":3,"title":"# 3.1 商品列表","slug":"_3-1-商品列表","link":"#_3-1-商品列表","children":[]},{"level":3,"title":"# 3.2 商品详情","slug":"_3-2-商品详情","link":"#_3-2-商品详情","children":[]}]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":7.6,"words":2280},"filePathRelative":"project/yudao-cloud/mall/product-spu-sku.md","localizedDate":"July 7, 2024"}');export{r as comp,u as data};
