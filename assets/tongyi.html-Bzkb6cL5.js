import{_ as o,g as t,o as l,c as i,e as a,h as e,f as p,w as s,a as r}from"./app-BRTHG7K9.js";const c={},d=r('<h1 id="【模型接入】通义千问" tabindex="-1"><a class="header-anchor" href="#【模型接入】通义千问"><span>【模型接入】通义千问</span></a></h1><p>项目基于 Spring Cloud Alibaba AI 的 <a href="https://github.com/alibaba/spring-cloud-alibaba/tree/2023.x/spring-cloud-alibaba-starters" target="_blank" rel="noopener noreferrer"><code>spring-cloud-alibaba-starters</code></a>，实现 <a href="https://tongyi.aliyun.com/" target="_blank" rel="noopener noreferrer">通义千问</a> 的接入：</p><table><thead><tr><th>功能</th><th>模型</th><th>Spring AI 客户端</th></tr></thead><tbody><tr><td>AI 对话</td><td><a href="https://help.aliyun.com/zh/dashscope/developer-reference/quick-start?spm=a2c4g.11186623.0.0.1adc77943sTgBV" target="_blank" rel="noopener noreferrer">通义千问</a></td><td><a href="https://github.com/alibaba/spring-cloud-alibaba/blob/2023.x/spring-cloud-alibaba-starters/spring-cloud-starter-alibaba-ai/src/main/java/com/alibaba/cloud/ai/tongyi/chat/TongYiChatModel.java" target="_blank" rel="noopener noreferrer">TongYiChatModel</a></td></tr><tr><td>AI 绘画</td><td><a href="https://help.aliyun.com/zh/dashscope/developer-reference/tongyi-wanxiang/?spm=a2c4g.11186623.0.0.2f507794a1KWKV" target="_blank" rel="noopener noreferrer">通义万象</a></td><td><a href="https://github.com/alibaba/spring-cloud-alibaba/blob/2023.x/spring-cloud-alibaba-starters/spring-cloud-starter-alibaba-ai/src/main/java/com/alibaba/cloud/ai/tongyi/image/TongYiImagesModel.java" target="_blank" rel="noopener noreferrer">TongYiImagesModel</a></td></tr></tbody></table><p>补充说明：</p><p>通义千问支持 <a href="https://help.aliyun.com/zh/dashscope/developer-reference/api-details-9" target="_blank" rel="noopener noreferrer">图片生成</a>，未来我们也会进行集成。</p><h2 id="_1-申请密钥-私有部署" tabindex="-1"><a class="header-anchor" href="#_1-申请密钥-私有部署"><span><a href="#_1-%E7%94%B3%E8%AF%B7%E5%AF%86%E9%92%A5-%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2">#</a> 1. 申请密钥（私有部署）</span></a></h2><p>通义千问有<a href="https://help.aliyun.com/document_detail/2712818.html" target="_blank" rel="noopener noreferrer">开源版本</a>，提供包括 18 亿、70 亿、140 亿和 720亿 等多个规模的版本，所以我们可以私有化部署。</p><p>当然，能力更强的模型，就需要使用阿里云提供的<a href="https://help.aliyun.com/document_detail/2712816.html?spm=a2c4g.2786271.0.0.4e337211cCVTAk" target="_blank" rel="noopener noreferrer">大模型服务</a>。</p><p>下面，我们来看看这两种方式怎么申请（部署）？</p><p>友情提示：</p><p>一般情况下，建议先采用“方式一：申请阿里云密钥”，因为阿里云提供了一定的免费额度，具体可以看 <a href="https://dashscope.console.aliyun.com/billing" target="_blank" rel="noopener noreferrer">阿里云计费管理（需要登录）</a>，搜“免费额度”或者“限时免费”关键字。</p><h3 id="_1-1-方式一-申请阿里云密钥" tabindex="-1"><a class="header-anchor" href="#_1-1-方式一-申请阿里云密钥"><span><a href="#_1-1-%E6%96%B9%E5%BC%8F%E4%B8%80-%E7%94%B3%E8%AF%B7%E9%98%BF%E9%87%8C%E4%BA%91%E5%AF%86%E9%92%A5">#</a> 1.1 方式一：申请阿里云密钥</span></a></h3><p>参考 <a href="https://help.aliyun.com/zh/dashscope/developer-reference/quick-start" target="_blank" rel="noopener noreferrer">《阿里云大模型 —— 快速模型》</a> 文档，重点是“开通 DashScope 并<a href="https://help.aliyun.com/zh/dashscope/developer-reference/activate-dashscope-and-create-an-api-key" target="_blank" rel="noopener noreferrer">创建 API-KEY</a>”部分，其它都不用关注。一般 1-2 分钟就可以申请完成！</p><hr><p>申请完成后，可以在我们系统的 [AI 大模型 -&gt; 控制台 -&gt; API 密钥] 菜单，进行密钥的配置。只需要填写“密钥”，不需要填写“自定义 API URL”（因为 Spring AI 默认官方地址）。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/AI手册/模型接入/通义千问-官方.png" alt="官方的密钥配置" tabindex="0" loading="lazy"><figcaption>官方的密钥配置</figcaption></figure><p>具体它有哪些模型，还是可以通过 <a href="https://dashscope.console.aliyun.com/billing" target="_blank" rel="noopener noreferrer">阿里云计费管理（需要登录）</a> 查看。例如说：<code>qwen-turbo</code>、<code>qwen-max</code>、<code>qwen-max-1201</code>、<code>qwen-max-longcontext</code>、<code>qwen-plus</code>。</p><h3 id="_1-2-方式二-私有化部署" tabindex="-1"><a class="header-anchor" href="#_1-2-方式二-私有化部署"><span><a href="#_1-2-%E6%96%B9%E5%BC%8F%E4%BA%8C-%E7%A7%81%E6%9C%89%E5%8C%96%E9%83%A8%E7%BD%B2">#</a> 1.2 方式二：私有化部署</span></a></h3><p>① 访问 <a href="https://ollama.ai/download" target="_blank" rel="noopener noreferrer">https://ollama.ai/download</a>，下载对应系统 Ollama 客户端，然后安装。</p><p>② 安装完成后，在命令中执行 <code>ollama run qwen</code> 命令，一键部署 <a href="https://ollama.com/library/qwen" target="_blank" rel="noopener noreferrer">通义千问开源模型</a>，默认跑的是 <code>qwen:4b</code> 模型。</p><hr><p>部署完成后，可以在我们系统的 [AI 大模型 -&gt; 控制台 -&gt; API 密钥] 菜单，进行密钥的配置。需要填写“密钥” + “自定义 API URL”（因为让 Spring AI 使用该地址）。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/AI手册/模型接入/通义千问-私有.png" alt="私有的密钥配置" tabindex="0" loading="lazy"><figcaption>私有的密钥配置</figcaption></figure><p>具体它有哪些模型，还是可以通过 <a href="https://github.com/QwenLM/Qwen/blob/main/README_CN.md" target="_blank" rel="noopener noreferrer">《Qwen —— README》</a> 查看。例如说：<code>Qwen-1.8B</code>、<code>Qwen-7B</code>、<code>Qwen-14B</code>、<code>Qwen-72B</code>。</p><h3 id="_1-3-补充说明" tabindex="-1"><a class="header-anchor" href="#_1-3-补充说明"><span><a href="#_1-3-%E8%A1%A5%E5%85%85%E8%AF%B4%E6%98%8E">#</a> 1.3 补充说明</span></a></h3>',25),h=a("code",null,"max_tokens",-1),g=r(`<p>目前 <a href="https://help.aliyun.com/zh/dashscope/developer-reference/api-details" target="_blank" rel="noopener noreferrer">官方文档</a> 介绍，一般是 1500 或 2000。</p><p>不确定的话，就填写 1500 先~跑通之后，再网上查查。</p><h2 id="_2-如何使用" tabindex="-1"><a class="header-anchor" href="#_2-如何使用"><span><a href="#_2-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8">#</a> 2. 如何使用？</span></a></h2><p>① 如果你的项目里需要直接通过 <code>@Resource</code> 注入 TongYiChatModel、TongYiImageModel 等对象，需要把 <code>application.yaml</code> 配置文件里的 <code>spring.cloud.ai.tongyi.</code> 配置项，替换成你的！</p><p>ps：暂时不支持“方式二：私有化部署”。（后续会支持！）</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>spring:</span></span>
<span class="line"><span>  cloud:</span></span>
<span class="line"><span>    ai:</span></span>
<span class="line"><span>      tongyi: # 通义千问</span></span>
<span class="line"><span>        tongyi:</span></span>
<span class="line"><span>          api-key: sk-Zsd81gZYg7 # 你的密钥</span></span></code></pre></div><p>② 如果你希望使用 [AI 大模型 -&gt; 控制台 -&gt; API 密钥] 菜单的密钥配置，则可以通过 AiApiKeyService 的 <code>#getChatModel(...)</code> 或 <code>#getImageModel(...)</code> 方法，获取对应的模型对象。</p><hr><p>① 和 ② 这两者的后续使用，就是标准的 Spring AI 客户端的使用，调用对应的方法即可。</p><p>另外，QianWenChatModelTests 里有对应的测试用例，可以参考。</p>`,10);function b(f,m){const n=t("RouteLink");return l(),i("div",null,[d,a("p",null,[e("如果后续你要体验 "),p(n,{to:"/ai/chat/"},{default:s(()=>[e("《AI 对话》")]),_:1}),e(" ，需要在 [AI 大模型 -> 控制台 -> 聊天模型] 菜单，配置对应的聊天模型。注意，每个模型标识的 "),h,e("（回复数 Token 数）是不同的。")]),g])}const _=o(c,[["render",b],["__file","tongyi.html.vue"]]),k=JSON.parse('{"path":"/project/rouyi-vue-pro/ai/tongyi.html","title":"【模型接入】通义千问","lang":"en-US","frontmatter":{"title":"【模型接入】通义千问","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":136,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 申请密钥（私有部署）","slug":"_1-申请密钥-私有部署","link":"#_1-申请密钥-私有部署","children":[{"level":3,"title":"# 1.1 方式一：申请阿里云密钥","slug":"_1-1-方式一-申请阿里云密钥","link":"#_1-1-方式一-申请阿里云密钥","children":[]},{"level":3,"title":"# 1.2 方式二：私有化部署","slug":"_1-2-方式二-私有化部署","link":"#_1-2-方式二-私有化部署","children":[]},{"level":3,"title":"# 1.3 补充说明","slug":"_1-3-补充说明","link":"#_1-3-补充说明","children":[]}]},{"level":2,"title":"# 2. 如何使用？","slug":"_2-如何使用","link":"#_2-如何使用","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":3.53,"words":1058},"filePathRelative":"project/rouyi-vue-pro/ai/tongyi.md","localizedDate":"July 7, 2024"}');export{_ as comp,k as data};
