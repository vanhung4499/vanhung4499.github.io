import{_ as s,o as a,c as t,a as n}from"./app-CmlOSuIY.js";const e={};function h(l,i){return a(),t("div",null,i[0]||(i[0]=[n(`<h1 id="ke-thua-module" tabindex="-1"><a class="header-anchor" href="#ke-thua-module"><span>Kế thừa module</span></a></h1><p>Các module cũng có thể kế thừa lẫn nhau.</p><p>Giả sử có một module <code>children</code>, kế thừa từ module <code>parent</code>.</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// children.js</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> *</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &#39;parent&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> var</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &#39;child&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> cry</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  // làm gì đó</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Trong đoạn mã trên, <code>export *</code> có nghĩa là xuất tất cả các module và phương thức từ module <code>parent</code>. Sau đó, đoạn mã trên cũng xuất thuộc tính tùy chỉnh <code>name</code> và phương thức mặc định <code>cry</code>.</p><p>Đồng thời, cũng có thể đổi tên thuộc tính hoặc phương thức của <code>parent</code> trước khi xuất chúng.</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// children.js</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">work</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> job</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &#39;parent&#39;</span></span></code></pre></div><p>Đoạn mã trên có nghĩa là chỉ xuất phương thức <code>work</code> của module <code>parent</code> và đổi tên thành <code>job</code>.</p><p>Cách tải module trên được thực hiện như sau:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// main.js</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> *</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> child</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &#39;children&#39;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> cry</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &#39;children&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">cry</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">child</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span></code></pre></div><p>Đoạn mã trên với <code>import cry from &#39;children&#39;</code> có nghĩa là tải phương thức mặc định của module <code>children</code> và gán cho phương thức <code>cry</code>.</p>`,11)]))}const k=s(e,[["render",h],["__file","module-inheritance.html.vue"]]),r=JSON.parse(`{"path":"/programming/js/core/modularization/module-inheritance.html","title":"Module Inheritance","lang":"en-US","frontmatter":{"title":"Module Inheritance","tags":["js","programming"],"categories":["js","programming"],"date created":"2023-08-05T00:00:00.000Z","date modified":"2023-08-05T00:00:00.000Z","order":5,"description":"Kế thừa module Các module cũng có thể kế thừa lẫn nhau. Giả sử có một module children, kế thừa từ module parent. Trong đoạn mã trên, export * có nghĩa là xuất tất cả các module ...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/programming/js/core/modularization/module-inheritance.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Module Inheritance"}],["meta",{"property":"og:description","content":"Kế thừa module Các module cũng có thể kế thừa lẫn nhau. Giả sử có một module children, kế thừa từ module parent. Trong đoạn mã trên, export * có nghĩa là xuất tất cả các module ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"programming"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Module Inheritance\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":0.8,"words":240},"filePathRelative":"programming/js/core/modularization/module-inheritance.md","localizedDate":"June 28, 2024","excerpt":"\\n<p>Các module cũng có thể kế thừa lẫn nhau.</p>\\n<p>Giả sử có một module <code>children</code>, kế thừa từ module <code>parent</code>.</p>\\n<div class=\\"language-js\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// children.js</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C678DD\\">export</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#D19A66\\"> *</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C678DD\\"> from</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#98C379\\"> 'parent'</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C678DD\\">export</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C678DD\\"> var</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#E06C75\\"> name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#98C379\\"> 'child'</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C678DD\\">export</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C678DD\\"> function</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#61AFEF\\"> cry</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF\\">(){</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // làm gì đó</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n</div>","autoDesc":true}`);export{k as comp,r as data};
