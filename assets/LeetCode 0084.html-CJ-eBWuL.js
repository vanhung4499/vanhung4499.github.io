import{_ as s,o as a,c as t,a as n}from"./app-CIGQMwlz.js";const h={};function e(l,i){return a(),t("div",null,i[0]||(i[0]=[n(`<h1 id="_0084-largest-rectangle-in-histogram" tabindex="-1"><a class="header-anchor" href="#_0084-largest-rectangle-in-histogram"><span><a href="https://leetcode.com/problems/largest-rectangle-in-histogram/" target="_blank" rel="noopener noreferrer">0084. Largest Rectangle in Histogram</a></span></a></h1><ul><li>Thẻ: Ngăn xếp, Mảng, Ngăn xếp đơn điệu</li><li>Độ khó: Khó</li></ul><h2 id="tom-tat-đe-bai" tabindex="-1"><a class="header-anchor" href="#tom-tat-đe-bai"><span>Tóm tắt đề bài</span></a></h2><p>Cho một mảng số nguyên không âm <code>heights</code>, <code>heights[i]</code> được sử dụng để biểu thị chiều cao của cột tương ứng trong biểu đồ cột. Mỗi cột kề nhau và có chiều rộng là 1.</p><p>Yêu cầu: Tính toán diện tích của hình chữ nhật lớn nhất mà có thể được hình thành từ các cột trong biểu đồ.</p><h2 id="y-tuong-giai-quyet" tabindex="-1"><a class="header-anchor" href="#y-tuong-giai-quyet"><span>Ý tưởng giải quyết</span></a></h2><p>Có một số cách tiếp cận để giải quyết bài toán này. Dưới đây là một cách tiếp cận sử dụng ngăn xếp đơn điệu.</p><ul><li>Thêm một phần tử <code>0</code> vào cuối mảng <code>heights</code> để đảm bảo rằng tất cả các cột đều được xem xét.</li><li>Khởi tạo biến <code>ans</code> để lưu kết quả, và một ngăn xếp rỗng <code>stack</code>.</li><li>Duyệt qua từng cột trong mảng <code>heights</code>: <ul><li>Nếu ngăn xếp không rỗng và chiều cao của cột hiện tại nhỏ hơn hoặc bằng chiều cao của cột đỉnh ngăn xếp, thực hiện các bước sau: <ul><li>Lấy phần tử đỉnh ngăn xếp ra khỏi ngăn xếp, gán cho biến <code>cur</code>.</li><li>Tính toán chỉ số <code>left</code> và <code>right</code> của hình chữ nhật lớn nhất có thể được tạo thành từ cột hiện tại và cột đỉnh ngăn xếp.</li><li>Tính diện tích của hình chữ nhật và so sánh với <code>ans</code>, lưu giá trị lớn nhất.</li></ul></li><li>Đẩy chỉ số của cột hiện tại vào ngăn xếp.</li></ul></li><li>Trả về kết quả <code>ans</code>.</li></ul><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code"><span>Code</span></a></h2><div class="language-python" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Solution</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> largestRectangleArea</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">heights</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: List[</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">]) -&gt; </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        heights.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        ans </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        stack </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(heights)):</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">            while</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> stack </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> heights[stack[</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">]] </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> heights[i]:</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">                cur </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> stack.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">pop</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">                left </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> stack[</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> stack </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">                right </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">                ans </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> max</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(ans, (right </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> left </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> heights[cur])</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            stack.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(i)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> ans</span></span></code></pre></div><h2 id="đo-phuc-tap" tabindex="-1"><a class="header-anchor" href="#đo-phuc-tap"><span>Độ phức tạp</span></a></h2><ul><li>Độ phức tạp thời gian: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</li><li>Độ phức tạp không gian: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</li></ul>`,12)]))}const k=s(h,[["render",e],["__file","LeetCode 0084.html.vue"]]),B=JSON.parse('{"path":"/dsa/leetcode/LeetCode%200084.html","title":"LeetCode 0084","lang":"en-US","frontmatter":{"title":"LeetCode 0084","tags":["dsa","leetcode"],"categories":["dsa","leetcode"],"date created":"2023-09-24T00:00:00.000Z","date modified":"2023-09-28T00:00:00.000Z","description":"0084. Largest Rectangle in Histogram Thẻ: Ngăn xếp, Mảng, Ngăn xếp đơn điệu Độ khó: Khó Tóm tắt đề bài Cho một mảng số nguyên không âm heights, heights[i] được sử dụng để biểu t...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/dsa/leetcode/LeetCode%200084.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"LeetCode 0084"}],["meta",{"property":"og:description","content":"0084. Largest Rectangle in Histogram Thẻ: Ngăn xếp, Mảng, Ngăn xếp đơn điệu Độ khó: Khó Tóm tắt đề bài Cho một mảng số nguyên không âm heights, heights[i] được sử dụng để biểu t..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"dsa"}],["meta",{"property":"article:tag","content":"leetcode"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LeetCode 0084\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Tóm tắt đề bài","slug":"tom-tat-đe-bai","link":"#tom-tat-đe-bai","children":[]},{"level":2,"title":"Ý tưởng giải quyết","slug":"y-tuong-giai-quyet","link":"#y-tuong-giai-quyet","children":[]},{"level":2,"title":"Code","slug":"code","link":"#code","children":[]},{"level":2,"title":"Độ phức tạp","slug":"đo-phuc-tap","link":"#đo-phuc-tap","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":1.59,"words":477},"filePathRelative":"dsa/leetcode/LeetCode 0084.md","localizedDate":"June 28, 2024","excerpt":"\\n<ul>\\n<li>Thẻ: Ngăn xếp, Mảng, Ngăn xếp đơn điệu</li>\\n<li>Độ khó: Khó</li>\\n</ul>\\n<h2>Tóm tắt đề bài</h2>\\n<p>Cho một mảng số nguyên không âm <code>heights</code>, <code>heights[i]</code> được sử dụng để biểu thị chiều cao của cột tương ứng trong biểu đồ cột. Mỗi cột kề nhau và có chiều rộng là 1.</p>","autoDesc":true}');export{k as comp,B as data};
