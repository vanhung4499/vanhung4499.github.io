import{_ as n,o as a,c as s,d as t}from"./app-CwNOAUqW.js";const i={},e=t(`<h1 id="_0901-online-stock-span" tabindex="-1"><a class="header-anchor" href="#_0901-online-stock-span"><span><a href="https://leetcode.com/problems/online-stock-span/" target="_blank" rel="noopener noreferrer">0901. Online Stock Span</a></span></a></h1><ul><li>Tags: Stack, Design, Data Stream, Monotonic Stack</li><li>Độ khó: Trung bình</li></ul><h2 id="y-nghia-đe-bai" tabindex="-1"><a class="header-anchor" href="#y-nghia-đe-bai"><span>Ý nghĩa đề bài</span></a></h2><p>Yêu cầu: Viết một lớp <code>StockSpanner</code> để thu thập giá cổ phiếu hàng ngày và trả về khoảng giá của cổ phiếu trong ngày hiện tại.</p><ul><li>Khoảng giá cổ phiếu trong ngày hôm nay: Số ngày liên tiếp lớn nhất mà giá cổ phiếu nhỏ hơn hoặc bằng giá cổ phiếu hôm nay (tính từ hôm nay trở về trước, bao gồm cả hôm nay).</li></ul><p>Ví dụ: Nếu giá cổ phiếu trong 7 ngày tới là <code>[100, 80, 60, 70, 60, 75, 85]</code> thì khoảng giá cổ phiếu sẽ là <code>[1, 1, 1, 2, 1, 4, 6]</code>.</p><h2 id="y-tuong-giai-quyet" tabindex="-1"><a class="header-anchor" href="#y-tuong-giai-quyet"><span>Ý tưởng giải quyết</span></a></h2><p>&quot;Khoảng giá cổ phiếu trong ngày hôm nay&quot; tương đương với &quot;tìm phần tử đầu tiên bên trái mà lớn hơn giá cổ phiếu hiện tại và tính khoảng cách&quot;. Để tìm phần tử đầu tiên bên trái mà lớn hơn giá cổ phiếu hiện tại, ta có thể sử dụng &quot;ngăn xếp đơn điệu&quot; để làm. Các bước cụ thể như sau:</p><ul><li>Phương thức khởi tạo: Khởi tạo một ngăn xếp rỗng, tức là <code>self.stack = []</code>.</li><li>Tính khoảng giá cổ phiếu trong ngày hôm nay: <ul><li>Khởi tạo khoảng giá <code>span</code> là <code>1</code>.</li><li>Nếu giá cổ phiếu hôm nay <code>price</code> lớn hơn hoặc bằng phần tử đỉnh ngăn xếp <code>self.stack[-1][0]</code>, thực hiện các bước sau: <ul><li>Lấy phần tử đỉnh ngăn xếp ra khỏi ngăn xếp, tức là <code>top = self.stack.pop()</code>.</li><li>Cộng dồn khoảng giá của phần tử đỉnh ngăn xếp vào khoảng giá <code>span</code>, tức là <code>span += top[1]</code>.</li><li>Tiếp tục kiểm tra, cho đến khi gặp một giá cổ phiếu hôm nay <code>price</code> nhỏ hơn phần tử đỉnh ngăn xếp, sau đó đẩy <code>[price, span]</code> vào ngăn xếp.</li></ul></li><li>Nếu giá cổ phiếu hôm nay <code>price</code> nhỏ hơn phần tử đỉnh ngăn xếp <code>self.stack[-1][0]</code>, đẩy <code>[price, span]</code> vào ngăn xếp.</li><li>Cuối cùng, trả về khoảng giá cổ phiếu trong ngày hôm nay <code>span</code>.</li></ul></li></ul><h2 id="đoan-ma" tabindex="-1"><a class="header-anchor" href="#đoan-ma"><span>Đoạn mã</span></a></h2><div class="language-python" data-ext="python" data-title="python"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> StockSpanner</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    def</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> __init__</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;font-style:italic;--shiki-dark-font-style:italic;">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.stack </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    def</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> next</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;font-style:italic;--shiki-dark-font-style:italic;">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;font-style:italic;--shiki-dark-font-style:italic;">price</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        span </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        while</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.stack </span><span style="color:#C678DD;--shiki-dark:#C678DD;">and</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> price </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.stack[</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">][</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            top </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.stack.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            span </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> top[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.stack.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">([price, span])</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> span</span></span></code></pre></div>`,11),o=[e];function l(p,c){return a(),s("div",null,o)}const h=n(i,[["render",l],["__file","LeetCode 0901.html.vue"]]),B=JSON.parse('{"path":"/dsa/leetcode/LeetCode%200901.html","title":"LeetCode 0901","lang":"en-US","frontmatter":{"title":"LeetCode 0901","tags":["dsa","leetcode"],"categories":["dsa","leetcode"],"date created":"2023-09-24T00:00:00.000Z","date modified":"2023-09-28T00:00:00.000Z","description":"0901. Online Stock Span Tags: Stack, Design, Data Stream, Monotonic Stack Độ khó: Trung bình Ý nghĩa đề bài Yêu cầu: Viết một lớp StockSpanner để thu thập giá cổ phiếu hàng ngày...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/dsa/leetcode/LeetCode%200901.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"LeetCode 0901"}],["meta",{"property":"og:description","content":"0901. Online Stock Span Tags: Stack, Design, Data Stream, Monotonic Stack Độ khó: Trung bình Ý nghĩa đề bài Yêu cầu: Viết một lớp StockSpanner để thu thập giá cổ phiếu hàng ngày..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"dsa"}],["meta",{"property":"article:tag","content":"leetcode"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LeetCode 0901\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Ý nghĩa đề bài","slug":"y-nghia-đe-bai","link":"#y-nghia-đe-bai","children":[]},{"level":2,"title":"Ý tưởng giải quyết","slug":"y-tuong-giai-quyet","link":"#y-tuong-giai-quyet","children":[]},{"level":2,"title":"Đoạn mã","slug":"đoan-ma","link":"#đoan-ma","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":1.71,"words":514},"filePathRelative":"dsa/leetcode/LeetCode 0901.md","localizedDate":"June 28, 2024","excerpt":"\\n<ul>\\n<li>Tags: Stack, Design, Data Stream, Monotonic Stack</li>\\n<li>Độ khó: Trung bình</li>\\n</ul>\\n<h2>Ý nghĩa đề bài</h2>\\n<p>Yêu cầu: Viết một lớp <code>StockSpanner</code> để thu thập giá cổ phiếu hàng ngày và trả về khoảng giá của cổ phiếu trong ngày hiện tại.</p>\\n<ul>\\n<li>Khoảng giá cổ phiếu trong ngày hôm nay: Số ngày liên tiếp lớn nhất mà giá cổ phiếu nhỏ hơn hoặc bằng giá cổ phiếu hôm nay (tính từ hôm nay trở về trước, bao gồm cả hôm nay).</li>\\n</ul>","autoDesc":true}');export{h as comp,B as data};
