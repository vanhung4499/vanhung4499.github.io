import{_ as t,g as l,o as p,c as s,e,h as a,f as n,w as r,a as i}from"./app-BRTHG7K9.js";const c={},d=i('<h1 id="快速启动-后端项目" tabindex="-1"><a class="header-anchor" href="#快速启动-后端项目"><span>快速启动（后端项目）</span></a></h1><p>目标：使用 IDEA 工具，将项目 <a href="https://github.com/YunaiV/ruoyi-vue-pro" target="_blank" rel="noopener noreferrer">ruoyi-vue-pro</a> 的后端项目运行起来 🛫</p><p>整个过程非常简单，预计 10 分钟就可以完成，取决于大家的网速。</p><blockquote><p>↓↓↓ 技术交流群，一起苦练技术基本功，每日精进 30 公里！↓↓↓</p></blockquote><figure><img src="https://doc.iocoder.cn/img/op/mp_yudaoyuanma2.png" alt="交流群" tabindex="0" loading="lazy"><figcaption>交流群</figcaption></figure><h2 id="👍-相关视频教程" tabindex="-1"><a class="header-anchor" href="#👍-相关视频教程"><span><a href="#%F0%9F%91%8D-%E7%9B%B8%E5%85%B3%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B">#</a> 👍 相关视频教程</span></a></h2><ul><li><a href="https://t.zsxq.com/07BeiEA6Q" target="_blank" rel="noopener noreferrer">从零开始 02：在 Windows 环境下，如何运行前后端项目？</a></li><li><a href="https://t.zsxq.com/07FUNnYFm" target="_blank" rel="noopener noreferrer">从零开始 03：在 MacOS 环境下，如何运行前后端项目？</a></li></ul><h2 id="_1-克隆代码" tabindex="-1"><a class="header-anchor" href="#_1-克隆代码"><span><a href="#_1-%E5%85%8B%E9%9A%86%E4%BB%A3%E7%A0%81">#</a> 1. 克隆代码</span></a></h2><p>使用 <a href="http://www.iocoder.cn/categories/IDEA/?self" target="_blank" rel="noopener noreferrer">IDEA</a> 克隆 <a href="https://github.com/YunaiV/ruoyi-vue-pro" target="_blank" rel="noopener noreferrer">https://github.com/YunaiV/ruoyi-vue-pro</a> 仓库的最新代码，并给该仓库一个 <a href="https://github.com/YunaiV/ruoyi-vue-pro" target="_blank" rel="noopener noreferrer">Star</a>。</p><blockquote><p>注意：不建议使用 Eclipse，因为它没有支持 Lombok 和 Mapstruct 插件。</p></blockquote><p>克隆完成后，耐心等待 Maven 下载完相关的依赖。一定要注意：</p><ul><li>① 默认情况下，使用 <code>master</code> 分支，它对应 JDK 8 + Spring Boot 2.7 版本。</li><li>② 如果你想体验 JDK 17/21 + Spring Boot 3.2 版本，需要切换到 <code>master-jdk17</code> 分支。</li></ul>',12),u=i('<p>使用的 Spring Boot 版本较新，所以需要下载一段时间。趁着这个时间，胖友可以给项目添加一个 <a href="https://github.com/YunaiV/ruoyi-vue-pro" target="_blank" rel="noopener noreferrer">Star</a>，支持下艿艿。</p><figure><img src="https://doc.iocoder.cn/img/后端手册/快速启动/Star.png" alt="Star 一波" tabindex="0" loading="lazy"><figcaption>Star 一波</figcaption></figure><h2 id="_2-apifox-接口工具" tabindex="-1"><a class="header-anchor" href="#_2-apifox-接口工具"><span><a href="#_2-apifox-%E6%8E%A5%E5%8F%A3%E5%B7%A5%E5%85%B7">#</a> 2. Apifox 接口工具</span></a></h2><p>点击 <a href="http://mtw.so/5NZLsX" target="_blank" rel="noopener noreferrer">Apifox</a> 首页，下载对应的 Apifox 桌面版。如下图所示：</p><p>为什么要下载 Apifox 桌面版？</p><p>艿艿已经卸载 Postman，使用 Apifox 进行替代。国产软件，yyds 永远滴神！</p><p>国内很多互联网公司，包括百度、阿里、腾讯、字节跳动等等在内，都在使用 Apifox 作为 API 工具。</p><figure><img src="https://doc.iocoder.cn/img/接口文档/01.png" alt="Apifox 下载" tabindex="0" loading="lazy"><figcaption>Apifox 下载</figcaption></figure><p>解压后，双击进行安装即可。黑色界面，非常酷炫。</p><figure><img src="https://doc.iocoder.cn/img/接口文档/02.png" alt="Apifox 界面" tabindex="0" loading="lazy"><figcaption>Apifox 界面</figcaption></figure><p>接口文档？</p><p>阅读 <a href="/api-doc">《开发指南 —— 接口文档》</a> 呀~~</p><h2 id="_3-初始化-mysql" tabindex="-1"><a class="header-anchor" href="#_3-初始化-mysql"><span><a href="#_3-%E5%88%9D%E5%A7%8B%E5%8C%96-mysql">#</a> 3. 初始化 MySQL</span></a></h2><p>友情提示？</p><p>如果你是 PostgreSQL、Oracle、SQL Server、DM、大金 等其它数据库，也是可以的。</p><p>因为我主要使用 MySQL数据库为主，所以其它数据库的 SQL 文件可能存在滞后，可以加入 <a href="/qun">用户群</a> 反馈。</p><p>项目使用 MySQL 存储数据，所以需要启动一个 MySQL 服务。</p><p>① 创建一个名字为 <code>ruoyi-vue-pro</code> 数据库，<strong>【只要】</strong> 执行对应数据库类型的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/tree/master/sql" target="_blank" rel="noopener noreferrer"><code>sql</code></a> 目录下的 <code>ruoyi-vue-pro.sql</code> SQL 文件，进行初始化。</p><figure><img src="https://doc.iocoder.cn/img/快速启动/快速启动.png" alt="导入 MySQL 数据库" tabindex="0" loading="lazy"><figcaption>导入 MySQL 数据库</figcaption></figure><p>② 默认配置下，MySQL 需要启动在 3306 端口，并且账号是 root，密码是 123456。如果不一致，需要修改 <code>application-local.yaml</code> 配置文件。</p><figure><img src="http://static.iocoder.cn/images/Yudao/2022-03-01/01.png?imageView2/2/format/webp/w/1024" alt="修改配置文件" tabindex="0" loading="lazy"><figcaption>修改配置文件</figcaption></figure><hr><p><strong>如果是 MySQL 数据库，不需要看 ③、④ 两点！！！</strong></p><p>③ 【如果是 PostgreSQL、Oracle、SQL Server 数据库】，修改 <code>yudao-spring-boot-starter-mybatis</code> 模块的 <code>pom.xml</code> 文件，将对应的 JDBC Driver 的 <code>optional</code> 移除。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/快速启动/数据库依赖.png" alt="数据库依赖" tabindex="0" loading="lazy"><figcaption>数据库依赖</figcaption></figure><p>注意，需要使用 IDEA 刷新下 Maven 的依赖。</p>',26),h=i(`<p>⑤ 【如果是大金数据库】建议先使用 MySQL 跑通，然后使用 PostgreSQL 驱动进行连接。</p><h2 id="_4-初始化-redis" tabindex="-1"><a class="header-anchor" href="#_4-初始化-redis"><span><a href="#_4-%E5%88%9D%E5%A7%8B%E5%8C%96-redis">#</a> 4. 初始化 Redis</span></a></h2><p>项目使用 Redis 缓存数据，所以需要启动一个 Redis 服务。</p><blockquote><p>不会安装的胖友，可以选择阅读下文，良心的艿艿。</p><ul><li>Windows 安装 Redis 指南：<a href="http://www.iocoder.cn/Redis/windows-install" target="_blank" rel="noopener noreferrer">http://www.iocoder.cn/Redis/windows-install</a></li><li>Mac 安装 Redis 指南：<a href="http://www.iocoder.cn/Redis/mac-install" target="_blank" rel="noopener noreferrer">http://www.iocoder.cn/Redis/mac-install</a></li></ul></blockquote><p>默认配置下，Redis 启动在 6379 端口，不设置账号密码。如果不一致，需要修改 <code>application-local.yaml</code> 配置文件。</p><figure><img src="http://static.iocoder.cn/images/Yudao/2022-03-01/02.png?imageView2/2/format/webp/w/1280" alt="修改配置文件" tabindex="0" loading="lazy"><figcaption>修改配置文件</figcaption></figure><h2 id="_5-启动后端项目" tabindex="-1"><a class="header-anchor" href="#_5-启动后端项目"><span><a href="#_5-%E5%90%AF%E5%8A%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE">#</a> 5. 启动后端项目</span></a></h2><p><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-server" target="_blank" rel="noopener noreferrer"><code>yudao-server</code></a> 是后端项目，提供管理后台、用户 APP 的 RESTful API 接口。</p><h3 id="_5-1-编译项目" tabindex="-1"><a class="header-anchor" href="#_5-1-编译项目"><span><a href="#_5-1-%E7%BC%96%E8%AF%91%E9%A1%B9%E7%9B%AE">#</a> 5.1 编译项目</span></a></h3><p>第一步，使用 IDEA 自带的 Maven 插件，进行项目的编译。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/后端手册/快速启动/后端编译.png" alt="后端编译" tabindex="0" loading="lazy"><figcaption>后端编译</figcaption></figure><p>【可选】也可以使用 Maven 命令编译：</p><ul><li>使用 IDEA 打开 Terminal 终端，在 <strong>根目录</strong> 下直接执行 <code>mvn clean install package &#39;-Dmaven.test.skip=true&#39;</code> 命令。</li><li>如果执行报 <code>Unknown lifecycle phase “.test.skip=true”</code> 错误，使用 <code>mvn clean install package -Dmaven.test.skip=true</code> 即可。</li></ul><p>ps：只有首次需要执行 Maven 命令，解决基础 <code>pom.xml</code> 不存在，导致报 BaseDbUnitTest 类不存在的问题。</p><p>整个过程，预计需要 1 分钟左右。成功后，控制台日志如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>[INFO] ------------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] BUILD SUCCESS</span></span>
<span class="line"><span>[INFO] ------------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Total time:  9.139 s (Wall Clock)</span></span>
<span class="line"><span>[INFO] Finished at: 2024-05-03T18:56:03+08:00</span></span>
<span class="line"><span>[INFO] ------------------------------------------------------------------------</span></span></code></pre></div><h3 id="_5-2-启动项目" tabindex="-1"><a class="header-anchor" href="#_5-2-启动项目"><span><a href="#_5-2-%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE">#</a> 5.2 启动项目</span></a></h3><p>第二步，执行 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-server/src/main/java/cn/iocoder/yudao/server/YudaoServerApplication.java" target="_blank" rel="noopener noreferrer">YudaoServerApplication</a> 类，进行启动。</p><p>启动还是报类不存在？</p><p>可能是 IDEA 的 bug，点击 [File -&gt; Invalidate Caches] 菜单，清空下缓存，重启后在试试看。</p><figure><img src="http://static.iocoder.cn/images/Yudao/2023-10-13/server-start.png?imageView2/2/format/webp/w/1280" alt="启动后端项目" tabindex="0" loading="lazy"><figcaption>启动后端项目</figcaption></figure><p>启动完成后，使用浏览器访问 <a href="http://127.0.0.1:48080" target="_blank" rel="noopener noreferrer">http://127.0.0.1:48080</a> 地址，返回如下 JSON 字符串，说明成功。</p><blockquote><p>友情提示：注意，默认配置下，后端项目启动在 48080 端口。</p></blockquote><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;code&quot;: 401,</span></span>
<span class="line"><span>    &quot;data&quot;: null,</span></span>
<span class="line"><span>    &quot;msg&quot;: &quot;账号未登录&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>如果报 “Command line is too long” 错误，参考 <a href="https://www.iocoder.cn/Fight/Intellij-IDEA-Indicates-that-Command-Line-is-too-long/?yudao" target="_blank" rel="noopener noreferrer">《Intellij IDEA 运行时报 Command line is too long 解决方法 》</a> 文章解决，或者直接点击 YudaoServerApplication <strong>蓝字</strong>部分！</p><figure><img src="https://doc.iocoder.cn/img/快速启动/01.png" alt="“Command line is too long” 错误" tabindex="0" loading="lazy"><figcaption>“Command line is too long” 错误</figcaption></figure><h3 id="_5-3-启动其它模块" tabindex="-1"><a class="header-anchor" href="#_5-3-启动其它模块"><span><a href="#_5-3-%E5%90%AF%E5%8A%A8%E5%85%B6%E5%AE%83%E6%A8%A1%E5%9D%97">#</a> 5.3 启动其它模块</span></a></h3><p>考虑到启动速度，默认值启动 <code>system</code> 系统服务，<code>infra</code> 基础设施两个模块。如果你需要启动其它模块，可以参考下面的文档：</p>`,28),g=i('<h2 id="_6-启动前端项目【简易】" tabindex="-1"><a class="header-anchor" href="#_6-启动前端项目【简易】"><span><a href="#_6-%E5%90%AF%E5%8A%A8%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E3%80%90%E7%AE%80%E6%98%93%E3%80%91">#</a> 6. 启动前端项目【简易】</span></a></h2><p>友情提示：这是可选步骤，想要完整启动前端，可以直接看「7. 启动前端项目【完整】」小节噢！</p><p>在 <a href="https://gitee.com/yudaocode/yudao-demo" target="_blank" rel="noopener noreferrer">yudao-demo</a> 项目中，提前编译好了前端项目的静态资源，无需安装 Node 等前端环境，可以直接体验和使用。操作步骤如下：</p><p>① 克隆 <a href="https://gitee.com/yudaocode/yudao-demo" target="_blank" rel="noopener noreferrer">https://gitee.com/yudaocode/yudao-demo</a> 项目，运行对应的启动类：</p><figure><img src="https://doc.iocoder.cn/img/快速启动/演示项目.png" alt="演示项目" tabindex="0" loading="lazy"><figcaption>演示项目</figcaption></figure><ul><li><a href="https://github.com/yudaocode/yudao-ui-admin-vue3" target="_blank" rel="noopener noreferrer">Vue3 + element-plus</a> ：ElementPlusApplication</li><li><a href="https://github.com/yudaocode/yudao-ui-admin-vben" target="_blank" rel="noopener noreferrer">Vue3 + vben</a> ：VbenApplication</li><li><a href="https://github.com/yudaocode/yudao-ui-admin-vben" target="_blank" rel="noopener noreferrer">Vue2 + element-ui</a> ：ElementUIApplication</li></ul><p>② 访问 <a href="http://127.0.0.1:2048/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:2048/</a> 地址，即可看到对应的管理后台。</p><p>补充说明：</p><p>前端项目是不定期编译，可能不是最新版本。</p><p>如果需要最新版本，请继续往下看。</p><h2 id="_7-启动前端项目【完整】" tabindex="-1"><a class="header-anchor" href="#_7-启动前端项目【完整】"><span><a href="#_7-%E5%90%AF%E5%8A%A8%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E3%80%90%E5%AE%8C%E6%95%B4%E3%80%91">#</a> 7. 启动前端项目【完整】</span></a></h2><p>参考 <a href="/quick-start-front">《快速启动（前端项目）》</a> 文档</p><h2 id="_666-彩蛋" tabindex="-1"><a class="header-anchor" href="#_666-彩蛋"><span><a href="#_666-%E5%BD%A9%E8%9B%8B">#</a> 666. 彩蛋</span></a></h2><p>至此，我们已经完成了项目 <a href="https://github.com/YunaiV/ruoyi-vue-pro" target="_blank" rel="noopener noreferrer">ruoyi-vue-pro</a> 的启动。</p>',14),f=e("figure",null,[e("img",{src:"https://doc.iocoder.cn/img/common/ruoyi-vue-pro-architecture.png",alt:"架构图",tabindex:"0",loading:"lazy"}),e("figcaption",null,"架构图")],-1),m=e("p",null,"后面，艿艿会花大量的时间，继续优化这个项目。同时，输出与项目匹配的技术博客，方便胖友更好的学习与理解。",-1),_=e("p",null,"还是那句话，😆 为开源继绝学，我辈义不容辞！",-1),b=e("hr",null,null,-1),E=e("p",null,[a("嘿嘿嘿，记得一定要给 "),e("a",{href:"https://github.com/YunaiV/ruoyi-vue-pro",target:"_blank",rel:"noopener noreferrer"},"https://github.com/YunaiV/ruoyi-vue-pro"),a(" 一个 star，这对艿艿真的很重要。")],-1),y=e("figure",null,[e("img",{src:"https://doc.iocoder.cn/img/后端手册/快速启动/Star.png",alt:"Star 一波",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Star 一波")],-1);function k(A,v){const o=l("RouteLink");return p(),s("div",null,[d,e("blockquote",null,[e("p",null,[a("友情提示：项目的每个模块的作用，可见 "),n(o,{to:"/project-intro/"},{default:r(()=>[a("《开发指南 —— 项目结构》")]),_:1}),a(" 文档。")])]),u,e("p",null,[a("④ 【如果是 DM 达梦数据库】建议先使用 MySQL 跑通，然后再阅读 "),n(o,{to:"/db-dameng/"},{default:r(()=>[a("《达梦数据库专属》")]),_:1}),a(" 文档。")]),h,e("ul",null,[e("li",null,[n(o,{to:"/bpm/"},{default:r(()=>[a("《工作流手册 —— 工作流》")]),_:1})]),e("li",null,[n(o,{to:"/mp/build/"},{default:r(()=>[a("《公众号手册 —— 功能开启》")]),_:1})]),e("li",null,[n(o,{to:"/pay/build/"},{default:r(()=>[a("《支付手册 —— 功能开启》")]),_:1})]),e("li",null,[n(o,{to:"/report/"},{default:r(()=>[a("《大屏手册 —— 报表设计器》")]),_:1})]),e("li",null,[n(o,{to:"/mall/build/"},{default:r(()=>[a("《商城手册 —— 功能开启》")]),_:1})])]),g,e("p",null,[a("胖友可以根据自己的兴趣，阅读相关源码。如果你想更快速的学习，可以看看 "),n(o,{to:"/video/"},{default:r(()=>[a("《视频教程 》")]),_:1}),a(" 教程哟。")]),f,m,_,b,E,y])}const S=t(c,[["render",k],["__file","quick-start.html.vue"]]),B=JSON.parse('{"path":"/project/rouyi-vue-pro/quick-start.html","title":"快速启动（后端项目）","lang":"en-US","frontmatter":{"title":"快速启动（后端项目）","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":6,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 👍 相关视频教程","slug":"👍-相关视频教程","link":"#👍-相关视频教程","children":[]},{"level":2,"title":"# 1. 克隆代码","slug":"_1-克隆代码","link":"#_1-克隆代码","children":[]},{"level":2,"title":"# 2. Apifox 接口工具","slug":"_2-apifox-接口工具","link":"#_2-apifox-接口工具","children":[]},{"level":2,"title":"# 3. 初始化 MySQL","slug":"_3-初始化-mysql","link":"#_3-初始化-mysql","children":[]},{"level":2,"title":"# 4. 初始化 Redis","slug":"_4-初始化-redis","link":"#_4-初始化-redis","children":[]},{"level":2,"title":"# 5. 启动后端项目","slug":"_5-启动后端项目","link":"#_5-启动后端项目","children":[{"level":3,"title":"# 5.1 编译项目","slug":"_5-1-编译项目","link":"#_5-1-编译项目","children":[]},{"level":3,"title":"# 5.2 启动项目","slug":"_5-2-启动项目","link":"#_5-2-启动项目","children":[]},{"level":3,"title":"# 5.3 启动其它模块","slug":"_5-3-启动其它模块","link":"#_5-3-启动其它模块","children":[]}]},{"level":2,"title":"# 6. 启动前端项目【简易】","slug":"_6-启动前端项目【简易】","link":"#_6-启动前端项目【简易】","children":[]},{"level":2,"title":"# 7. 启动前端项目【完整】","slug":"_7-启动前端项目【完整】","link":"#_7-启动前端项目【完整】","children":[]},{"level":2,"title":"# 666. 彩蛋","slug":"_666-彩蛋","link":"#_666-彩蛋","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":6.99,"words":2096},"filePathRelative":"project/rouyi-vue-pro/quick-start.md","localizedDate":"July 7, 2024"}');export{S as comp,B as data};
