import{_ as s,o as n,c as a,d as i}from"./app-DELCaB9c.js";const l={},t=i(`<h2 id="y-nghia" tabindex="-1"><a class="header-anchor" href="#y-nghia"><span>Ý nghĩa</span></a></h2><p><strong>State Pattern</strong> là một mẫu thiết kế hành vi, nó cho phép bạn thay đổi hành vi của một đối tượng khi trạng thái nội bộ của nó thay đổi. Nó giúp đảm bảo rằng đối tượng sẽ có hành vi chính xác tương ứng với trạng thái hiện tại của nó.</p><h2 id="ung-dung" tabindex="-1"><a class="header-anchor" href="#ung-dung"><span>Ứng dụng</span></a></h2><ul><li>Sử dụng State Pattern khi bạn muốn thay đổi hành vi của một đối tượng dựa trên trạng thái nội bộ của nó.</li><li>Sử dụng State Pattern khi có nhiều hành vi khác nhau liên quan đến một đối tượng và bạn muốn tránh việc sử dụng nhiều câu lệnh điều kiện trong mã của bạn.</li></ul><h2 id="cau-truc" tabindex="-1"><a class="header-anchor" href="#cau-truc"><span>Cấu trúc</span></a></h2><h3 id="giai-thich-cau-truc" tabindex="-1"><a class="header-anchor" href="#giai-thich-cau-truc"><span>Giải thích cấu trúc</span></a></h3><figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20231006213246.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><ol><li><strong>Context</strong> (Ngữ cảnh) lưu giữ một tham chiếu đến một đối tượng trạng thái cụ thể và chuyển giao tất cả công việc liên quan đến trạng thái đó cho nó. Context tương tác với đối tượng trạng thái thông qua giao diện trạng thái và cung cấp một phương thức thiết lập để chuyển đối tượng trạng thái mới.</li><li><strong>State</strong> (Trạng thái) giao diện khai báo các phương thức đặc thù cho trạng thái. Các phương thức này nên được hiểu bởi tất cả các đối tượng trạng thái cụ thể khác vì bạn không muốn có các phương thức mà một số trạng thái có mà không bao giờ được gọi.</li><li><strong>Concrete State</strong> (Trạng thái cụ thể) tự triển khai các phương thức đặc thù cho trạng thái. Để tránh việc có mã tương tự trong nhiều trạng thái, bạn có thể cung cấp một lớp trung gian trừu tượng chứa một số hành vi chung. <ul><li>Đối tượng trạng thái có thể lưu trữ một tham chiếu đến đối tượng ngữ cảnh. Trạng thái có thể sử dụng tham chiếu này để lấy thông tin cần thiết từ ngữ cảnh và kích hoạt chuyển đổi trạng thái.</li></ul></li><li>Ngữ cảnh và trạng thái cụ thể đều có thể thiết lập trạng thái tiếp theo của ngữ cảnh và hoàn thành việc chuyển đổi trạng thái thực tế bằng cách thay thế đối tượng trạng thái được kết nối với ngữ cảnh.</li></ol><h3 id="mau-ma-cau-truc" tabindex="-1"><a class="header-anchor" href="#mau-ma-cau-truc"><span>Mẫu mã cấu trúc</span></a></h3><p><strong>State</strong>: Định nghĩa một giao diện để đóng gói hành vi liên quan đến một trạng thái cụ thể của Context.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> State</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Handle</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Context</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>ConcreteState</strong>: Mỗi lớp con triển khai một hành vi liên quan đến một trạng thái cụ thể của Context.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ConcreteStateA</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> State</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Handle</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Context</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">SetState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteStateB</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ConcreteStateB</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> State</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Handle</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Context</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">SetState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteStateA</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>Context</strong>: Duy trì một thể hiện của lớp con ConcreteState, thể hiện này xác định trạng thái hiện tại.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> State</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">State</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">state</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> state;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> SetState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">State</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">state</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> state;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Trạng thái hiện tại: &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> State</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> GetState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> state;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Handle</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Client</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> StatePattern</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Context</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> c</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteStateA</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Output</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>Trạng thái hiện tại: ConcreteStateB</span></span>
<span class="line"><span>Trạng thái hiện tại: ConcreteStateA</span></span></code></pre></div><h2 id="pseudocode" tabindex="-1"><a class="header-anchor" href="#pseudocode"><span>Pseudocode</span></a></h2><p>Trong ví dụ này, mẫu <strong>State</strong> cho phép các thành phần trong trình phát đa phương tiện thực hiện các hành vi khác nhau dựa trên trạng thái phát hiện hiện tại.</p><figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20210520175904.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>Đối tượng chính của trình phát luôn được kết nối với một đối tượng trạng thái chịu trách nhiệm cho hầu hết công việc của trình phát. Một số hoạt động sẽ thay đổi đối tượng trạng thái hiện tại của trình phát, từ đó thay đổi phản ứng của trình phát đối với tương tác của người dùng.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Lớp AudioPlayer là ngữ cảnh. Nó cũng duy trì một tham chiếu đến một</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// đối tượng trạng thái, đại diện cho trạng thái hiện tại của trình phát âm thanh.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> AudioPlayer</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    field state: State</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    field UI, volume, playlist, currentSong</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    constructor AudioPlayer() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.state = new ReadyState(this)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Ngữ cảnh sẽ chuyển giao công việc xử lý đầu vào của người dùng cho đối tượng trạng thái.</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Vì mỗi trạng thái xử lý đầu vào theo cách khác nhau, kết quả tự nhiên sẽ phụ thuộc vào trạng thái hiện tại.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        UI = new UserInterface()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        UI.lockButton.onClick(this.clickLock)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        UI.playButton.onClick(this.clickPlay)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        UI.nextButton.onClick(this.clickNext)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        UI.prevButton.onClick(this.clickPrevious)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Các đối tượng khác phải có thể chuyển đổi trạng thái hiện tại của trình phát âm thanh.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method changeState(state: State) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.state = state</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Các phương thức UI sẽ chuyển giao công việc thực thi cho trạng thái hiện tại.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickLock() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        state.clickLock()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickPlay() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        state.clickPlay()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickNext() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        state.clickNext()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickPrevious() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        state.clickPrevious()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Trạng thái có thể gọi các dịch vụ của ngữ cảnh.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method startPlayback() is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // ...</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method stopPlayback() is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // ...</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method nextSong() is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // ...</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method previousSong() is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // ...</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method fastForward(time) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // ...</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method rewind(time) is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // ...</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Tất cả các lớp trạng thái cụ thể phải triển khai các phương thức được khai báo trong lớp trạng thái cơ bản và cung cấp một tham chiếu ngược đến đối tượng ngữ cảnh liên quan đến trạng thái.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> State</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    protected</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> field player: AudioPlayer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Ngữ cảnh sẽ chuyển đối chính nó cho hàm tạo trạng thái. Điều này giúp trạng thái lấy một số dữ liệu hữu ích từ ngữ cảnh khi cần thiết.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    constructor State(player) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.player = player</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    abstract</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> method clickLock()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    abstract</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> method clickPlay()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    abstract</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> method clickNext()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    abstract</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> method clickPrevious()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Các lớp trạng thái cụ thể sẽ triển khai nhiều hành vi liên quan đến trạng thái hiện tại.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> LockedState</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> State</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Khi bạn mở khóa trình phát đã bị khóa, nó có thể ở một trong hai trạng thái.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickLock() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        if (player.playing)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            player.changeState(new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">PlayingState</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(player))</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        else</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            player.changeState(new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ReadyState</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(player))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickPlay() is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Đã khóa, không làm gì.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickNext() is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Đã khóa, không làm gì.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickPrevious() is</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        // Đã khóa, không làm gì.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Các lớp trạng thái cụ thể cũng có thể kích hoạt chuyển đổi trạng thái trong ngữ cảnh.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">class </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ReadyState</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> extends </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">State</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickLock() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        player.changeState(new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">LockedState</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(player))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickPlay() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        player.startPlayback()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        player.changeState(new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">PlayingState</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(player))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickNext() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        player.nextSong()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickPrevious() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        player.previousSong()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">class </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">PlayingState</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> extends </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">State</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickLock() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        player.changeState(new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">LockedState</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(player))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickPlay() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        player.stopPlayback()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        player.changeState(new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ReadyState</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(player))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickNext() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        if (event.doubleclick)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            player.nextSong()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        else</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            player.fastForward(5)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method clickPrevious() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        if (event.doubleclick)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            player.previous()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        else</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            player.rewind(5)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vi-du" tabindex="-1"><a class="header-anchor" href="#vi-du"><span>Ví dụ</span></a></h2><p><strong>Ví dụ sử dụng:</strong> Trong ngôn ngữ Java, <strong>State Pattern</strong> thường được sử dụng để chuyển đổi một máy trạng thái lớn dựa trên câu lệnh <code>switch</code> thành các đối tượng.</p><p>Dưới đây là một số ví dụ về State Pattern trong thư viện Java core:</p><ul><li><a href="http://docs.oracle.com/javaee/7/api/javax/faces/lifecycle/Lifecycle.html#execute-javax.faces.context.FacesContext-" target="_blank" rel="noopener noreferrer"><code>javax.faces.lifecycle.LifeCycle#execute()</code></a> (được điều khiển bởi <a href="http://docs.oracle.com/javaee/7/api/javax/faces/webapp/FacesServlet.html" target="_blank" rel="noopener noreferrer">Faces­Servlet</a>: hành vi phụ thuộc vào giai đoạn (trạng thái) của vòng đời JSF hiện tại)</li></ul><p><strong>Cách nhận biết:</strong> State Pattern có thể được nhận biết bằng cách có các phương thức được điều khiển bởi bên ngoài và có thể thay đổi hành vi dựa trên trạng thái của đối tượng.</p><h2 id="moi-quan-he-voi-cac-mau-khac" tabindex="-1"><a class="header-anchor" href="#moi-quan-he-voi-cac-mau-khac"><span>Mối quan hệ với các mẫu khác</span></a></h2><ul><li>[[Bridge Pattern]], [[State Pattern]] và [[Strategy Pattern]] (bao gồm một phần [[Adapter Pattern]]) có giao diện rất tương tự. Trên thực tế, chúng đều dựa trên [[Composite Pattern]] - tức là giao việc cho các đối tượng khác, nhưng mỗi mẫu giải quyết một vấn đề khác nhau. Mẫu không chỉ là công thức để tổ chức mã theo một cách cụ thể, bạn cũng có thể sử dụng chúng để thảo luận với các nhà phát triển khác về vấn đề mà mẫu giải quyết.</li><li>[[State Pattern]] có thể được coi là mở rộng của [[Strategy Pattern]]. Cả hai đều dựa trên cơ chế kết hợp: chúng đều thay đổi hành vi của mình dựa trên ngữ cảnh khác nhau bằng cách giao việc cho các đối tượng &quot;người trợ giúp&quot;. <em>Strategy</em> làm cho các đối tượng này hoàn toàn độc lập với nhau, chúng không biết sự tồn tại của các đối tượng khác. Nhưng mẫu <em>State</em> không giới hạn sự phụ thuộc giữa các trạng thái cụ thể và cho phép chúng tự thay đổi trạng thái của mình trong các ngữ cảnh khác nhau.</li></ul>`,31),e=[t];function c(r,p){return n(),a("div",null,e)}const h=s(l,[["render",c],["__file","state.html.vue"]]),d=JSON.parse('{"path":"/design/design-pattern/patterns/behavioral/state.html","title":"State Pattern","lang":"en-US","frontmatter":{"title":"State Pattern","tags":["design-pattern"],"categories":["design-pattern"],"date created":"2023-10-06T00:00:00.000Z","date modified":"2023-10-06T00:00:00.000Z","description":"Ý nghĩa State Pattern là một mẫu thiết kế hành vi, nó cho phép bạn thay đổi hành vi của một đối tượng khi trạng thái nội bộ của nó thay đổi. Nó giúp đảm bảo rằng đối tượng sẽ có...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/design/design-pattern/patterns/behavioral/state.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"State Pattern"}],["meta",{"property":"og:description","content":"Ý nghĩa State Pattern là một mẫu thiết kế hành vi, nó cho phép bạn thay đổi hành vi của một đối tượng khi trạng thái nội bộ của nó thay đổi. Nó giúp đảm bảo rằng đối tượng sẽ có..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20231006213246.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"design-pattern"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"State Pattern\\",\\"image\\":[\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20231006213246.png\\",\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20210520175904.png\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Ý nghĩa","slug":"y-nghia","link":"#y-nghia","children":[]},{"level":2,"title":"Ứng dụng","slug":"ung-dung","link":"#ung-dung","children":[]},{"level":2,"title":"Cấu trúc","slug":"cau-truc","link":"#cau-truc","children":[{"level":3,"title":"Giải thích cấu trúc","slug":"giai-thich-cau-truc","link":"#giai-thich-cau-truc","children":[]},{"level":3,"title":"Mẫu mã cấu trúc","slug":"mau-ma-cau-truc","link":"#mau-ma-cau-truc","children":[]}]},{"level":2,"title":"Pseudocode","slug":"pseudocode","link":"#pseudocode","children":[]},{"level":2,"title":"Ví dụ","slug":"vi-du","link":"#vi-du","children":[]},{"level":2,"title":"Mối quan hệ với các mẫu khác","slug":"moi-quan-he-voi-cac-mau-khac","link":"#moi-quan-he-voi-cac-mau-khac","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":6.33,"words":1898},"filePathRelative":"design/design-pattern/patterns/behavioral/state.md","localizedDate":"June 28, 2024","excerpt":"<h2>Ý nghĩa</h2>\\n<p><strong>State Pattern</strong> là một mẫu thiết kế hành vi, nó cho phép bạn thay đổi hành vi của một đối tượng khi trạng thái nội bộ của nó thay đổi. Nó giúp đảm bảo rằng đối tượng sẽ có hành vi chính xác tương ứng với trạng thái hiện tại của nó.</p>\\n<h2>Ứng dụng</h2>\\n<ul>\\n<li>Sử dụng State Pattern khi bạn muốn thay đổi hành vi của một đối tượng dựa trên trạng thái nội bộ của nó.</li>\\n<li>Sử dụng State Pattern khi có nhiều hành vi khác nhau liên quan đến một đối tượng và bạn muốn tránh việc sử dụng nhiều câu lệnh điều kiện trong mã của bạn.</li>\\n</ul>","autoDesc":true}');export{h as comp,d as data};
