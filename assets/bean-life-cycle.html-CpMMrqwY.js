import{_ as n,o as i,c as a,d as t}from"./app-DELCaB9c.js";const e={},o=t('<h1 id="vong-đoi-cua-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#vong-đoi-cua-bean-trong-spring"><span>Vòng đời của Bean trong Spring</span></a></h1><figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230725202926.png" alt="bean-lifecycle" tabindex="0" loading="lazy"><figcaption>bean-lifecycle</figcaption></figure><h2 id="giai-đoan-cau-hinh-thong-tin-co-ban-cua-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-cau-hinh-thong-tin-co-ban-cua-bean-trong-spring"><span>Giai đoạn cấu hình thông tin cơ bản của Bean trong Spring</span></a></h2><p>Cấu hình BeanDefinition</p><ul><li>Hướng tới tài nguyên <ul><li>Cấu hình XML</li><li>Cấu hình từ tài nguyên Properties</li></ul></li><li>Hướng tới chú thích</li><li>Hướng tới API</li></ul><h2 id="giai-đoan-phan-tich-thong-tin-co-ban-cua-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-phan-tich-thong-tin-co-ban-cua-bean-trong-spring"><span>Giai đoạn phân tích thông tin cơ bản của Bean trong Spring</span></a></h2><ul><li>Phân tích BeanDefinition từ tài nguyên <ul><li>BeanDefinitionReader</li><li>Trình phân tích XML - BeanDefinitionParser</li></ul></li><li>Phân tích BeanDefinition từ chú thích <ul><li>AnnotatedBeanDefinitionReader</li></ul></li></ul><h2 id="giai-đoan-đang-ky-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-đang-ky-bean-trong-spring"><span>Giai đoạn đăng ký Bean trong Spring</span></a></h2><p>Giao diện đăng ký BeanDefinition: BeanDefinitionRegistry</p><h2 id="giai-đoan-hop-nhat-beandefinition-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-hop-nhat-beandefinition-trong-spring"><span>Giai đoạn hợp nhất BeanDefinition trong Spring</span></a></h2><p>Hợp nhất BeanDefinition</p><p>Hợp nhất BeanDefinition cha con</p><ul><li>Tìm kiếm trong BeanFactory hiện tại</li><li>Tìm kiếm theo cấu trúc BeanFactory</li></ul><h2 id="giai-đoan-tai-lop-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-tai-lop-bean-trong-spring"><span>Giai đoạn tải lớp Bean trong Spring</span></a></h2><ul><li>Tải lớp ClassLoader</li><li>Kiểm soát an ninh Java</li><li>ConfigurableBeanFactory tạm thời ClassLoader</li></ul><h2 id="giai-đoan-truoc-khi-tao-the-hien-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-truoc-khi-tao-the-hien-bean-trong-spring"><span>Giai đoạn trước khi tạo thể hiện Bean trong Spring</span></a></h2><p>Cách tạo thể hiện</p><ul><li>Cách tạo thể hiện truyền thống: Chiến lược tạo thể hiện (InstantiationStrategy)</li><li>Tiêm phụ thuộc qua hàm tạo</li></ul><h2 id="giai-đoan-tao-the-hien-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-tao-the-hien-bean-trong-spring"><span>Giai đoạn tạo thể hiện Bean trong Spring</span></a></h2><p>Giai đoạn không phổ biến - Giai đoạn trước khi tạo thể hiện Bean</p><p>InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation</p><h2 id="giai-đoan-sau-khi-tao-the-hien-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-sau-khi-tao-the-hien-bean-trong-spring"><span>Giai đoạn sau khi tạo thể hiện Bean trong Spring</span></a></h2><p>Kiểm tra gán giá trị thuộc tính của Bean</p><p>InstantiationAwareBeanPostProcessor#postProcessAfterInstantiation</p><h2 id="giai-đoan-truoc-khi-gan-gia-tri-thuoc-tinh-cua-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-truoc-khi-gan-gia-tri-thuoc-tinh-cua-bean-trong-spring"><span>Giai đoạn trước khi gán giá trị thuộc tính của Bean trong Spring</span></a></h2><ul><li>Thông tin giá trị thuộc tính của Bean <ul><li>PropertyValues</li></ul></li><li>Gọi lại trước khi gán giá trị thuộc tính của Bean <ul><li>Spring 1.2 - 5.0: InstantiationAwareBeanPostProcessor#postProcessPropertyValues</li><li>Spring 5.1: InstantiationAwareBeanPostProcessor#postProcessProperties</li></ul></li></ul><h2 id="giai-đoan-goi-lai-giao-dien-aware-cua-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-goi-lai-giao-dien-aware-cua-bean-trong-spring"><span>Giai đoạn gọi lại giao diện Aware của Bean trong Spring</span></a></h2><p>Giao diện Aware của Spring:</p><ul><li>BeanNameAware</li><li>BeanClassLoaderAware</li><li>BeanFactoryAware</li><li>EnvironmentAware</li><li>EmbeddedValueResolverAware</li><li>ResourceLoaderAware</li><li>ApplicationEventPublisherAware</li><li>MessageSourceAware</li><li>ApplicationContextAware</li></ul><h2 id="giai-đoan-truoc-khi-khoi-tao-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-truoc-khi-khoi-tao-bean-trong-spring"><span>Giai đoạn trước khi khởi tạo Bean trong Spring</span></a></h2><p>Đã hoàn thành:</p><ul><li>Tạo thể hiện Bean</li><li>Gán giá trị thuộc tính của Bean</li><li>Gọi lại giao diện Aware của Bean</li></ul><p>Gọi lại phương thức:</p><ul><li>BeanPostProcessor#postProcessBeforeInitialization</li></ul><h2 id="giai-đoan-khoi-tao-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-khoi-tao-bean-trong-spring"><span>Giai đoạn khởi tạo Bean trong Spring</span></a></h2><p>Khởi tạo Bean (Initialization)</p><ul><li>Phương thức được chú thích @PostConstruct</li><li>Phương thức afterPropertiesSet() của lớp thực hiện InitializingBean</li><li>Phương thức khởi tạo tùy chỉnh</li></ul><h2 id="giai-đoan-sau-khi-khoi-tao-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-sau-khi-khoi-tao-bean-trong-spring"><span>Giai đoạn sau khi khởi tạo Bean trong Spring</span></a></h2><p>Gọi lại phương thức: BeanPostProcessor#postProcessAfterInitialization</p><h2 id="giai-đoan-hoan-thanh-khoi-tao-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-hoan-thanh-khoi-tao-bean-trong-spring"><span>Giai đoạn hoàn thành khởi tạo Bean trong Spring</span></a></h2><p>Gọi lại phương thức: Spring 4.1+: SmartInitializingSingleton#afterSingletonsInstantiated</p><h2 id="giai-đoan-truoc-khi-huy-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-truoc-khi-huy-bean-trong-spring"><span>Giai đoạn trước khi hủy Bean trong Spring</span></a></h2><p>Gọi lại phương thức: DestructionAwareBeanPostProcessor#postProcessBeforeDestruction</p><h2 id="giai-đoan-huy-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#giai-đoan-huy-bean-trong-spring"><span>Giai đoạn hủy Bean trong Spring</span></a></h2><p>Hủy Bean (Destroy)</p><ul><li>Phương thức được chú thích @PreDestroy</li><li>Phương thức destroy() của lớp thực hiện DisposableBean</li><li>Phương thức hủy tùy chỉnh</li></ul><h2 id="thu-gom-rac-cua-bean-trong-spring" tabindex="-1"><a class="header-anchor" href="#thu-gom-rac-cua-bean-trong-spring"><span>Thu gom rác của Bean trong Spring</span></a></h2><p>Thu gom rác Bean (GC)</p><ul><li>Đóng Spring Container (ApplicationContext)</li><li>Thực hiện GC</li><li>Gọi lại phương thức finalize() được ghi đè bởi Bean của Spring</li></ul><h2 id="cau-hoi" tabindex="-1"><a class="header-anchor" href="#cau-hoi"><span>Câu hỏi</span></a></h2><p><strong>Có những trường hợp sử dụng nào cho BeanPostProcessor</strong>?</p><p>BeanPostProcessor cung cấp các gọi lại vòng đời trước và sau khi khởi tạo Bean trong Spring, tương ứng với các phương thức postProcessBeforeInitialization và postProcessAfterInitialization, cho phép mở rộng hoặc thay thế Bean mà bạn quan tâm.</p><p>Thêm điểm: Các gọi lại Aware liên quan đến ApplicationContext cũng được thực hiện bằng cách sử dụng BeanPostProcessor.</p><p><strong>Sự khác biệt giữa BeanFactoryPostProcessor và BeanPostProcessor là gì</strong>?</p><p>BeanFactoryPostProcessor là một bộ xử lý sau BeanFactory (thực tế là ConfigurableListableBeanFactory), được sử dụng để mở rộng BeanFactory hoặc thực hiện việc tìm kiếm phụ thuộc và tiêm phụ thuộc thông qua BeanFactory.</p><p>BeanFactoryPostProcessor phải được thực hiện bởi ApplicationContext của Spring và không thể tương tác trực tiếp với BeanFactory.</p><p>Trong khi đó, BeanPostProcessor liên quan trực tiếp đến BeanFactory và có mối quan hệ N đến 1 với nó.</p><p><strong>Làm thế nào BeanFactory xử lý vòng đời của Bean</strong>?</p><p>Triển khai mặc định của BeanFactory là <code>DefaultListableBeanFactory</code>, trong đó vòng đời của Bean được xử lý như sau:</p><ul><li>Giai đoạn đăng ký BeanDefinition - registerBeanDefinition</li><li>Giai đoạn hợp nhất BeanDefinition - getMergedBeanDefinition</li><li>Giai đoạn trước khi tạo thể hiện Bean - resolveBeforeInstantiation</li><li>Giai đoạn tạo thể hiện Bean - createBeanInstance</li><li>Giai đoạn sau khi tạo thể hiện Bean - populateBean</li><li>Giai đoạn trước khi gán giá trị thuộc tính của Bean - populateBean</li><li>Giai đoạn gán giá trị thuộc tính của Bean - populateBean</li><li>Giai đoạn gọi lại giao diện Aware của Bean - initializeBean</li><li>Giai đoạn trước khi khởi tạo Bean - initializeBean</li><li>Giai đoạn khởi tạo Bean - initializeBean</li><li>Giai đoạn sau khi khởi tạo Bean - initializeBean</li><li>Giai đoạn hoàn thành khởi tạo Bean - preInstantiateSingletons</li><li>Giai đoạn trước khi hủy Bean - destroyBean</li><li>Giai đoạn hủy Bean - destroyBean</li></ul>',60),r=[o];function h(g,c){return i(),a("div",null,r)}const s=n(e,[["render",h],["__file","bean-life-cycle.html.vue"]]),p=JSON.parse('{"path":"/framework/spring/core/bean-life-cycle.html","title":"Spring Bean LifeCycle","lang":"en-US","frontmatter":{"title":"Spring Bean LifeCycle","tags":["spring","java","backend","bean"],"categories":["spring","java","backend"],"date created":"2023-07-26T00:00:00.000Z","date modified":"2023-07-26T00:00:00.000Z","order":7,"description":"Vòng đời của Bean trong Spring bean-lifecyclebean-lifecycle Giai đoạn cấu hình thông tin cơ bản của Bean trong Spring Cấu hình BeanDefinition Hướng tới tài nguyên Cấu hình XML C...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/framework/spring/core/bean-life-cycle.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Spring Bean LifeCycle"}],["meta",{"property":"og:description","content":"Vòng đời của Bean trong Spring bean-lifecyclebean-lifecycle Giai đoạn cấu hình thông tin cơ bản của Bean trong Spring Cấu hình BeanDefinition Hướng tới tài nguyên Cấu hình XML C..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230725202926.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"backend"}],["meta",{"property":"article:tag","content":"bean"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Bean LifeCycle\\",\\"image\\":[\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230725202926.png\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Giai đoạn cấu hình thông tin cơ bản của Bean trong Spring","slug":"giai-đoan-cau-hinh-thong-tin-co-ban-cua-bean-trong-spring","link":"#giai-đoan-cau-hinh-thong-tin-co-ban-cua-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn phân tích thông tin cơ bản của Bean trong Spring","slug":"giai-đoan-phan-tich-thong-tin-co-ban-cua-bean-trong-spring","link":"#giai-đoan-phan-tich-thong-tin-co-ban-cua-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn đăng ký Bean trong Spring","slug":"giai-đoan-đang-ky-bean-trong-spring","link":"#giai-đoan-đang-ky-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn hợp nhất BeanDefinition trong Spring","slug":"giai-đoan-hop-nhat-beandefinition-trong-spring","link":"#giai-đoan-hop-nhat-beandefinition-trong-spring","children":[]},{"level":2,"title":"Giai đoạn tải lớp Bean trong Spring","slug":"giai-đoan-tai-lop-bean-trong-spring","link":"#giai-đoan-tai-lop-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn trước khi tạo thể hiện Bean trong Spring","slug":"giai-đoan-truoc-khi-tao-the-hien-bean-trong-spring","link":"#giai-đoan-truoc-khi-tao-the-hien-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn tạo thể hiện Bean trong Spring","slug":"giai-đoan-tao-the-hien-bean-trong-spring","link":"#giai-đoan-tao-the-hien-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn sau khi tạo thể hiện Bean trong Spring","slug":"giai-đoan-sau-khi-tao-the-hien-bean-trong-spring","link":"#giai-đoan-sau-khi-tao-the-hien-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn trước khi gán giá trị thuộc tính của Bean trong Spring","slug":"giai-đoan-truoc-khi-gan-gia-tri-thuoc-tinh-cua-bean-trong-spring","link":"#giai-đoan-truoc-khi-gan-gia-tri-thuoc-tinh-cua-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn gọi lại giao diện Aware của Bean trong Spring","slug":"giai-đoan-goi-lai-giao-dien-aware-cua-bean-trong-spring","link":"#giai-đoan-goi-lai-giao-dien-aware-cua-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn trước khi khởi tạo Bean trong Spring","slug":"giai-đoan-truoc-khi-khoi-tao-bean-trong-spring","link":"#giai-đoan-truoc-khi-khoi-tao-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn khởi tạo Bean trong Spring","slug":"giai-đoan-khoi-tao-bean-trong-spring","link":"#giai-đoan-khoi-tao-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn sau khi khởi tạo Bean trong Spring","slug":"giai-đoan-sau-khi-khoi-tao-bean-trong-spring","link":"#giai-đoan-sau-khi-khoi-tao-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn hoàn thành khởi tạo Bean trong Spring","slug":"giai-đoan-hoan-thanh-khoi-tao-bean-trong-spring","link":"#giai-đoan-hoan-thanh-khoi-tao-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn trước khi hủy Bean trong Spring","slug":"giai-đoan-truoc-khi-huy-bean-trong-spring","link":"#giai-đoan-truoc-khi-huy-bean-trong-spring","children":[]},{"level":2,"title":"Giai đoạn hủy Bean trong Spring","slug":"giai-đoan-huy-bean-trong-spring","link":"#giai-đoan-huy-bean-trong-spring","children":[]},{"level":2,"title":"Thu gom rác của Bean trong Spring","slug":"thu-gom-rac-cua-bean-trong-spring","link":"#thu-gom-rac-cua-bean-trong-spring","children":[]},{"level":2,"title":"Câu hỏi","slug":"cau-hoi","link":"#cau-hoi","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":3.44,"words":1032},"filePathRelative":"framework/spring/core/bean-life-cycle.md","localizedDate":"June 28, 2024","excerpt":"\\n<figure><img src=\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230725202926.png\\" alt=\\"bean-lifecycle\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>bean-lifecycle</figcaption></figure>\\n<h2>Giai đoạn cấu hình thông tin cơ bản của Bean trong Spring</h2>\\n<p>Cấu hình BeanDefinition</p>\\n","autoDesc":true}');export{s as comp,p as data};
