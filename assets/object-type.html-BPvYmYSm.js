import{_ as s,o as a,c as n,d as i}from"./app-eD31-AQ-.js";const l={},o=i(`<h1 id="kieu-đoi-tuong-object" tabindex="-1"><a class="header-anchor" href="#kieu-đoi-tuong-object"><span>Kiểu đối tượng - Object</span></a></h1><p>Các kiểu dữ liệu cơ bản trong JavaScript bao gồm <code>Undefined</code>, <code>Null</code>, <code>Boolean</code>, <code>String</code>, <code>Number</code> và <code>Object</code>, cùng với kiểu <code>Symbol</code> được thêm vào từ ES6.</p><p>Đối tượng khác biệt với các giá trị kiểu cơ bản bởi nó là một giá trị phức tạp: nó có thể kết hợp nhiều giá trị nguyên thủy hoặc đối tượng khác vào một chỗ, và có thể truy cập vào các giá trị này bằng tên khóa.</p><p>Một đối tượng cũng có thể được coi là một <strong>tập hợp không tuần tự</strong> các thuộc tính, mỗi thuộc tính là một cặp khóa-giá trị. Tên thuộc tính có thể là kiểu <code>String</code> hoặc kiểu <code>Symbol</code>, do đó chúng ta có thể coi đối tượng là một ánh xạ từ chuỗi đến giá trị.</p><h2 id="tao-đoi-tuong" tabindex="-1"><a class="header-anchor" href="#tao-đoi-tuong"><span>Tạo đối tượng</span></a></h2><p><strong>Cách tạo đối tượng:</strong></p><ul><li>Literal</li><li>Hàm tạo</li><li><code>Object.create()</code></li></ul><h3 id="literal" tabindex="-1"><a class="header-anchor" href="#literal"><span>Literal</span></a></h3><p>JavaScript cung cấp một phương thức nhanh gọi là &quot;literal&quot; để tạo ra hầu hết các giá trị đối tượng nguyên thuỷ. Việc sử dụng literal chỉ là ẩn đi quy trình cơ bản giống như việc sử dụng toán tử <code>new</code>, do đó nó cũng được gọi là đường dẫn cú pháp.</p><p>Literal là một bảng ánh xạ gồm nhiều cặp khóa-giá trị, các cặp khóa-giá trị được phân tách bằng dấu hai chấm và toàn bộ bảng ánh xạ được bao quanh bởi dấu ngoặc nhọn.</p><p>Các thuộc tính khác nhau được phân tách bằng dấu phẩy, tên thuộc tính có thể là bất kỳ giá trị kiểu <code>String</code> hoặc kiểu <code>Symbol</code> nào, giá trị thuộc tính có thể là bất kỳ biểu thức kiểu nào, giá trị của biểu thức là giá trị thuộc tính.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> faker</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  name </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;faker&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  age </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">27</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>Đối tượng chuyển đổi thành chuỗi ký tự</strong>: Sử dụng phương thức đối tượng từ chỗ khai báo đối tượng, tên thuộc tính sẽ tự động chuyển đổi thành chuỗi.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> faker</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  &#39;name&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;faker&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  &#39;age&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : </span><span style="color:#D19A66;--shiki-dark:#D19A66;">27</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  &#39;5&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="ham-tao" tabindex="-1"><a class="header-anchor" href="#ham-tao"><span>Hàm tạo</span></a></h3><p>Sử dụng toán tử <code>new</code> và hàm tạo <code>Object</code> để khởi tạo một đối tượng mới. [[JS This#Ràng buộc hàm tạo|Ràng buộc hàm tạo]]</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> faker</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">uzi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Faker&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">uzi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">age</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 27</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><h4 id="tham-so-la-mot-đoi-tuong" tabindex="-1"><a class="header-anchor" href="#tham-so-la-mot-đoi-tuong"><span>Tham số là một đối tượng</span></a></h4><p>Nếu tham số là một đối tượng, thì đối tượng đó sẽ được trả về trực tiếp.</p><p>Tham số là một đối tượng:</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bar</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> ===</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// true</span></span></code></pre></div><p>Tham số là một hàm (đối tượng):</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(){}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bar</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> ===</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// true</span></span></code></pre></div><h4 id="tham-so-la-mot-kieu-nguyen-thuy" tabindex="-1"><a class="header-anchor" href="#tham-so-la-mot-kieu-nguyen-thuy"><span>Tham số là một kiểu nguyên thủy</span></a></h4><p>Nếu tham số là một giá trị nguyên thủy, thì một đối tượng bao bọc tương ứng sẽ được trả về.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;foo&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// String {0: &quot;f&quot;, 1: &quot;o&quot;, 2: &quot;o&quot;, length: 3, [[PrimitiveValue]]: &quot;foo&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Number {[[PrimitiveValue]]: 1}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Boolean {[[PrimitiveValue]]: true}</span></span></code></pre></div><h3 id="object-create" tabindex="-1"><a class="header-anchor" href="#object-create"><span><code>Object.create()</code></span></a></h3><p>Phương thức <code>Object.create()</code> được sử dụng để tạo một đối tượng mới với đối tượng đã cho làm đối tượng nguyên mẫu.</p><p>📖 <strong>Cú pháp</strong></p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">proto</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><br><table><thead><tr><th style="text-align:left;">Tham số</th><th style="text-align:left;">Mô tả</th><th style="text-align:left;">Kiểu dữ liệu</th></tr></thead><tbody><tr><td style="text-align:left;">proto</td><td style="text-align:left;">Đối tượng nguyên mẫu mà đối tượng mới sẽ trỏ đến</td><td style="text-align:left;">object</td></tr><tr><td style="text-align:left;">properties</td><td style="text-align:left;">Tham số tùy chọn. Các thuộc tính có thể liệt kê được thêm vào đối tượng mới (các thuộc tính được định nghĩa trực tiếp trên đối tượng, không phải trên chuỗi nguyên mẫu)</td><td style="text-align:left;">object</td></tr></tbody></table><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> object</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">proto</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// object kế thừa các thuộc tính x và y</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">x</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// 1</span></span></code></pre></div><p>Có thể sử dụng tham số <code>null</code> để tạo một đối tượng mới không có nguyên mẫu, nhưng đối tượng được tạo ra theo cách này sẽ không kế thừa bất kỳ thứ gì, thậm chí không bao gồm các phương thức cơ bản như <code>toString</code> và <code>valueOf</code>.</p><p>Kế thừa đối tượng:</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {}</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Number</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// NaN</span></span></code></pre></div><p>Không kế thừa bất kỳ thuộc tính và phương thức nào:</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> bar</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// bar không kế thừa bất kỳ thuộc tính và phương thức nào</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Number</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Uncaught TypeError: Cannot convert object to primitive value</span></span></code></pre></div><p>Nếu muốn tạo một đối tượng rỗng thông thường (như đối tượng được tạo bằng <code>{}</code> hoặc <code>new Object()</code>), cần truyền vào <code>Object.prototype</code>.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Ví dụ 1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Number</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// NaN</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Ví dụ 2</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> bar</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// bar giống với {} và new Object()</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">( </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Number</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) );</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// NaN</span></span></code></pre></div><p>Tham số thứ hai của phương thức <code>Object.create()</code> là các mô tả thuộc tính.</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> obj</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75;">z</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> }, {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  x</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    writable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    enumerable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    configurable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  y</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    writable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    enumerable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    configurable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">obj</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">x</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">obj</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">y</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">obj</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">z</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// 1 2 3</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cau-thanh-cua-đoi-tuong" tabindex="-1"><a class="header-anchor" href="#cau-thanh-cua-đoi-tuong"><span>Cấu thành của đối tượng</span></a></h2><p>Đối tượng là một tập hợp không tuần tự các thuộc tính, bao gồm <strong>tên thuộc tính</strong> và <strong>giá trị thuộc tính</strong>.</p><h3 id="ten-thuoc-tinh" tabindex="-1"><a class="header-anchor" href="#ten-thuoc-tinh"><span>Tên thuộc tính</span></a></h3><p>Tất cả các tên thuộc tính của đối tượng đều là chuỗi, vì vậy có thể có hoặc không có dấu nháy đơn hoặc dấu nháy kép. Nếu không phải là chuỗi, tên thuộc tính sẽ tự động chuyển đổi thành chuỗi.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;bar&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">123</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;car&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="gia-tri-thuoc-tinh" tabindex="-1"><a class="header-anchor" href="#gia-tri-thuoc-tinh"><span>Giá trị thuộc tính</span></a></h3><p>Giá trị thuộc tính có thể là bất kỳ biểu thức nào, kết quả cuối cùng của biểu thức sẽ là giá trị thuộc tính.</p><p>Nếu giá trị thuộc tính là một hàm, thì thuộc tính đó thường được gọi là &quot;phương thức&quot;.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">x</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> *</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> x</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// 2</span></span></code></pre></div><p>Vì phương thức của đối tượng là một hàm, nên nó cũng có thuộc tính <code>name</code>. Thuộc tính <code>name</code> của phương thức trả về tên của hàm ngay sau từ khóa <code>function</code>. Nếu là hàm vô danh, môi trường ES5 sẽ trả về <code>undefined</code>, môi trường ES6 sẽ trả về tên phương thức.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  mth1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> f</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {},</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  mth2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> () {}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">mth1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;f&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">mth2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// ES5: undefined</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">mth2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// ES6: &quot;m2&quot;</span></span></code></pre></div><h2 id="tham-chieu-đen-đoi-tuong" tabindex="-1"><a class="header-anchor" href="#tham-chieu-đen-đoi-tuong"><span>Tham chiếu đến đối tượng</span></a></h2><p>Nếu các biến khác nhau trỏ đến cùng một đối tượng, chúng đều là tham chiếu của đối tượng đó, có nghĩa là chúng đều trỏ đến cùng một địa chỉ bộ nhớ. Thay đổi một biến sẽ ảnh hưởng đến tất cả các biến khác.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bar</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">a</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">bar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">bar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">b</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">b</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// 2</span></span></code></pre></div><p>Nếu hủy tham chiếu của một biến đến đối tượng gốc, điều này sẽ không ảnh hưởng đến biến khác.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bar</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">foo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// {}</span></span></code></pre></div>`,58),t=[o];function e(r,p){return a(),n("div",null,t)}const B=s(l,[["render",e],["__file","object-type.html.vue"]]),k=JSON.parse('{"path":"/programming/js/oop/understand/object-type.html","title":"Object Type","lang":"en-US","frontmatter":{"title":"Object Type","tags":["js","programming"],"categories":["js","programming"],"date created":"2023-08-05T00:00:00.000Z","date modified":"2023-08-06T00:00:00.000Z","order":1,"description":"Kiểu đối tượng - Object Các kiểu dữ liệu cơ bản trong JavaScript bao gồm Undefined, Null, Boolean, String, Number và Object, cùng với kiểu Symbol được thêm vào từ ES6. Đối tượng...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/programming/js/oop/understand/object-type.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Object Type"}],["meta",{"property":"og:description","content":"Kiểu đối tượng - Object Các kiểu dữ liệu cơ bản trong JavaScript bao gồm Undefined, Null, Boolean, String, Number và Object, cùng với kiểu Symbol được thêm vào từ ES6. Đối tượng..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"programming"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Object Type\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Tạo đối tượng","slug":"tao-đoi-tuong","link":"#tao-đoi-tuong","children":[{"level":3,"title":"Literal","slug":"literal","link":"#literal","children":[]},{"level":3,"title":"Hàm tạo","slug":"ham-tao","link":"#ham-tao","children":[]},{"level":3,"title":"Object.create()","slug":"object-create","link":"#object-create","children":[]}]},{"level":2,"title":"Cấu thành của đối tượng","slug":"cau-thanh-cua-đoi-tuong","link":"#cau-thanh-cua-đoi-tuong","children":[{"level":3,"title":"Tên thuộc tính","slug":"ten-thuoc-tinh","link":"#ten-thuoc-tinh","children":[]},{"level":3,"title":"Giá trị thuộc tính","slug":"gia-tri-thuoc-tinh","link":"#gia-tri-thuoc-tinh","children":[]}]},{"level":2,"title":"Tham chiếu đến đối tượng","slug":"tham-chieu-đen-đoi-tuong","link":"#tham-chieu-đen-đoi-tuong","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":5.06,"words":1519},"filePathRelative":"programming/js/oop/understand/object-type.md","localizedDate":"June 28, 2024","excerpt":"\\n<p>Các kiểu dữ liệu cơ bản trong JavaScript bao gồm <code>Undefined</code>, <code>Null</code>, <code>Boolean</code>, <code>String</code>, <code>Number</code> và <code>Object</code>, cùng với kiểu <code>Symbol</code> được thêm vào từ ES6.</p>\\n<p>Đối tượng khác biệt với các giá trị kiểu cơ bản bởi nó là một giá trị phức tạp: nó có thể kết hợp nhiều giá trị nguyên thủy hoặc đối tượng khác vào một chỗ, và có thể truy cập vào các giá trị này bằng tên khóa.</p>","autoDesc":true}');export{B as comp,k as data};
