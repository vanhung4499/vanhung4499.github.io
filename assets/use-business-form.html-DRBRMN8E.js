import{_ as r,g as o,o as d,c as t,e as a,h as n,f as i,w as l,a as p}from"./app-5QVbWi7Z.js";const c={};function u(m,e){const s=o("RouteLink");return d(),t("div",null,[e[12]||(e[12]=a("h1",{id:"审批接入-业务表单",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#审批接入-业务表单"},[a("span",null,"审批接入（业务表单）")])],-1)),e[13]||(e[13]=a("p",null,"相关视频：",-1)),a("ul",null,[e[5]||(e[5]=a("li",null,[a("a",{href:"https://t.zsxq.com/04rFUjIei",target:"_blank",rel:"noopener noreferrer"},"23、如何实现 OA 请假的发起？")],-1)),a("li",null,[e[1]||(e[1]=a("a",{href:"https://t.zsxq.com/04fMJiufQ",target:"_blank",rel:"noopener noreferrer"},"24、如何实现 OA 请假的审批？",-1)),e[2]||(e[2]=a("br",null,null,-1)),e[3]||(e[3]=n(" 本文接 ")),i(s,{to:"/bpm/use-bpm-form/"},{default:l(()=>e[0]||(e[0]=[n("《审批接入（流程表单）》")])),_:1}),e[4]||(e[4]=n("，讲解的是「业务接入（业务表单）」的流程：业务需建立独立的数据库表，并开发对应的表单、详情界面。"))])]),e[14]||(e[14]=p(`<p>整个过程，还是：</p><ol><li>定义流程：【管理员】新建流程、设计流程模型、并设置用户任务的审批人，最终发布流程</li><li>发起流程：【员工】选择流程，并发起流程实例</li><li>审批流程：【审批人】接收到流程任务，审批结果为通过或不通过</li></ol><figure><img src="https://doc.iocoder.cn/img/工作流手册/简单业务接入/示例流程.png" alt="示例流程" tabindex="0" loading="lazy"><figcaption>示例流程</figcaption></figure><h2 id="_1-业务接入-业务表单" tabindex="-1"><a class="header-anchor" href="#_1-业务接入-业务表单"><span><a href="#_1-%E4%B8%9A%E5%8A%A1%E6%8E%A5%E5%85%A5-%E4%B8%9A%E5%8A%A1%E8%A1%A8%E5%8D%95">#</a> 1. 业务接入（业务表单）</span></a></h2><p>根据业务需要，业务通过建立独立的数据库表（业务表）记录申请信息，而流程引擎只负责推动流程的前进或者结束。两者需要进行<strong>双向</strong>的关联：</p><ul><li>每一条业务表记录，通过它的流程实例的编号( <code>process_instance_id</code> )指向对应的流程实例</li><li>每一个流程实例，通过它的业务键( <code>BUSINESS_KEY_</code> ) 指向对应的业务表记录</li></ul><p>以项目中提供的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/BpmOALeaveServiceImpl.java" target="_blank" rel="noopener noreferrer">OALeave</a> 请假举例子，它的业务表 <code>bpm_oa_leave</code> 和流程引擎的流程实例的关系如下图：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/请假单数据库表.png" alt="请假单数据库表" tabindex="0" loading="lazy"><figcaption>请假单数据库表</figcaption></figure><p>也因为业务建立了独立的业务表，所以必须开发业务表对应的列表、表单、详情页面。不过，审核相关的功能是无需重新开发的，原因是业务表已经关联对应的流程实例，流程引擎审批流程实例即可。</p><p>下面，我们以项目中的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/BpmOALeaveServiceImpl.java" target="_blank" rel="noopener noreferrer">OALeave</a> 为例子，详细讲解下业务表单的开发与使用的过程。</p><h3 id="_1-0-第零步-业务开发" tabindex="-1"><a class="header-anchor" href="#_1-0-第零步-业务开发"><span><a href="#_1-0-%E7%AC%AC%E9%9B%B6%E6%AD%A5-%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91">#</a> 1.0 第零步：业务开发</span></a></h3><h4 id="_1-0-1-新建业务表" tabindex="-1"><a class="header-anchor" href="#_1-0-1-新建业务表"><span><a href="#_1-0-1-%E6%96%B0%E5%BB%BA%E4%B8%9A%E5%8A%A1%E8%A1%A8">#</a> 1.0.1 新建业务表</span></a></h4><p>新建业务表 <code>bpm_oa_leave</code>，建表语句如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>CREATE TABLE \`bpm_oa_leave\` (</span></span>
<span class="line"><span>  \`id\` bigint NOT NULL AUTO_INCREMENT COMMENT &#39;请假表单主键&#39;,</span></span>
<span class="line"><span>  \`user_id\` bigint NOT NULL COMMENT &#39;申请人的用户编号&#39;,</span></span>
<span class="line"><span>  \`type\` tinyint NOT NULL COMMENT &#39;请假类型&#39;,</span></span>
<span class="line"><span>  \`reason\` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;请假原因&#39;,</span></span>
<span class="line"><span>  \`start_time\` datetime NOT NULL COMMENT &#39;开始时间&#39;,</span></span>
<span class="line"><span>  \`end_time\` datetime NOT NULL COMMENT &#39;结束时间&#39;,</span></span>
<span class="line"><span>  \`day\` tinyint NOT NULL COMMENT &#39;请假天数&#39;,</span></span>
<span class="line"><span>  \`status\` tinyint NOT NULL COMMENT &#39;请假结果&#39;,</span></span>
<span class="line"><span>  \`process_instance_id\` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;流程实例的编号&#39;,</span></span>
<span class="line"><span>  \`creator\` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT &#39;&#39; COMMENT &#39;创建者&#39;,</span></span>
<span class="line"><span>  \`create_time\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,</span></span>
<span class="line"><span>  \`updater\` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT &#39;&#39; COMMENT &#39;更新者&#39;,</span></span>
<span class="line"><span>  \`update_time\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;更新时间&#39;,</span></span>
<span class="line"><span>  \`deleted\` bit(1) NOT NULL DEFAULT b&#39;0&#39; COMMENT &#39;是否删除&#39;,</span></span>
<span class="line"><span>  \`tenant_id\` bigint NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;租户编号&#39;,</span></span>
<span class="line"><span>  PRIMARY KEY (\`id\`) USING BTREE</span></span>
<span class="line"><span>) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;OA 请假申请表&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点是两个字段：</p><ul><li><code>process_instance_id</code> 字段，关联流程引擎的流程实例对应的 <code>ACT_HI_PROCINST</code> 表的 <code>PROC_INST_ID_</code> 字段</li><li><code>status</code> 字段，请假结果，需要通过 Listener 监听回调结果，稍后来看看</li></ul><h4 id="_1-0-2-【后端】实现业务逻辑" tabindex="-1"><a class="header-anchor" href="#_1-0-2-【后端】实现业务逻辑"><span><a href="#_1-0-2-%E3%80%90%E5%90%8E%E7%AB%AF%E3%80%91%E5%AE%9E%E7%8E%B0%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91">#</a> 1.0.2 【后端】实现业务逻辑</span></a></h4><p>实现业务表的【后端】业务逻辑，具体代码可以看看如下两个类：</p><ul><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/oa/BpmOALeaveController.java" target="_blank" rel="noopener noreferrer">BpmOALeaveController</a></li><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/BpmOALeaveServiceImpl.java" target="_blank" rel="noopener noreferrer">BpmOALeaveServiceImpl</a></li></ul><p>重点是看流程发起的逻辑，它定义了 <code>/bpm/oa/leave/create</code> 给业务的表单界面调用，UML 时序图如下：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/后续时序图.png" alt="后续时序图" tabindex="0" loading="lazy"><figcaption>后续时序图</figcaption></figure><p>具体的实现代码比较简单，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/创建流程的逻辑.png" alt="BpmOALeaveServiceImpl 创建流程的逻辑" tabindex="0" loading="lazy"><figcaption>BpmOALeaveServiceImpl 创建流程的逻辑</figcaption></figure><ul><li><code>PROCESS_KEY</code> 静态变量：是业务对应的流程模型的编号，稍后会进行创建编号为 oa_leave 的流程模型。</li><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/api/task/BpmProcessInstanceApi.java" target="_blank" rel="noopener noreferrer">BpmProcessInstanceApi</a> 定义了 <code>#createProcessInstance(...)</code> 方法，用于创建流程实例，业务无需关心底层是 Flowable 殷勤，还是 Activiti、Camunda 引擎。</li></ul><h4 id="_1-0-3-【前端】实现业务逻辑" tabindex="-1"><a class="header-anchor" href="#_1-0-3-【前端】实现业务逻辑"><span><a href="#_1-0-3-%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E5%AE%9E%E7%8E%B0%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91">#</a> 1.0.3 【前端】实现业务逻辑</span></a></h4><p>实现业务表的【前端】业务逻辑，具体代码可以看看如下三个页面：</p><ul><li>请假发起界面：<a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/views/bpm/oa/leave/create.vue" target="_blank" rel="noopener noreferrer"><code>leave/create.vue</code></a></li><li>请假详情界面：<a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/views/bpm/oa/leave/detail.vue" target="_blank" rel="noopener noreferrer"><code>leave/detail.vue</code></a></li><li>请假列表界面：<a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/views/bpm/oa/leave/index.vue" target="_blank" rel="noopener noreferrer"><code>leave/index.vue</code></a></li></ul><p>另外，在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/router/modules/remaining.ts#L305-L328" target="_blank" rel="noopener noreferrer"><code>router/modules/remaining.ts</code></a> 中定义 <code>create.vue</code> 和 <code>detail.vue</code> 的路由，配置如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>    path: &#39;/bpm&#39;,</span></span>
<span class="line"><span>    component: Layout,</span></span>
<span class="line"><span>    name: &#39;bpm&#39;,</span></span>
<span class="line"><span>    meta: {</span></span>
<span class="line"><span>      hidden: true</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    children: [</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>        path: &#39;oa/leave/create&#39;,</span></span>
<span class="line"><span>        component: () =&gt; import(&#39;@/views/bpm/oa/leave/create.vue&#39;),</span></span>
<span class="line"><span>        name: &#39;OALeaveCreate&#39;,</span></span>
<span class="line"><span>        meta: {</span></span>
<span class="line"><span>          noCache: true,</span></span>
<span class="line"><span>          hidden: true,</span></span>
<span class="line"><span>          canTo: true,</span></span>
<span class="line"><span>          title: &#39;发起 OA 请假&#39;,</span></span>
<span class="line"><span>          activeMenu: &#39;/bpm/oa/leave&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>        path: &#39;oa/leave/detail&#39;,</span></span>
<span class="line"><span>        component: () =&gt; import(&#39;@/views/bpm/oa/leave/detail.vue&#39;),</span></span>
<span class="line"><span>        name: &#39;OALeaveDetail&#39;,</span></span>
<span class="line"><span>        meta: {</span></span>
<span class="line"><span>          noCache: true,</span></span>
<span class="line"><span>          hidden: true,</span></span>
<span class="line"><span>          canTo: true,</span></span>
<span class="line"><span>          title: &#39;查看 OA 请假&#39;,</span></span>
<span class="line"><span>          activeMenu: &#39;/bpm/oa/leave&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为什么要做独立的 <code>create.vue</code> 和 <code>index.vue</code> 页面？</p><ul><li>创建流程时，需要跳转到 <code>create.vue</code> 页面，填写业务表的信息，才能提交流程。</li><li>审批流程时，需要跳转到 <code>detail.vue</code> 页面，查看业务表的信息。</li></ul><h4 id="_1-0-4-【实现】实现审批结果的监听" tabindex="-1"><a class="header-anchor" href="#_1-0-4-【实现】实现审批结果的监听"><span><a href="#_1-0-4-%E3%80%90%E5%AE%9E%E7%8E%B0%E3%80%91%E5%AE%9E%E7%8E%B0%E5%AE%A1%E6%89%B9%E7%BB%93%E6%9E%9C%E7%9A%84%E7%9B%91%E5%90%AC">#</a> 1.0.4 【实现】实现审批结果的监听</span></a></h4><p>审批结束时（例如说流程实例最终被审批通过、不通过、取消），后端需要监听审批结果，然后更新业务表的状态。</p><p>具体可见 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/listener/BpmOALeaveStatusListener.java" target="_blank" rel="noopener noreferrer">BpmOALeaveStatusListener</a> 监听器，它实现流程引擎定义的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/event/BpmProcessInstanceStatusEventListener.java" target="_blank" rel="noopener noreferrer">BpmProcessInstanceStatusEventListener</a> 抽象类，在流程实例结束时，回调通知它<strong>最终的</strong>结果是通过还是不通过。代码如下图：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/监听结果.png" alt="BpmOALeaveStatusListener 监听结果" tabindex="0" loading="lazy"><figcaption>BpmOALeaveStatusListener 监听结果</figcaption></figure><p>友情提示：BpmProcessInstanceStatusEventListener 是什么呢？</p><p>BpmProcessInstanceStatusEventListener 是我们框架自己封装的一个监听器，用于监听流程实例的最终结果。在流程实例结束时，会回调通知它。</p><p>如果你自己的业务接入工作流，并且需要监听审批结果，必须继承它，实现自己的监听器！！！</p><hr><p>至此，我们了解了 OALeave 使用业务表单所涉及到的开发，下面我们来定义对应的流程、发起该流程、并审批该流程。</p><p>友情提示：从这一步开始，和「1. 请假流程【流程表单】」的流程基本是一致的，所以重点还是上面。</p><h3 id="_2-1-第一步-定义流程" tabindex="-1"><a class="header-anchor" href="#_2-1-第一步-定义流程"><span><a href="#_2-1-%E7%AC%AC%E4%B8%80%E6%AD%A5-%E5%AE%9A%E4%B9%89%E6%B5%81%E7%A8%8B">#</a> 2.1 第一步：定义流程</span></a></h3><p>登录账号 admin、密码 admin123 的用户，扮演【管理员】的角色，进行流程的定义。</p><h4 id="_1-1-1-新建流程" tabindex="-1"><a class="header-anchor" href="#_1-1-1-新建流程"><span><a href="#_1-1-1-%E6%96%B0%E5%BB%BA%E6%B5%81%E7%A8%8B">#</a> 1.1.1 新建流程</span></a></h4><p>访问 [工作流程 -&gt; 流程管理 -&gt; 流程模型] 菜单，点击「新建流程」按钮，填写流程标识、流程名称。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/新建流程.png" alt="新建流程" tabindex="0" loading="lazy"><figcaption>新建流程</figcaption></figure><p>注意，流程标识需要填 <code>oa_leave</code>。因为在 BpmOALeaveServiceImpl 类中，发起流程的标识是 <code>oa_leave</code>。</p><h4 id="_1-1-2-修改流程" tabindex="-1"><a class="header-anchor" href="#_1-1-2-修改流程"><span><a href="#_1-1-2-%E4%BF%AE%E6%94%B9%E6%B5%81%E7%A8%8B">#</a> 1.1.2 修改流程</span></a></h4><p>点击「修改流程」按钮，配置表单类型为业务表单，填写表单提交路由为 <code>/bpm/oa/leave/create</code>（用于发起流程时，跳转的业务表单的路由）、表单查看路由为 <code>/bpm/oa/leave/detail</code>（用于在流程详情中，点击查看表单的路由）。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/修改流程.png" alt="修改流程" tabindex="0" loading="lazy"><figcaption>修改流程</figcaption></figure><p>友情提示：注意！！！<code>/bpm/oa/leave/create</code> 和 <code>/bpm/oa/leave/detail</code>，都是相对 <code>/views</code> 开始的 Vue 文件的路径！！！</p><h4 id="_1-1-3-设计流程" tabindex="-1"><a class="header-anchor" href="#_1-1-3-设计流程"><span><a href="#_1-1-3-%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B">#</a> 1.1.3 设计流程</span></a></h4><p>① 点击「设计流程」按钮，在线设计请假流程模型，包含两个用户任务：领导审批、HR 审批。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/设计流程.png" alt="设计流程" tabindex="0" loading="lazy"><figcaption>设计流程</figcaption></figure><p>可以点击 <a href="/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/oa_leave_bpmn.XML"><code>oa_leave_bpmn.XML</code></a> 进行下载，然后点击「打开文件」按钮，进行导入。</p><p>② 点击图中的“领导审批”，规则类型为“流程表达式”，流程表达式为 <code>\${bpmTaskAssignLeaderExpression.calculateUsers(execution, 1)}</code>。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/设置审批人-领导审批.png" alt="设置审批人 - 领导审批" tabindex="0" loading="lazy"><figcaption>设置审批人 - 领导审批</figcaption></figure><p>友情提示：该流程表达式的作用是，流程发起人的一级领导。</p>`,58)),a("p",null,[e[7]||(e[7]=n("为什么呢？这块我们在 ")),i(s,{to:"/bpm/expression/"},{default:l(()=>e[6]||(e[6]=[n("《流程表达式》")])),_:1}),e[8]||(e[8]=n(" 详细讲解。"))]),e[15]||(e[15]=p('<p>点击图中的“HR 审批”，规则类型为“岗位”，指定岗位为“人力资源”。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/设置审批人-HR审批.png" alt="设置审批人 - HR 审批" tabindex="0" loading="lazy"><figcaption>设置审批人 - HR 审批</figcaption></figure><p>之后，点击右上角的「保存模型」按钮，完成流程模型的设计。</p><p>③ 点击「发布流程」按钮，把定义的流程模型部署出去。部署成功后，就可以发起该流程了。</p><h3 id="_2-2-第二步-发起流程" tabindex="-1"><a class="header-anchor" href="#_2-2-第二步-发起流程"><span><a href="#_2-2-%E7%AC%AC%E4%BA%8C%E6%AD%A5-%E5%8F%91%E8%B5%B7%E6%B5%81%E7%A8%8B">#</a> 2.2 第二步：发起流程</span></a></h3><p>登录账号 admin、密码 admin123 的用户，扮演【员工】的角色，进行流程的发起。</p><p>① 发起业务表单请假流程，两种路径：</p><ol><li>访问 [工作流程 -&gt; 审批中心 -&gt; 发起流程] 菜单，选择“OA 请求”流程，会跳转到流程模型 <code>oa_leave</code> 配置的表单提交路由。<br><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/发起流程01.png" alt="路径一：我的流程 -&gt; 发起流程" loading="lazy"></li><li>访问 [工作流程 -&gt; OA 示例 -&gt; 请假查询] 菜单，点击「发起请假」按钮。<br><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/发起流程02.png" alt="路径二：请假查询 -&gt; 发起请假" loading="lazy"></li></ol><p>② 填写一个小于等于 3 天的请假，只会走【领导审批】任务；填写一个大于 3 天的请假，在走完【领导审批】任务后，会额外走【HR 审批】任务。</p>',9)),a("p",null,[e[10]||(e[10]=n("后续的流程，和 ")),i(s,{to:"/bpm/use-bpm-form/"},{default:l(()=>e[9]||(e[9]=[n("审批接入（流程表单）")])),_:1}),e[11]||(e[11]=n(" 是基本一致的，这里就不重复赘述，当然你还是要试着跑一跑，了解整个的过程。"))]),e[16]||(e[16]=p('<h3 id="_2-3-第三步-审批流程" tabindex="-1"><a class="header-anchor" href="#_2-3-第三步-审批流程"><span><a href="#_2-3-%E7%AC%AC%E4%B8%89%E6%AD%A5-%E5%AE%A1%E6%89%B9%E6%B5%81%E7%A8%8B">#</a> 2.3 第三步：审批流程</span></a></h3><p>略~自己跑</p><ul><li>登录账号 test、密码 test123 的用户，扮演【审批人】的角色，进行请假流程的【领导审批】任务</li><li>登录账号 hrmgr、密码 hr123 的用户，扮演【审批人】的角色，进行请假流程的【HR 审批】任务</li></ul><h2 id="_2-选择业务表单、流程表单" tabindex="-1"><a class="header-anchor" href="#_2-选择业务表单、流程表单"><span><a href="#_2-%E9%80%89%E6%8B%A9%E4%B8%9A%E5%8A%A1%E8%A1%A8%E5%8D%95%E3%80%81%E6%B5%81%E7%A8%8B%E8%A1%A8%E5%8D%95">#</a> 2. 选择业务表单、流程表单？</span></a></h2><p>流程表单，适合简单业务，无需开发的那种。大多数场景下，我们还是选择业务表单，例如说：</p><ul><li><a href="/crm/contract">《CRM 手册 —— 【合同】合同管理、合同提醒》</a> 的合同审批</li><li><a href="/crm/receivable">《CRM 手册 —— 【回款】回款管理、回款计划》</a> 的回款审批</li></ul><p>也就是说，审批只是业务的一个环节，而不是整个业务的所有。所以，我们选择业务表单，是为了更好的支持业务的复杂度。</p><h2 id="_3-业务表单是如何集成的" tabindex="-1"><a class="header-anchor" href="#_3-业务表单是如何集成的"><span><a href="#_3-%E4%B8%9A%E5%8A%A1%E8%A1%A8%E5%8D%95%E6%98%AF%E5%A6%82%E4%BD%95%E9%9B%86%E6%88%90%E7%9A%84">#</a> 3. 业务表单是如何集成的？</span></a></h2><p>① 流程发起时，会跳转流程模型配置的“表单提交路由”，代码如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/业务表单-发起.png" alt="业务表单 - 发起" tabindex="0" loading="lazy"><figcaption>业务表单 - 发起</figcaption></figure><p>② 流程详情时，需要展示业务表单详情时，通过 <a href="https://cn.vuejs.org/guide/components/async" target="_blank" rel="noopener noreferrer">Vue3 异步组件</a> 特性，将展示流程模型配置的“表单查看路由”，代码如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/复杂业务接入/业务表单-详情.png" alt="业务表单 - 详情" tabindex="0" loading="lazy"><figcaption>业务表单 - 详情</figcaption></figure>',12))])}const b=r(c,[["render",u],["__file","use-business-form.html.vue"]]),E=JSON.parse('{"path":"/project/rouyi-vue-pro/bpm/use-business-form.html","title":"审批接入（业务表单）","lang":"en-US","frontmatter":{"title":"审批接入（业务表单）","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":64,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 业务接入（业务表单）","slug":"_1-业务接入-业务表单","link":"#_1-业务接入-业务表单","children":[{"level":3,"title":"# 1.0 第零步：业务开发","slug":"_1-0-第零步-业务开发","link":"#_1-0-第零步-业务开发","children":[]},{"level":3,"title":"# 2.1 第一步：定义流程","slug":"_2-1-第一步-定义流程","link":"#_2-1-第一步-定义流程","children":[]},{"level":3,"title":"# 2.2 第二步：发起流程","slug":"_2-2-第二步-发起流程","link":"#_2-2-第二步-发起流程","children":[]},{"level":3,"title":"# 2.3 第三步：审批流程","slug":"_2-3-第三步-审批流程","link":"#_2-3-第三步-审批流程","children":[]}]},{"level":2,"title":"# 2. 选择业务表单、流程表单？","slug":"_2-选择业务表单、流程表单","link":"#_2-选择业务表单、流程表单","children":[]},{"level":2,"title":"# 3. 业务表单是如何集成的？","slug":"_3-业务表单是如何集成的","link":"#_3-业务表单是如何集成的","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":11.15,"words":3345},"filePathRelative":"project/rouyi-vue-pro/bpm/use-business-form.md","localizedDate":"July 7, 2024"}');export{b as comp,E as data};
