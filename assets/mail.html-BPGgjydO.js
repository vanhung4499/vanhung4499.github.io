import{_ as e,o as n,c as i,a as s}from"./app-5QVbWi7Z.js";const l={};function t(p,a){return n(),i("div",null,a[0]||(a[0]=[s(`<h1 id="邮件配置" tabindex="-1"><a class="header-anchor" href="#邮件配置"><span>邮件配置</span></a></h1><p>本章节，介绍项目的邮件功能。它在管理后台有三个菜单，分别是：</p><p><strong>① 邮箱账号：配置邮件的发送账号</strong></p><figure><img src="https://doc.iocoder.cn/img/邮件配置/演示-邮箱账号.png" alt="邮箱账号" tabindex="0" loading="lazy"><figcaption>邮箱账号</figcaption></figure><p><strong>② 邮件模版：管理邮件的内容模版</strong></p><figure><img src="https://doc.iocoder.cn/img/邮件配置/演示-邮件模版.png" alt="邮件模版" tabindex="0" loading="lazy"><figcaption>邮件模版</figcaption></figure><p><strong>③ 邮件记录：查看邮件的发送记录</strong></p><figure><img src="https://doc.iocoder.cn/img/邮件配置/演示-邮件记录.png" alt="邮件记录" tabindex="0" loading="lazy"><figcaption>邮件记录</figcaption></figure><h2 id="_1-表结构" tabindex="-1"><a class="header-anchor" href="#_1-表结构"><span><a href="#_1-%E8%A1%A8%E7%BB%93%E6%9E%84">#</a> 1. 表结构</span></a></h2><figure><img src="https://doc.iocoder.cn/img/邮件配置/表结构.png" alt="表结构" tabindex="0" loading="lazy"><figcaption>表结构</figcaption></figure><h2 id="_2-实现原理" tabindex="-1"><a class="header-anchor" href="#_2-实现原理"><span><a href="#_2-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86">#</a> 2. 实现原理</span></a></h2><p>邮件功能提供统一的 API 给其它模块，使它们可以快速实现发送邮件的功能，无需关心不同邮件平台的具体对接。</p><p>邮件采用异步发送，基于 <a href="/message-queue/event">消息队列</a>，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/实现原理.png" alt="实现原理" tabindex="0" loading="lazy"><figcaption>实现原理</figcaption></figure><ul><li>前端代码：<a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/system/mail/" target="_blank" rel="noopener noreferrer">views/system/mail</a></li><li>后端代码：<a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/" target="_blank" rel="noopener noreferrer">controller/admin/mail</a></li></ul><p>最终使用 Hutool 的 <a href="https://apidoc.gitee.com/dromara/hutool/cn/hutool/extra/mail/MailUtil.html" target="_blank" rel="noopener noreferrer">MailUtil</a> 发送邮件。</p><h2 id="_3-邮箱配置" tabindex="-1"><a class="header-anchor" href="#_3-邮箱配置"><span><a href="#_3-%E9%82%AE%E7%AE%B1%E9%85%8D%E7%BD%AE">#</a> 3. 邮箱配置</span></a></h2><p>本小节，讲解如何配置邮件功能，整个过程如下：</p><ol><li>新建一个邮箱【账号】，配置邮件的发送账号</li><li>新建一个邮件【模版】，配置邮件的内容模版</li><li>测试该邮件模板，查看对应的邮件【日志】，确认是否发送成功</li></ol><h3 id="_3-1-新建邮箱账号" tabindex="-1"><a class="header-anchor" href="#_3-1-新建邮箱账号"><span><a href="#_3-1-%E6%96%B0%E5%BB%BA%E9%82%AE%E7%AE%B1%E8%B4%A6%E5%8F%B7">#</a> 3.1 新建邮箱账号</span></a></h3><p>① 点击 [系统管理 -&gt; 消息中心 -&gt; 邮件管理 -&gt; 邮箱账号] 菜单，查看邮箱账号的列表。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/演示-邮箱账号.png" alt="邮箱账号" tabindex="0" loading="lazy"><figcaption>邮箱账号</figcaption></figure><p>② 点击 [新增] 按钮，添加一个邮箱账号，并填写信息如下图：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/邮箱配置-新建邮箱账号.png" alt="新增邮箱账号" tabindex="0" loading="lazy"><figcaption>新增邮箱账号</figcaption></figure><p>友情提示：</p><p>邮件发送基于 <a href="https://baike.baidu.com/item/SMTP/175887" target="_blank" rel="noopener noreferrer">SMTP</a> 协议实现，需要开通账号的 STMP 服务。例如说：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/邮箱配置-SMTP服务.png" alt="网易 163 邮箱的 SMTP 服务" tabindex="0" loading="lazy"><figcaption>网易 163 邮箱的 SMTP 服务</figcaption></figure><p>不同邮件平台的 SMTP 配置，可见 <a href="#_5-%E9%82%AE%E7%AE%B1%E5%B9%B3%E5%8F%B0%E9%99%84%E5%BD%95">「5. 邮箱平台附录」</a> 小节。</p><p>③ 新增完成后，确认你的邮箱账号是否可以发送邮件，可通过如下代码：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>import cn.hutool.extra.mail.MailAccount;</span></span>
<span class="line"><span>import cn.hutool.extra.mail.MailUtil;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Test</span></span>
<span class="line"><span>public void testDemo() {</span></span>
<span class="line"><span>    MailAccount mailAccount = new MailAccount()</span></span>
<span class="line"><span>//                .setFrom(&quot;奥特曼 &lt;ydym_test@163.com&gt;&quot;)</span></span>
<span class="line"><span>            .setFrom(&quot;ydym_test@163.com&quot;) // 邮箱地址</span></span>
<span class="line"><span>            .setHost(&quot;smtp.163.com&quot;).setPort(465).setSslEnable(true) // SMTP 服务器</span></span>
<span class="line"><span>            .setAuth(true).setUser(&quot;ydym_test@163.com&quot;).setPass(&quot;WBZTEINMIFVRYSOE&quot;); // 登录账号密码</span></span>
<span class="line"><span>    String messageId = MailUtil.send(mailAccount, &quot;7685413@qq.com&quot;, &quot;主题&quot;, &quot;内容&quot;, false);</span></span>
<span class="line"><span>    System.out.println(&quot;发送结果：&quot; + messageId);</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="_3-2-新建邮箱模版" tabindex="-1"><a class="header-anchor" href="#_3-2-新建邮箱模版"><span><a href="#_3-2-%E6%96%B0%E5%BB%BA%E9%82%AE%E7%AE%B1%E6%A8%A1%E7%89%88">#</a> 3.2 新建邮箱模版</span></a></h3><p>① 点击 [系统管理 -&gt; 消息中心 -&gt; 邮箱管理 -&gt; 邮件模板] 菜单，查看邮件模板的列表。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/演示-邮件模版.png" alt="邮件模版" tabindex="0" loading="lazy"><figcaption>邮件模版</figcaption></figure><p>② 点击 [新增] 按钮，选择刚创建的邮箱账号，并填写信息如下图：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/邮箱配置-新增邮件模版.png" alt="邮件模板的新增" tabindex="0" loading="lazy"><figcaption>邮件模板的新增</figcaption></figure><ul><li>邮箱账号：发送该邮件模板时，使用的邮件账号，即使用哪个邮箱进行发送邮件</li><li>模版编号：邮件模板的唯一标识，使用邮件 API 时，通过它标识使用的邮件模板</li><li>发件人名称：发送邮件显示的发件人名字</li><li>模板内容：邮件模板的内容，使用 <code>{var}</code> 作为占位符，例如说 <code>{name}</code>、<code>{code}</code> 等</li><li>开启状态：邮件模板被禁用时，该邮件模板将不发送邮件，只记录邮件日志</li></ul><p>疑问：为什么设计邮件模板的功能？</p><p>在一些场景下，产品会希望修改发送邮件的标题、内容，甚至邮箱账号，此时只需要修改邮件模版的对应属性，无需重启应用。</p><h3 id="_3-3-查看邮件日志" tabindex="-1"><a class="header-anchor" href="#_3-3-查看邮件日志"><span><a href="#_3-3-%E6%9F%A5%E7%9C%8B%E9%82%AE%E4%BB%B6%E6%97%A5%E5%BF%97">#</a> 3.3 查看邮件日志</span></a></h3><p>① 点击 [测试] 按钮，输入测试的收件邮箱地址，进行该邮件模板的模拟发送。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/邮箱配置-测试邮件.png" alt="测试邮件" tabindex="0" loading="lazy"><figcaption>测试邮件</figcaption></figure><p>② 打开收件邮箱，查看邮件是否发送成功。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/邮箱配置-收件箱.png" alt="邮件箱" tabindex="0" loading="lazy"><figcaption>邮件箱</figcaption></figure><p>③ 点击 [系统管理 -&gt; 消息中心 -&gt; 邮箱管理 -&gt; 邮件日志] 采单，可以查看到每条邮件的发送状态。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/邮箱配置-邮件发送日志.png" alt="邮件发送日志" tabindex="0" loading="lazy"><figcaption>邮件发送日志</figcaption></figure><h2 id="_4-邮件发送" tabindex="-1"><a class="header-anchor" href="#_4-邮件发送"><span><a href="#_4-%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81">#</a> 4. 邮件发送</span></a></h2><h3 id="_4-1-mailsendapi" tabindex="-1"><a class="header-anchor" href="#_4-1-mailsendapi"><span><a href="#_4-1-mailsendapi">#</a> 4.1 MailSendApi</span></a></h3><p><a href="#_3-%E9%82%AE%E7%AE%B1%E9%85%8D%E7%BD%AE">邮箱配置</a>完成后，可使用 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/mail/MailSendApi.java" target="_blank" rel="noopener noreferrer">MailSendApi</a> 进行邮件的发送，支持多种用户类型。它的方法如下：</p><figure><img src="https://doc.iocoder.cn/img/邮件配置/邮件发送-MailSendApi.png" alt="MailSendApi" tabindex="0" loading="lazy"><figcaption>MailSendApi</figcaption></figure><h3 id="_4-2-接入示例" tabindex="-1"><a class="header-anchor" href="#_4-2-接入示例"><span><a href="#_4-2-%E6%8E%A5%E5%85%A5%E7%A4%BA%E4%BE%8B">#</a> 4.2 接入示例</span></a></h3><p>以 <code>yudao-module-infra</code> 模块，需要发邮件为例子，讲解 SmsCodeApi 的使用。</p><p>① 在 <code>yudao-module-infra-biz</code> 模块的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-infra/yudao-module-infra-biz/pom.xml" target="_blank" rel="noopener noreferrer"><code>pom.xml</code></a> 引入 <code>yudao-module-system-api</code> 依赖，如所示：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;cn.iocoder.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;yudao-module-system-api&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;\${revision}&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><p>② 在代码中注入 SmsCodeApi Bean，并调用发送邮件的方法。代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>public class TestDemoServiceImpl implements TestDemoService {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 0. 注入 MailSendApi Bean</span></span>
<span class="line"><span>    @Resource</span></span>
<span class="line"><span>    private MailSendApi mailSendApi;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public void sendDemo() {</span></span>
<span class="line"><span>        // 1. 准备参数</span></span>
<span class="line"><span>        Long userId = 1L; // 示例中写死，你可以改成你业务中的 userId 噢</span></span>
<span class="line"><span>        String templateCode = &quot;test_01&quot;; // 邮件模版，记得在【邮箱管理】中配置噢</span></span>
<span class="line"><span>        Map&lt;String, Object&gt; templateParams = new HashMap&lt;&gt;();</span></span>
<span class="line"><span>        templateParams.put(&quot;key1&quot;, &quot;奥特曼&quot;);</span></span>
<span class="line"><span>        templateParams.put(&quot;key2&quot;, &quot;变身&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 2. 发送邮件</span></span>
<span class="line"><span>        mailSendApi.sendSingleMailToAdmin(new MailSendSingleToUserReqDTO()</span></span>
<span class="line"><span>                .setUserId(userId).setTemplateCode(templateCode).setTemplateParams(templateParams));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-邮箱平台附录" tabindex="-1"><a class="header-anchor" href="#_5-邮箱平台附录"><span><a href="#_5-%E9%82%AE%E7%AE%B1%E5%B9%B3%E5%8F%B0%E9%99%84%E5%BD%95">#</a> 5. 邮箱平台附录</span></a></h2><ul><li><a href="http://t.zoukankan.com/kimsbo-p-10671851.html" target="_blank" rel="noopener noreferrer">《QQ 邮箱的 SMTP 设置》</a></li><li><a href="https://blog.csdn.net/qq_39933045/article/details/126957074" target="_blank" rel="noopener noreferrer">《网易 163 邮箱的 SMTP 设置》</a></li><li><a href="https://zhuanlan.zhihu.com/p/551399559" target="_blank" rel="noopener noreferrer">《QQ 邮箱、网易邮箱、腾讯企业邮箱、网易企业邮箱的 SMTP 设置》</a></li></ul>`,57)]))}const r=e(l,[["render",t],["__file","mail.html.vue"]]),d=JSON.parse('{"path":"/project/rouyi-vue-pro/mail.html","title":"邮件配置","lang":"en-US","frontmatter":{"title":"邮件配置","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":157,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 表结构","slug":"_1-表结构","link":"#_1-表结构","children":[]},{"level":2,"title":"# 2. 实现原理","slug":"_2-实现原理","link":"#_2-实现原理","children":[]},{"level":2,"title":"# 3. 邮箱配置","slug":"_3-邮箱配置","link":"#_3-邮箱配置","children":[{"level":3,"title":"# 3.1 新建邮箱账号","slug":"_3-1-新建邮箱账号","link":"#_3-1-新建邮箱账号","children":[]},{"level":3,"title":"# 3.2 新建邮箱模版","slug":"_3-2-新建邮箱模版","link":"#_3-2-新建邮箱模版","children":[]},{"level":3,"title":"# 3.3 查看邮件日志","slug":"_3-3-查看邮件日志","link":"#_3-3-查看邮件日志","children":[]}]},{"level":2,"title":"# 4. 邮件发送","slug":"_4-邮件发送","link":"#_4-邮件发送","children":[{"level":3,"title":"# 4.1 MailSendApi","slug":"_4-1-mailsendapi","link":"#_4-1-mailsendapi","children":[]},{"level":3,"title":"# 4.2 接入示例","slug":"_4-2-接入示例","link":"#_4-2-接入示例","children":[]}]},{"level":2,"title":"# 5. 邮箱平台附录","slug":"_5-邮箱平台附录","link":"#_5-邮箱平台附录","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":5.9,"words":1769},"filePathRelative":"project/rouyi-vue-pro/mail.md","localizedDate":"July 7, 2024"}');export{r as comp,d as data};
