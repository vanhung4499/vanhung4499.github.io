import{_ as i,g as p,o as s,c as d,a as l,e as a,h as r,f as t,w as n}from"./app-5QVbWi7Z.js";const c={};function u(g,e){const o=p("RouteLink");return s(),d("div",null,[e[21]||(e[21]=l('<h1 id="快速启动-后端项目" tabindex="-1"><a class="header-anchor" href="#快速启动-后端项目"><span>快速启动（后端项目）</span></a></h1><p>目标：使用 IDEA 工具，将后端项目 <a href="https://github.com/YunaiV/yudao-cloud" target="_blank" rel="noopener noreferrer">yudao-cloud</a> 运行起来 🛫</p><p>整个过程非常简单，预计 15 分钟就可以完成，取决于大家的网速。</p><blockquote><p>↓↓↓ 技术交流群，一起苦练技术基本功，每日精进 30 公里！↓↓↓</p></blockquote><figure><img src="https://cloud.iocoder.cn/img/op/mp_yudaoyuanma2.png" alt="交流群" tabindex="0" loading="lazy"><figcaption>交流群</figcaption></figure><h2 id="👍-相关视频教程" tabindex="-1"><a class="header-anchor" href="#👍-相关视频教程"><span><a href="#%F0%9F%91%8D-%E7%9B%B8%E5%85%B3%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B">#</a> 👍 相关视频教程</span></a></h2><ul><li><a href="https://t.zsxq.com/07BeiEA6Q" target="_blank" rel="noopener noreferrer">从零开始 02：在 Windows 环境下，如何运行前后端项目？</a></li><li><a href="https://t.zsxq.com/07FUNnYFm" target="_blank" rel="noopener noreferrer">从零开始 03：在 MacOS 环境下，如何运行前后端项目？</a></li></ul><h2 id="_1-克隆代码" tabindex="-1"><a class="header-anchor" href="#_1-克隆代码"><span><a href="#_1-%E5%85%8B%E9%9A%86%E4%BB%A3%E7%A0%81">#</a> 1. 克隆代码</span></a></h2><p>使用 <a href="http://www.iocoder.cn/categories/IDEA/?self" target="_blank" rel="noopener noreferrer">IDEA</a> 克隆 <a href="https://github.com/YunaiV/yudao-cloud" target="_blank" rel="noopener noreferrer">https://github.com/YunaiV/yudao-cloud</a> 仓库的最新代码，并给该仓库一个 <a href="https://github.com/YunaiV/yudao-cloud" target="_blank" rel="noopener noreferrer">Star</a>。</p><blockquote><p>注意：不建议使用 Eclipse，因为它没有支持 Lombok 和 Mapstruct 插件。</p></blockquote><p>克隆完成后，耐心等待 Maven 下载完相关的依赖。一定要注意：</p><p>① 默认情况下，使用 <code>master</code> 分支，它对应 JDK 8 + Spring Boot 2.7 版本。</p><p>② 如果你想体验 JDK 17/21 + Spring Boot 3.2 版本，需要切换到 <code>master-jdk17</code> 分支。</p>',13)),a("blockquote",null,[a("p",null,[e[1]||(e[1]=r("友情提示：项目的每个模块的作用，可见 ")),t(o,{to:"/project-intro/"},{default:n(()=>e[0]||(e[0]=[r("《开发指南 —— 项目结构》")])),_:1}),e[2]||(e[2]=r(" 文档。"))])]),e[22]||(e[22]=l('<p>使用的 Spring Cloud 版本较新，所以需要下载一段时间。趁着这个时间，胖友可以给项目添加一个 <a href="https://github.com/YunaiV/yudao-cloud" target="_blank" rel="noopener noreferrer">Star</a>，支持下艿艿。</p><figure><img src="https://cloud.iocoder.cn/img/后端手册/快速启动/Star-Cloud.png" alt="Star 一波" tabindex="0" loading="lazy"><figcaption>Star 一波</figcaption></figure><h2 id="_2-apifox-接口工具" tabindex="-1"><a class="header-anchor" href="#_2-apifox-接口工具"><span><a href="#_2-apifox-%E6%8E%A5%E5%8F%A3%E5%B7%A5%E5%85%B7">#</a> 2. Apifox 接口工具</span></a></h2><p>点击 <a href="http://mtw.so/5NZLsX" target="_blank" rel="noopener noreferrer">Apifox</a> 首页，下载对应的 Apifox 桌面版。如下图所示：</p><p>为什么要下载 Apifox 桌面版？</p><p>艿艿已经卸载 Postman，使用 Apifox 进行替代。国产软件，yyds 永远滴神！</p><p>国内很多互联网公司，包括百度、阿里、腾讯、字节跳动等等在内，都在使用 Apifox 作为 API 工具。</p><figure><img src="https://cloud.iocoder.cn/img/接口文档/01.png" alt="Apifox 下载" tabindex="0" loading="lazy"><figcaption>Apifox 下载</figcaption></figure><p>解压后，双击进行安装即可。黑色界面，非常酷炫。</p><figure><img src="https://cloud.iocoder.cn/img/接口文档/02.png" alt="Apifox 界面" tabindex="0" loading="lazy"><figcaption>Apifox 界面</figcaption></figure><p>接口文档？</p><p>阅读 <a href="/api-doc">《开发指南 —— 接口文档》</a> 呀~~</p><h2 id="_3-基础设施-必选" tabindex="-1"><a class="header-anchor" href="#_3-基础设施-必选"><span><a href="#_3-%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD-%E5%BF%85%E9%80%89">#</a> 3. 基础设施（必选)</span></a></h2><blockquote><p>本小节的基础设施【必须】安装，否则项目无法启动。</p></blockquote><h3 id="_3-1-初始化-mysql" tabindex="-1"><a class="header-anchor" href="#_3-1-初始化-mysql"><span><a href="#_3-1-%E5%88%9D%E5%A7%8B%E5%8C%96-mysql">#</a> 3.1 初始化 MySQL</span></a></h3><p>友情提示？</p><p>如果你是 PostgreSQL、Oracle、SQL Server、DM 等其它数据库，也是可以的。</p><p>因为我主要使用 MySQL数据库为主，所以其它数据库的 SQL 文件可能存在滞后，可以加入 <a href="/qun">用户群</a> 反馈。</p><p>补充说明？</p><p>由于工作较忙，暂时未拆分到多个数据库，可以按照前缀自行处理：</p><ul><li><code>system_</code> 前缀，属于 <code>yudao-module-system</code> 服务</li><li><code>infra_</code> 前缀，属于 <code>yudao-module-infra</code> 服务<br> 项目使用 MySQL 存储数据，所以需要启动一个 MySQL 服务。</li></ul><p>① 创建一个名字为 <code>ruoyi-vue-pro</code> 数据库，<strong>【只要】</strong> 执行对应数据库类型的 <a href="https://github.com/YunaiV/yudao-cloud/tree/master/sql" target="_blank" rel="noopener noreferrer"><code>sql</code></a> 目录下的 <code>ruoyi-vue-pro.sql</code> SQL 文件，进行初始化。</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/快速启动.png" alt="导入 MySQL 数据库" tabindex="0" loading="lazy"><figcaption>导入 MySQL 数据库</figcaption></figure><p>② 默认配置下，MySQL 需要启动在 3306 端口，并且账号是 root，密码是 123456。如果不一致，需要修改 <code>application-local.yaml</code> 配置文件。</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/210.png" alt="修改配置文件" tabindex="0" loading="lazy"><figcaption>修改配置文件</figcaption></figure><hr><p><strong>如果是 MySQL 数据库，不需要看 ③、④ 两点！！！</strong></p><p>③ 【如果是 PostgreSQL、Oracle、SQL Server 数据库】，修改 <code>yudao-spring-boot-starter-mybatis</code> 模块的 <code>pom.xml</code> 文件，将对应的 JDBC Driver 的 <code>optional</code> 移除。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/数据库依赖.png" alt="数据库依赖" tabindex="0" loading="lazy"><figcaption>数据库依赖</figcaption></figure><p>注意，需要使用 IDEA 刷新下 Maven 的依赖。</p>',30)),a("p",null,[e[4]||(e[4]=r("④ 【如果是 DM 达梦数据库】建议先使用 MySQL 跑通，然后再阅读 ")),t(o,{to:"/db-dameng/"},{default:n(()=>e[3]||(e[3]=[r("《达梦数据库专属》")])),_:1}),e[5]||(e[5]=r(" 文档。"))]),e[23]||(e[23]=l(`<h3 id="_3-2-初始化-redis" tabindex="-1"><a class="header-anchor" href="#_3-2-初始化-redis"><span><a href="#_3-2-%E5%88%9D%E5%A7%8B%E5%8C%96-redis">#</a> 3.2 初始化 Redis</span></a></h3><p>项目使用 Redis 缓存数据，所以需要启动一个 Redis 服务。</p><blockquote><p>不会安装的胖友，可以选择阅读下文，良心的艿艿。</p><ul><li>Windows 安装 Redis 指南：<a href="http://www.iocoder.cn/Redis/windows-install" target="_blank" rel="noopener noreferrer">http://www.iocoder.cn/Redis/windows-install</a></li><li>Mac 安装 Redis 指南：<a href="http://www.iocoder.cn/Redis/mac-install" target="_blank" rel="noopener noreferrer">http://www.iocoder.cn/Redis/mac-install</a></li></ul></blockquote><p>默认配置下，Redis 启动在 6379 端口，不设置账号密码。如果不一致，需要修改 <code>application-local.yaml</code> 配置文件。</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/211.png" alt="修改配置文件" tabindex="0" loading="lazy"><figcaption>修改配置文件</figcaption></figure><h3 id="_3-3-初始化-nacos" tabindex="-1"><a class="header-anchor" href="#_3-3-初始化-nacos"><span><a href="#_3-3-%E5%88%9D%E5%A7%8B%E5%8C%96-nacos">#</a> 3.3 初始化 Nacos</span></a></h3><p>项目使用 Nacos 作为<strong>注册中心</strong>和<strong>配置中心</strong>，参考 <a href="http://www.iocoder.cn/Nacos/install/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 Nacos 极简入门》</a> 文章，进行安装，只需要看该文的 <a href="#">「2. 单机部署（最简模式）」</a> 即可。</p><p>安装完成之后，需要创建 <code>dev</code> <strong>命名空间</strong>，如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/221.png" alt="创建  命名空间" tabindex="0" loading="lazy"><figcaption>创建 命名空间</figcaption></figure><blockquote><p>Nacos 拓展学习资料：</p><ul><li><a href="http://www.iocoder.cn/Spring-Cloud-Alibaba/Nacos-Config/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 Spring Cloud Alibaba 配置中心 Nacos 入门》</a> 对应 <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/labx-05-spring-cloud-alibaba-nacos-config" target="_blank" rel="noopener noreferrer">labx-05-spring-cloud-alibaba-nacos-config</a></li><li><a href="http://www.iocoder.cn/Spring-Cloud-Alibaba/Nacos-Discovery/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 Spring Cloud Alibaba 注册中心 Nacos 入门》</a> 对应 <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/labx-01-spring-cloud-alibaba-nacos-discovery" target="_blank" rel="noopener noreferrer">labx-01-spring-cloud-alibaba-nacos-discovery</a></li></ul></blockquote><h2 id="_4-基础设施-可选" tabindex="-1"><a class="header-anchor" href="#_4-基础设施-可选"><span><a href="#_4-%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD-%E5%8F%AF%E9%80%89">#</a> 4. 基础设施（可选）</span></a></h2><blockquote><p>本小节的基础设施【可选】安装，不影响项目的启动，可在项目启动后再安装。</p></blockquote><h3 id="_4-1-rocketmq" tabindex="-1"><a class="header-anchor" href="#_4-1-rocketmq"><span><a href="#_4-1-rocketmq">#</a> 4.1 RocketMQ</span></a></h3><p>项目使用 RocketMQ 作为<strong>消息中心</strong>和<strong>事件总线</strong>，参考 <a href="http://www.iocoder.cn/RocketMQ/install/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 RocketMQ 极简入门》</a> 文章，进行安装，只需要看该文的 <a href="#">「2. 单机部署」</a> 即可。</p><blockquote><p>RocketMQ 拓展学习资料：</p><ul><li><a href="http://www.iocoder.cn/Spring-Cloud-Alibaba/RocketMQ/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 Spring Cloud Alibaba 消息队列 RocketMQ 入门》</a> 对应 <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/labx-06-spring-cloud-stream-rocketmq" target="_blank" rel="noopener noreferrer">labx-06-spring-cloud-stream-rocketmq</a></li><li><a href="http://www.iocoder.cn/Spring-Cloud-Alibaba/Bus-RocketMQ/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 Spring Cloud Alibaba 事件总线 Bus RocketMQ 入门》</a> 对应 <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/labx-06-spring-cloud-stream-rocketmq" target="_blank" rel="noopener noreferrer">labx-06-spring-cloud-stream-rocketmq</a></li><li><a href="http://www.iocoder.cn/Performance-Testing/RocketMQ-benchmark/?yudao-cloud" target="_blank" rel="noopener noreferrer">《性能测试 —— RocketMQ 基准测试》</a></li></ul></blockquote><h3 id="_4-2-xxl-job" tabindex="-1"><a class="header-anchor" href="#_4-2-xxl-job"><span><a href="#_4-2-xxl-job">#</a> 4.2 XXL-Job</span></a></h3><p>① 项目使用 XXL-Job 作为<strong>定时任务</strong>，参考 <a href="https://www.iocoder.cn/XXL-JOB/install/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 XXL-Job 极简入门》</a> 文章，进行安装，只需要看该文的 <a href="#">「4. 搭建调度中心」</a> 即可。</p><p>注意，需要修改 <code>application.yaml</code> 配置文件，修改 <code>server.port</code> 为 9090。</p><p>② 默认配置下，本地 <code>local</code> 环境的定时任务是关闭的，避免控制台一直报错报错。如果要开启，请参考 <a href="/job">《微服务手册 —— 定时任务》</a> 文档。</p><h3 id="_4-3-seata" tabindex="-1"><a class="header-anchor" href="#_4-3-seata"><span><a href="#_4-3-seata">#</a> 4.3 Seata</span></a></h3><p>TODO 接入中，提供实战案例 ing</p><blockquote><p>Seata 拓展学习资料：</p><ul><li><a href="http://www.iocoder.cn/Spring-Cloud-Alibaba/Seata/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 Spring Cloud Alibaba 分布式事务 Seata 入门 》</a> 对应 对应 <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/labx-17" target="_blank" rel="noopener noreferrer">labx-17</a></li></ul></blockquote><h3 id="_4-4-sentinel" tabindex="-1"><a class="header-anchor" href="#_4-4-sentinel"><span><a href="#_4-4-sentinel">#</a> 4.4 Sentinel</span></a></h3><p>TODO 接入中，提供实战案例 ing</p><blockquote><p>Sentinel 拓展学习资料：</p><ul><li><a href="http://www.iocoder.cn/Spring-Cloud-Alibaba/Sentinel/?yudao-cloud" target="_blank" rel="noopener noreferrer">《芋道 Spring Cloud Alibaba 服务容错 Sentinel 入门 》</a> 对应 <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/labx-04-spring-cloud-alibaba-sentinel" target="_blank" rel="noopener noreferrer">labx-04-spring-cloud-alibaba-sentinel</a></li></ul></blockquote><h3 id="_4-5-elasticsearch" tabindex="-1"><a class="header-anchor" href="#_4-5-elasticsearch"><span><a href="#_4-5-elasticsearch">#</a> 4.5 Elasticsearch</span></a></h3><p>TODO 接入中，提供实战案例 ing</p><blockquote><p>Elasticsearch 拓展学习资料：</p><ul><li><a href="http://www.iocoder.cn/Spring-Boot/Elasticsearch/?onemall" target="_blank" rel="noopener noreferrer">《芋道 Spring Boot Elasticsearch 入门》</a></li><li><a href="http://www.iocoder.cn/Elasticsearch/ELK-install/?onemall" target="_blank" rel="noopener noreferrer">《芋道 ELK(Elasticsearch + Logstash + Kibana) 极简入门》</a></li></ul></blockquote><h2 id="_5-启动后端项目" tabindex="-1"><a class="header-anchor" href="#_5-启动后端项目"><span><a href="#_5-%E5%90%AF%E5%8A%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE">#</a> 5. 启动后端项目</span></a></h2><h3 id="_5-1-编译项目" tabindex="-1"><a class="header-anchor" href="#_5-1-编译项目"><span><a href="#_5-1-%E7%BC%96%E8%AF%91%E9%A1%B9%E7%9B%AE">#</a> 5.1 编译项目</span></a></h3><p>第一步，使用 IDEA 自带的 Maven 插件，进行项目的编译。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/后端手册/快速启动/后端编译-Cloud.png" alt="后端编译" tabindex="0" loading="lazy"><figcaption>后端编译</figcaption></figure><p>【可选】也可以使用 Maven 命令编译：</p><ul><li>使用 IDEA 打开 Terminal 终端，在 <strong>根目录</strong> 下直接执行 <code>mvn clean install package &#39;-Dmaven.test.skip=true&#39;</code> 命令。</li><li>如果执行报 <code>Unknown lifecycle phase “.test.skip=true”</code> 错误，使用 <code>mvn clean install package -Dmaven.test.skip=true</code> 即可。</li></ul><p>ps：只有首次需要执行 Maven 命令，解决基础 <code>pom.xml</code> 不存在，导致报 BaseDbUnitTest 类不存在的问题。</p><p>整个过程，预计需要 1 分钟左右。成功后，控制台日志如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>[INFO] ------------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] BUILD SUCCESS</span></span>
<span class="line"><span>[INFO] ------------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Total time:  9.139 s (Wall Clock)</span></span>
<span class="line"><span>[INFO] Finished at: 2024-05-03T18:56:03+08:00</span></span>
<span class="line"><span>[INFO] ------------------------------------------------------------------------</span></span></code></pre></div><h3 id="_5-2-启动-gateway-服务" tabindex="-1"><a class="header-anchor" href="#_5-2-启动-gateway-服务"><span><a href="#_5-2-%E5%90%AF%E5%8A%A8-gateway-%E6%9C%8D%E5%8A%A1">#</a> 5.2 启动 <code>gateway</code> 服务</span></a></h3><p>执行 <a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-gateway/src/main/java/cn/iocoder/yudao/gateway/GatewayServerApplication.java" target="_blank" rel="noopener noreferrer">GatewayServerApplication</a> 类，进行启动。</p><p>启动还是报类不存在？</p><p>可能是 IDEA 的 bug，点击 [File -&gt; Invalidate Caches] 菜单，清空下缓存，重启后在试试看。</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/230.png" alt="启动  服务" tabindex="0" loading="lazy"><figcaption>启动 服务</figcaption></figure><p>启动完成后，使用浏览器访问 <a href="http://127.0.0.1:48080" target="_blank" rel="noopener noreferrer">http://127.0.0.1:48080</a> 地址，返回如下 JSON 字符串，说明成功。</p><blockquote><p>友情提示：注意，默认配置下，网关启动在 48080 端口。</p></blockquote><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>{&quot;code&quot;:404,&quot;data&quot;:null,&quot;msg&quot;:null}</span></span></code></pre></div><p>如果报 “Command line is too long” 错误，参考 <a href="https://www.iocoder.cn/Fight/Intellij-IDEA-Indicates-that-Command-Line-is-too-long/?yudao" target="_blank" rel="noopener noreferrer">《Intellij IDEA 运行时报 Command line is too long 解决方法 》</a> 文章解决，或者直接点击 YudaoServerApplication <strong>蓝字</strong>部分！</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/01.png" alt="“Command line is too long” 错误" tabindex="0" loading="lazy"><figcaption>“Command line is too long” 错误</figcaption></figure><h3 id="_5-3-启动-system-服务" tabindex="-1"><a class="header-anchor" href="#_5-3-启动-system-服务"><span><a href="#_5-3-%E5%90%AF%E5%8A%A8-system-%E6%9C%8D%E5%8A%A1">#</a> 5.3 启动 <code>system</code> 服务</span></a></h3><p>执行 <a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/SystemServerApplication.java" target="_blank" rel="noopener noreferrer">SystemServerApplication</a> 类，进行启动。</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/231.png" alt="启动  服务" tabindex="0" loading="lazy"><figcaption>启动 服务</figcaption></figure><p>启动完成后，使用浏览器访问 <a href="http://127.0.0.1:48081/admin-api/system/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:48081/admin-api/system/</a> 和 <a href="http://127.0.0.1:48080/admin-api/system/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:48080/admin-api/system/</a> 地址，都返回如下 JSON 字符串，说明成功。</p><blockquote><p>友情提示：注意，默认配置下，<code>yudao-module-system</code> 服务启动在 48081 端口。</p></blockquote><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>{&quot;code&quot;:401,&quot;data&quot;:null,&quot;msg&quot;:&quot;账号未登录&quot;}</span></span></code></pre></div><h3 id="_5-3-启动-infra-服务" tabindex="-1"><a class="header-anchor" href="#_5-3-启动-infra-服务"><span><a href="#_5-3-%E5%90%AF%E5%8A%A8-infra-%E6%9C%8D%E5%8A%A1">#</a> 5.3 启动 <code>infra</code> 服务</span></a></h3><p>执行 <a href="https://github.com/YunaiV/yudao-cloud/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/InfraServerApplication.java" target="_blank" rel="noopener noreferrer">InfraServerApplication</a> 类，进行启动。</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/232.png" alt="启动  服务" tabindex="0" loading="lazy"><figcaption>启动 服务</figcaption></figure><p>启动完成后，使用浏览器访问 <a href="http://127.0.0.1:48082/admin-api/infra/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:48082/admin-api/infra/</a> 和 <a href="http://127.0.0.1:48080/admin-api/infra/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:48080/admin-api/infra/</a> 地址，都返回如下 JSON 字符串，说明成功。</p><blockquote><p>友情提示：注意，默认配置下，<code>yudao-module-infra</code> 服务启动在 48082 端口。</p></blockquote><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>{&quot;code&quot;:401,&quot;data&quot;:null,&quot;msg&quot;:&quot;账号未登录&quot;}</span></span></code></pre></div><h3 id="_5-4-启动-bpm-服务" tabindex="-1"><a class="header-anchor" href="#_5-4-启动-bpm-服务"><span><a href="#_5-4-%E5%90%AF%E5%8A%A8-bpm-%E6%9C%8D%E5%8A%A1">#</a> 5.4 启动 <code>bpm</code> 服务</span></a></h3><p>参见 <a href="/bpm">《工作流手册》</a> 文档。</p><h3 id="_5-5-启动-report-服务" tabindex="-1"><a class="header-anchor" href="#_5-5-启动-report-服务"><span><a href="#_5-5-%E5%90%AF%E5%8A%A8-report-%E6%9C%8D%E5%8A%A1">#</a> 5.5 启动 <code>report</code> 服务</span></a></h3>`,62)),a("p",null,[e[7]||(e[7]=r("参见 ")),t(o,{to:"/report/"},{default:n(()=>e[6]||(e[6]=[r("《大屏手册》")])),_:1}),e[8]||(e[8]=r(" 文档。"))]),e[24]||(e[24]=a("h3",{id:"_5-6-启动-pay-服务",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_5-6-启动-pay-服务"},[a("span",null,[a("a",{href:"#_5-6-%E5%90%AF%E5%8A%A8-pay-%E6%9C%8D%E5%8A%A1"},"#"),r(" 5.6 启动 "),a("code",null,"pay"),r(" 服务")])])],-1)),a("p",null,[e[10]||(e[10]=r("参见 ")),t(o,{to:"/pay/build/"},{default:n(()=>e[9]||(e[9]=[r("《支付手册》")])),_:1}),e[11]||(e[11]=r(" 文档。"))]),e[25]||(e[25]=a("h3",{id:"_5-7-启动-mp-服务",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_5-7-启动-mp-服务"},[a("span",null,[a("a",{href:"#_5-7-%E5%90%AF%E5%8A%A8-mp-%E6%9C%8D%E5%8A%A1"},"#"),r(" 5.7 启动 "),a("code",null,"mp"),r(" 服务")])])],-1)),a("p",null,[e[13]||(e[13]=r("参见 ")),t(o,{to:"/mp/build/"},{default:n(()=>e[12]||(e[12]=[r("《公众号手册》")])),_:1}),e[14]||(e[14]=r(" 文档。"))]),e[26]||(e[26]=a("h3",{id:"_5-8-启动-mall-服务",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_5-8-启动-mall-服务"},[a("span",null,[a("a",{href:"#_5-8-%E5%90%AF%E5%8A%A8-mall-%E6%9C%8D%E5%8A%A1"},"#"),r(" 5.8 启动 "),a("code",null,"mall"),r(" 服务")])])],-1)),a("p",null,[e[16]||(e[16]=r("参见 ")),t(o,{to:"/mall/build/"},{default:n(()=>e[15]||(e[15]=[r("《商城手册》")])),_:1}),e[17]||(e[17]=r(" 文档。"))]),e[27]||(e[27]=l('<h2 id="_6-启动前端项目【简易】" tabindex="-1"><a class="header-anchor" href="#_6-启动前端项目【简易】"><span><a href="#_6-%E5%90%AF%E5%8A%A8%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E3%80%90%E7%AE%80%E6%98%93%E3%80%91">#</a> 6. 启动前端项目【简易】</span></a></h2><p>友情提示：这是可选步骤，想要完整启动前端，可以直接看「7. 启动前端项目【完整】」小节噢！</p><p>在 <a href="https://gitee.com/yudaocode/yudao-demo" target="_blank" rel="noopener noreferrer">yudao-demo</a> 项目中，提前编译好了前端项目的静态资源，无需安装 Node 等前端环境，可以直接体验和使用。操作步骤如下：</p><p>① 克隆 <a href="https://gitee.com/yudaocode/yudao-demo" target="_blank" rel="noopener noreferrer">https://gitee.com/yudaocode/yudao-demo</a> 项目，运行对应的启动类：</p><figure><img src="https://cloud.iocoder.cn/img/快速启动/演示项目.png" alt="演示项目" tabindex="0" loading="lazy"><figcaption>演示项目</figcaption></figure><ul><li><a href="https://github.com/yudaocode/yudao-ui-admin-vue3" target="_blank" rel="noopener noreferrer">Vue3 + element-plus</a> ：ElementPlusApplication</li><li><a href="https://github.com/yudaocode/yudao-ui-admin-vben" target="_blank" rel="noopener noreferrer">Vue3 + vben</a> ：VbenApplication</li><li><a href="https://github.com/yudaocode/yudao-ui-admin-vben" target="_blank" rel="noopener noreferrer">Vue2 + element-ui</a> ：ElementUIApplication</li></ul><p>② 访问 <a href="http://127.0.0.1:2048/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:2048/</a> 地址，即可看到对应的管理后台。</p><p>补充说明：</p><p>前端项目是不定期编译，可能不是最新版本。</p><p>如果需要最新版本，请继续往下看。</p><h2 id="_7-启动前端项目【完整】" tabindex="-1"><a class="header-anchor" href="#_7-启动前端项目【完整】"><span><a href="#_7-%E5%90%AF%E5%8A%A8%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E3%80%90%E5%AE%8C%E6%95%B4%E3%80%91">#</a> 7. 启动前端项目【完整】</span></a></h2><p>参考 <a href="/quick-start-front">《快速启动（前端项目）》</a> 文档</p><h2 id="_666-彩蛋" tabindex="-1"><a class="header-anchor" href="#_666-彩蛋"><span><a href="#_666-%E5%BD%A9%E8%9B%8B">#</a> 666. 彩蛋</span></a></h2><p>至此，我们已经完成了项目 <a href="https://github.com/YunaiV/ruoyi-vue-pro" target="_blank" rel="noopener noreferrer">ruoyi-vue-pro</a> 的启动。</p>',14)),a("p",null,[e[19]||(e[19]=r("胖友可以根据自己的兴趣，阅读相关源码。如果你想更快速的学习，可以看看 ")),t(o,{to:"/video/"},{default:n(()=>e[18]||(e[18]=[r("《视频教程 》")])),_:1}),e[20]||(e[20]=r(" 教程哟。"))]),e[28]||(e[28]=a("figure",null,[a("img",{src:"https://cloud.iocoder.cn/img/common/yudao-cloud-architecture.png",alt:"架构图",tabindex:"0",loading:"lazy"}),a("figcaption",null,"架构图")],-1)),e[29]||(e[29]=a("p",null,"后面，艿艿会花大量的时间，继续优化这个项目。同时，输出与项目匹配的技术博客，方便胖友更好的学习与理解。",-1)),e[30]||(e[30]=a("p",null,"还是那句话，😆 为开源继绝学，我辈义不容辞！",-1)),e[31]||(e[31]=a("hr",null,null,-1)),e[32]||(e[32]=a("p",null,[r("嘿嘿嘿，记得一定要给 "),a("a",{href:"https://github.com/YunaiV/yudao-cloud",target:"_blank",rel:"noopener noreferrer"},"https://github.com/YunaiV/yudao-cloud"),r(" 一个 star，这对艿艿真的很重要。")],-1)),e[33]||(e[33]=a("figure",null,[a("img",{src:"https://cloud.iocoder.cn/img/后端手册/快速启动/Star-Cloud.png",alt:"Star 一波",tabindex:"0",loading:"lazy"}),a("figcaption",null,"Star 一波")],-1))])}const f=i(c,[["render",u],["__file","quick-start.html.vue"]]),b=JSON.parse('{"path":"/project/yudao-cloud/quick-start.html","title":"快速启动（后端项目）","lang":"en-US","frontmatter":{"title":"快速启动（后端项目）","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":6,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 👍 相关视频教程","slug":"👍-相关视频教程","link":"#👍-相关视频教程","children":[]},{"level":2,"title":"# 1. 克隆代码","slug":"_1-克隆代码","link":"#_1-克隆代码","children":[]},{"level":2,"title":"# 2. Apifox 接口工具","slug":"_2-apifox-接口工具","link":"#_2-apifox-接口工具","children":[]},{"level":2,"title":"# 3. 基础设施（必选)","slug":"_3-基础设施-必选","link":"#_3-基础设施-必选","children":[{"level":3,"title":"# 3.1 初始化 MySQL","slug":"_3-1-初始化-mysql","link":"#_3-1-初始化-mysql","children":[]},{"level":3,"title":"# 3.2 初始化 Redis","slug":"_3-2-初始化-redis","link":"#_3-2-初始化-redis","children":[]},{"level":3,"title":"# 3.3 初始化 Nacos","slug":"_3-3-初始化-nacos","link":"#_3-3-初始化-nacos","children":[]}]},{"level":2,"title":"# 4. 基础设施（可选）","slug":"_4-基础设施-可选","link":"#_4-基础设施-可选","children":[{"level":3,"title":"# 4.1 RocketMQ","slug":"_4-1-rocketmq","link":"#_4-1-rocketmq","children":[]},{"level":3,"title":"# 4.2 XXL-Job","slug":"_4-2-xxl-job","link":"#_4-2-xxl-job","children":[]},{"level":3,"title":"# 4.3 Seata","slug":"_4-3-seata","link":"#_4-3-seata","children":[]},{"level":3,"title":"# 4.4 Sentinel","slug":"_4-4-sentinel","link":"#_4-4-sentinel","children":[]},{"level":3,"title":"# 4.5 Elasticsearch","slug":"_4-5-elasticsearch","link":"#_4-5-elasticsearch","children":[]}]},{"level":2,"title":"# 5. 启动后端项目","slug":"_5-启动后端项目","link":"#_5-启动后端项目","children":[{"level":3,"title":"# 5.1 编译项目","slug":"_5-1-编译项目","link":"#_5-1-编译项目","children":[]},{"level":3,"title":"# 5.2 启动 gateway 服务","slug":"_5-2-启动-gateway-服务","link":"#_5-2-启动-gateway-服务","children":[]},{"level":3,"title":"# 5.3 启动 system 服务","slug":"_5-3-启动-system-服务","link":"#_5-3-启动-system-服务","children":[]},{"level":3,"title":"# 5.3 启动 infra 服务","slug":"_5-3-启动-infra-服务","link":"#_5-3-启动-infra-服务","children":[]},{"level":3,"title":"# 5.4 启动 bpm 服务","slug":"_5-4-启动-bpm-服务","link":"#_5-4-启动-bpm-服务","children":[]},{"level":3,"title":"# 5.5 启动 report 服务","slug":"_5-5-启动-report-服务","link":"#_5-5-启动-report-服务","children":[]},{"level":3,"title":"# 5.6 启动 pay 服务","slug":"_5-6-启动-pay-服务","link":"#_5-6-启动-pay-服务","children":[]},{"level":3,"title":"# 5.7 启动 mp 服务","slug":"_5-7-启动-mp-服务","link":"#_5-7-启动-mp-服务","children":[]},{"level":3,"title":"# 5.8 启动 mall 服务","slug":"_5-8-启动-mall-服务","link":"#_5-8-启动-mall-服务","children":[]}]},{"level":2,"title":"# 6. 启动前端项目【简易】","slug":"_6-启动前端项目【简易】","link":"#_6-启动前端项目【简易】","children":[]},{"level":2,"title":"# 7. 启动前端项目【完整】","slug":"_7-启动前端项目【完整】","link":"#_7-启动前端项目【完整】","children":[]},{"level":2,"title":"# 666. 彩蛋","slug":"_666-彩蛋","link":"#_666-彩蛋","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":10.13,"words":3038},"filePathRelative":"project/yudao-cloud/quick-start.md","localizedDate":"July 7, 2024"}');export{f as comp,b as data};
