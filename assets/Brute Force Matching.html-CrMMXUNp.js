import{_ as s,o as i,c as n,a}from"./app-5QVbWi7Z.js";const e={};function h(l,t){return i(),n("div",null,t[0]||(t[0]=[a(`<h2 id="_1-gioi-thieu-thuat-toan-brute-force" tabindex="-1"><a class="header-anchor" href="#_1-gioi-thieu-thuat-toan-brute-force"><span>1. Giới thiệu thuật toán Brute Force</span></a></h2><blockquote><p><strong>Thuật toán Brute Force</strong>: Thường được viết tắt là BF. Trong tiếng Việt, còn được gọi là thuật toán khớp mẫu thô, hoặc thuật toán khớp mẫu trâu bò.</p></blockquote><ul><li><strong>Ý tưởng của thuật toán BF</strong>: Cho chuỗi văn bản <code>T</code> và mẫu <code>p</code>, ta bắt đầu so sánh từ ký tự đầu tiên của chuỗi văn bản với ký tự đầu tiên của mẫu. Nếu hai ký tự này bằng nhau, ta tiếp tục so sánh các ký tự tiếp theo theo thứ tự. Nếu không bằng nhau, ta di chuyển chuỗi văn bản <code>T</code> sang ký tự tiếp theo và bắt đầu so sánh lại từ đầu mẫu <code>p</code>. Tiếp tục quá trình này cho đến khi so sánh thành công tất cả các ký tự của mẫu <code>p</code> với một chuỗi con liên tiếp trong chuỗi văn bản <code>T</code>, thì ta xác định rằng mẫu <code>p</code> xuất hiện trong chuỗi văn bản <code>T</code>. Ngược lại, nếu không thành công, ta kết luận rằng mẫu <code>p</code> không xuất hiện trong chuỗi văn bản <code>T</code>.</li></ul><figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230929210759.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="_2-cac-buoc-thuc-hien-thuat-toan-brute-force" tabindex="-1"><a class="header-anchor" href="#_2-cac-buoc-thuc-hien-thuat-toan-brute-force"><span>2. Các bước thực hiện thuật toán Brute Force</span></a></h2><ol><li>Cho chuỗi văn bản <code>T</code> và mẫu <code>p</code>, tính độ dài của chuỗi văn bản <code>T</code> là <code>n</code> và độ dài của mẫu <code>p</code> là <code>m</code>.</li><li>Dùng hai con trỏ <code>i</code> và <code>j</code> để duyệt qua chuỗi văn bản <code>T</code> và mẫu <code>p</code>. Bắt đầu so sánh ký tự <code>T[i]</code> với ký tự <code>p[j]</code>. <ul><li>Nếu hai ký tự này bằng nhau, tiếp tục so sánh <code>T[i+1]</code> với <code>p[j+1]</code>. Tiếp tục quá trình này cho đến khi so sánh thành công tất cả các ký tự của mẫu <code>p</code>.</li><li>Nếu hai ký tự này không bằng nhau, di chuyển con trỏ <code>i</code> về vị trí bắt đầu của lần so sánh trước đó và con trỏ <code>j</code> về vị trí đầu tiên của mẫu <code>p</code>.</li></ul></li><li>Khi duyệt qua toàn bộ chuỗi văn bản <code>T</code> hoặc mẫu <code>p</code>, dừng quá trình tìm kiếm.</li></ol><h2 id="_3-cai-đat-thuat-toan-brute-force" tabindex="-1"><a class="header-anchor" href="#_3-cai-đat-thuat-toan-brute-force"><span>3. Cài đặt thuật toán Brute Force</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> bruteForce</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    n, m </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> len</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(T), </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(p)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    i, j </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                     # i là vị trí hiện tại trong chuỗi văn bản T, j là vị trí hiện tại trong mẫu p</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> n </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> m:          </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Khi i hoặc j đạt đến cuối chuỗi, dừng tìm kiếm</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> T[i] </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> p[j]:            </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Nếu hai ký tự bằng nhau, tiếp tục so sánh ký tự tiếp theo</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            i </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            j </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        else</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            i </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (j </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)         </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Nếu không bằng nhau, di chuyển i đến vị trí bắt đầu của lần so sánh trước đó</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            j </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                   # Đặt j về vị trí đầu tiên của mẫu p</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> m:</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> j                </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Nếu tìm thấy mẫu, trả về vị trí bắt đầu của mẫu</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    else</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                   # Nếu không tìm thấy mẫu, trả về -1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-phan-tich-thuat-toan-brute-force" tabindex="-1"><a class="header-anchor" href="#_4-phan-tich-thuat-toan-brute-force"><span>4. Phân tích thuật toán Brute Force</span></a></h2><p>Thuật toán BF rất đơn giản và dễ hiểu, nhưng hiệu suất của nó rất thấp. Điều này chủ yếu do trong quá trình so sánh có thể xảy ra quay lui: khi gặp một cặp ký tự không khớp, mẫu <code>p</code> quay trở lại vị trí ban đầu và chuỗi văn bản <code>T</code> cũng quay trở lại vị trí bắt đầu của lần so sánh trước đó, sau đó tiếp tục so sánh lại từ đầu mẫu <code>p</code>.</p><p>Sau khi quay lui, một số phần của chuỗi văn bản và mẫu không cần thiết phải so sánh lại. Do chiến lược này, hiệu suất của thuật toán BF rất thấp. Trường hợp xấu nhất là mỗi lần so sánh đều không khớp ở cuối mẫu <code>p</code>, mỗi lần so sánh cần thực hiện <code>m</code> lần, tổng số lần so sánh là <code>m * (n - m + 1)</code>. Vì vậy, độ phức tạp thời gian xấu nhất của thuật toán BF là <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo>×</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m \\times n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</p><p>Trong trường hợp tốt nhất (khớp mẫu ngay lần so sánh đầu tiên), độ phức tạp thời gian tốt nhất của thuật toán BF là <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>.</p><p>Trong trường hợp trung bình, dựa trên nguyên lý xác suất bình đẳng, số lần so sánh trung bình là <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\\frac{(n + m)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>, vì vậy độ phức tạp thời gian trung bình của thuật toán BF là <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n + m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>.</p>`,13)]))}const p=s(e,[["render",h],["__file","Brute Force Matching.html.vue"]]),o=JSON.parse('{"path":"/dsa/algo/string/spm/Brute%20Force%20Matching.html","title":"String Brute Force","lang":"en-US","frontmatter":{"title":"String Brute Force","tags":["dsa","algorithm"],"categories":["dsa","algorithm"],"date created":"2023-09-29T00:00:00.000Z","date modified":"2023-09-29T00:00:00.000Z","description":"1. Giới thiệu thuật toán Brute Force Thuật toán Brute Force: Thường được viết tắt là BF. Trong tiếng Việt, còn được gọi là thuật toán khớp mẫu thô, hoặc thuật toán khớp mẫu trâu...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/dsa/algo/string/spm/Brute%20Force%20Matching.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"String Brute Force"}],["meta",{"property":"og:description","content":"1. Giới thiệu thuật toán Brute Force Thuật toán Brute Force: Thường được viết tắt là BF. Trong tiếng Việt, còn được gọi là thuật toán khớp mẫu thô, hoặc thuật toán khớp mẫu trâu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230929210759.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"dsa"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"String Brute Force\\",\\"image\\":[\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230929210759.png\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. Giới thiệu thuật toán Brute Force","slug":"_1-gioi-thieu-thuat-toan-brute-force","link":"#_1-gioi-thieu-thuat-toan-brute-force","children":[]},{"level":2,"title":"2. Các bước thực hiện thuật toán Brute Force","slug":"_2-cac-buoc-thuc-hien-thuat-toan-brute-force","link":"#_2-cac-buoc-thuc-hien-thuat-toan-brute-force","children":[]},{"level":2,"title":"3. Cài đặt thuật toán Brute Force","slug":"_3-cai-đat-thuat-toan-brute-force","link":"#_3-cai-đat-thuat-toan-brute-force","children":[]},{"level":2,"title":"4. Phân tích thuật toán Brute Force","slug":"_4-phan-tich-thuat-toan-brute-force","link":"#_4-phan-tich-thuat-toan-brute-force","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":3.48,"words":1043},"filePathRelative":"dsa/algo/string/spm/Brute Force Matching.md","localizedDate":"June 28, 2024","excerpt":"<h2>1. Giới thiệu thuật toán Brute Force</h2>\\n<blockquote>\\n<p><strong>Thuật toán Brute Force</strong>: Thường được viết tắt là BF. Trong tiếng Việt, còn được gọi là thuật toán khớp mẫu thô, hoặc thuật toán khớp mẫu trâu bò.</p>\\n</blockquote>\\n<ul>\\n<li><strong>Ý tưởng của thuật toán BF</strong>: Cho chuỗi văn bản <code>T</code> và mẫu <code>p</code>, ta bắt đầu so sánh từ ký tự đầu tiên của chuỗi văn bản với ký tự đầu tiên của mẫu. Nếu hai ký tự này bằng nhau, ta tiếp tục so sánh các ký tự tiếp theo theo thứ tự. Nếu không bằng nhau, ta di chuyển chuỗi văn bản <code>T</code> sang ký tự tiếp theo và bắt đầu so sánh lại từ đầu mẫu <code>p</code>. Tiếp tục quá trình này cho đến khi so sánh thành công tất cả các ký tự của mẫu <code>p</code> với một chuỗi con liên tiếp trong chuỗi văn bản <code>T</code>, thì ta xác định rằng mẫu <code>p</code> xuất hiện trong chuỗi văn bản <code>T</code>. Ngược lại, nếu không thành công, ta kết luận rằng mẫu <code>p</code> không xuất hiện trong chuỗi văn bản <code>T</code>.</li>\\n</ul>","autoDesc":true}');export{p as comp,o as data};
