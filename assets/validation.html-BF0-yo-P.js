import{_ as s,o as a,c as n,a as t}from"./app-CmlOSuIY.js";const h={};function l(e,i){return a(),n("div",null,i[0]||(i[0]=[t(`<h1 id="spring-boot-validation" tabindex="-1"><a class="header-anchor" href="#spring-boot-validation"><span>Spring Boot Validation</span></a></h1><hr><blockquote><p>Bài viết này cung cấp mã nguồn đầy đủ, có thể xem tại <a href="https://github.com/YunaiV/SpringBoot-Labs" target="_blank" rel="noopener noreferrer">https://github.com/YunaiV/SpringBoot-Labs</a> trong thư mục <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22" target="_blank" rel="noopener noreferrer">lab-22</a>.</p><p>Việc viết nội dung gốc không hề dễ dàng, hãy cho mình một <a href="https://github.com/YunaiV/SpringBoot-Labs/stargazers" target="_blank" rel="noopener noreferrer">Star</a> nhé, cùng nhau phát triển nào!</p></blockquote><h1 id="_1-tong-quan" tabindex="-1"><a class="header-anchor" href="#_1-tong-quan"><span>1. Tổng Quan</span></a></h1><blockquote><p>Khi nghĩ về tiêu đề, mình đã rất phân vân liệu nên gọi là <strong>kiểm tra dữ liệu</strong> hay <strong>kiểm tra tham số</strong>.</p><p>Cuối cùng, mình chọn <strong>kiểm tra tham số</strong> vì nó gần gũi hơn với hiểu biết của chúng ta. Thực tế, cách gọi chính xác hơn vẫn là <strong>kiểm tra dữ liệu</strong>.</p><p>Đầu bài, mình đã lảm nhảm một số điều không quan trọng, những ai không thích có thể bỏ qua <a href="#">「3. Hướng Dẫn Nhanh」</a>.</p></blockquote><p>Khi chúng ta muốn cung cấp API đáng tin cậy, việc kiểm tra các tham số là <strong>không thể thiếu</strong> để đảm bảo rằng dữ liệu cuối cùng được nhập vào cơ sở dữ liệu là chính xác. Ví dụ, khi người dùng đăng ký, hệ thống sẽ kiểm tra tính hợp lệ của số điện thoại và đảm bảo mật khẩu không phải là mật khẩu yếu.</p><p>Thật tiếc, khi mở dự án của mình ra, ta sẽ phát hiện ra rằng có rất nhiều API mà chúng ta không thêm kiểm tra tham số tương ứng, mà để việc này cho phía gọi (chẳng hạn như phía frontend) hoàn thành. 😈 Thậm chí, trong các dự án phát triển backend mà mình đã tham gia, có người còn cho rằng đây là việc của frontend, thật đáng tiếc!</p><p>Thế giới không an toàn như chúng ta tưởng, có thể sẽ có &quot;hacker&quot; vượt qua trình duyệt, trực tiếp sử dụng công cụ HTTP, mô phỏng yêu cầu gửi các tham số không hợp lệ tới API backend để đạt được mục đích &quot;không thể tiết lộ&quot; của họ.</p><p>Hoặc là có thể, một lập trình viên frontend vô tình quên thực hiện một số kiểm tra tham số khi gọi API, dẫn đến việc người dùng gửi một lượng lớn dữ liệu không chính xác tới API backend, và những dữ liệu này <strong>được</strong> lưu vào cơ sở dữ liệu. Khi đó, bạn sẽ đổ lỗi cho lập trình viên frontend, hay sẽ chửi bới cô kiểm thử vì không làm tốt công việc của mình?</p><p>Mình tin rằng, nhiều khi không phải là chúng ta không muốn thêm kiểm tra, mà là không có một cách thống nhất và thuận tiện để nhanh chóng thêm chức năng kiểm tra tham số. Dù sao, so với các thao tác CRUD nhàm chán, việc này còn nhàm chán hơn. Ví dụ, chỉ cần nói đến API đăng ký người dùng, kiểm tra số điện thoại và mật khẩu hai tham số này có thể tiêu tốn của bạn đến gần 10 dòng mã. Chưa kể đến, các API trong quản lý backend tạo sản phẩm có rất nhiều tham số.</p><p>😈 Hầu hết các khó khăn mà chúng ta gặp phải trên thế giới đều đã có giải pháp, đặc biệt là trong phát triển phần mềm. Thực tế, Java đã đưa ra tiêu chuẩn <a href="https://beanvalidation.org/specification/" target="_blank" rel="noopener noreferrer">Bean Validation</a> từ năm 2009 và đã trải qua ba lần chuẩn hóa JSR303, JSR349, JSR380, phát triển lên phiên bản <strong>2.0</strong>.</p><blockquote><p>FROM <a href="https://beanvalidation.org/specification/" target="_blank" rel="noopener noreferrer">https://beanvalidation.org/specification/</a></p><p><strong>Bean Validation 1.0</strong> ：Bean Validation 1.0 (JSR <a href="https://www.jcp.org/en/jsr/detail?id=303" target="_blank" rel="noopener noreferrer">303</a>) was the first version of Java&#39;s standard for object validation. It was released in 2009 and is part of Java EE 6. You can learn more about Bean Validation 1.0 <a href="https://beanvalidation.org/1.0/" target="_blank" rel="noopener noreferrer">here</a> (specification text, API docs etc).</p><p><strong>Bean Validation 1.1</strong> ：Bean Validation 1.1 (<a href="https://www.jcp.org/en/jsr/detail?id=349" target="_blank" rel="noopener noreferrer">JSR 349</a>) was finished in 2013 and is part of Java EE 7. Its main contributions are method-level validation, integration with CDI, group conversion and some more. You can learn more about Bean Validation 1.1 <a href="https://beanvalidation.org/1.1/" target="_blank" rel="noopener noreferrer">here</a> (specification text, full change log, API docs etc).</p><p><strong>Bean Validation 2.0</strong> ：Bean Validation 2.0 (<a href="https://www.jcp.org/en/jsr/detail?id=380" target="_blank" rel="noopener noreferrer">JSR 380</a>) was finished in August 2017.</p><p>It&#39;s part of Java EE 8 (but can of course be used with plain Java SE as the previous releases).</p><p>You can learn more about Bean Validation 2.0 <a href="https://beanvalidation.org/2.0/" target="_blank" rel="noopener noreferrer">here</a> (specification text, full change log, API docs etc).</p></blockquote><p>Bean Validation và JPA mà chúng ta đã học trước đây đều giống nhau ở chỗ chỉ cung cấp các tiêu chuẩn mà không cung cấp các triển khai cụ thể.</p><blockquote><p><strong>Note</strong>: Đối với những ai chưa biết về JPA, có thể tham khảo bài viết <a href="./jpa">Spring Boot JPA</a>.</p></blockquote><ul><li>Trong <a href="https://mvnrepository.com/artifact/javax.validation/validation-api" target="_blank" rel="noopener noreferrer">Bean Validation API</a>, đã định nghĩa các interface liên quan đến Bean Validation nhưng không có triển khai cụ thể.</li><li>Trong gói <a href="https://github.com/eclipse-ee4j/beanvalidation-api/tree/master/src/main/java/javax/validation/constraints" target="_blank" rel="noopener noreferrer"><code>javax.validation.constraints</code></a>, đã định nghĩa một loạt các chú thích kiểm tra. Ví dụ như, <a href="https://github.com/eclipse-ee4j/beanvalidation-api/blob/master/src/main/java/javax/validation/constraints/NotNull.java" target="_blank" rel="noopener noreferrer"><code>@NotNull</code></a>, <a href="https://github.com/eclipse-ee4j/beanvalidation-api/blob/master/src/main/java/javax/validation/constraints/NotEmpty.java" target="_blank" rel="noopener noreferrer"><code>@NotEmpty</code></a>.</li></ul><p>Các framework chính để thực hiện tiêu chuẩn kiểm tra dữ liệu Bean Validation bao gồm:</p><ul><li><p><strong><a href="https://hibernate.org/validator/" target="_blank" rel="noopener noreferrer">Hibernate Validator</a></strong></p><blockquote><p>Đừng nghĩ rằng Hibernate chỉ là một framework ORM; đó chỉ là những gì <a href="https://hibernate.org/orm" target="_blank" rel="noopener noreferrer">Hibernate ORM</a> cung cấp.</p><p>Hibernate thực sự mang slogan “Everything data”, nó còn cung cấp các giải pháp như <a href="https://hibernate.org/" target="_blank" rel="noopener noreferrer">Hibernate Search</a> và <a href="https://hibernate.org/ogm" target="_blank" rel="noopener noreferrer">Hibernate OGM</a> nữa. 😈</p><p>Vậy nên, bạn gái cũng là dữ liệu, chỉ cần <code>new</code> một cái là đủ, không cần phải tìm kiếm.</p></blockquote></li></ul><p><strong>Trong hầu hết các trường hợp, có lẽ là 99.99%, chúng ta sẽ sử dụng Hibernate Validator.</strong></p><p>Tuy nhiên, trong các dự án sử dụng Spring, do <a href="https://github.com/spring-projects/spring-framework/tree/master/spring-context/src/main/java/org/springframework/validation" target="_blank" rel="noopener noreferrer">Spring Validation</a> cung cấp hỗ trợ đóng gói sẵn cho Bean Validation, nên chúng ta có thể sử dụng chú thích <a href="https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/validation/annotation/Validated.java" target="_blank" rel="noopener noreferrer"><code>@Validated</code></a> để thực hiện <strong>kiểm tra khai báo</strong> mà không cần gọi trực tiếp các phương thức API do Bean Validation cung cấp. Về nguyên lý thực hiện, điều này cũng dựa trên việc chặn AOP của Spring để thực hiện các thao tác liên quan đến kiểm tra.</p><blockquote><p><strong>Lưu ý:</strong> Điều này tương tự như Spring Transaction, thông qua chú thích <code>@Transactional</code> để thực hiện giao dịch khai báo.</p></blockquote><p>Cuối cùng, trong Spring Validation, vẫn gọi các framework thực hiện Bean Validation khác nhau, ví dụ như Hibernate Validator.</p><p>Bây giờ, hãy cùng nhau khám phá cách thực hiện kiểm tra tham số trong Spring Boot.</p><h1 id="_2-chu-thich" tabindex="-1"><a class="header-anchor" href="#_2-chu-thich"><span>2. Chú Thích</span></a></h1><p>Trước khi bắt đầu, hãy cùng tìm hiểu về các chú thích mà bài viết này sẽ đề cập đến.</p><h2 id="_2-1-chu-thich-rang-buoc-đuoc-đinh-nghia-boi-bean-validation" tabindex="-1"><a class="header-anchor" href="#_2-1-chu-thich-rang-buoc-đuoc-đinh-nghia-boi-bean-validation"><span>2.1 Chú Thích Ràng Buộc Được Định Nghĩa Bởi Bean Validation</span></a></h2><p>Trong gói <a href="https://github.com/eclipse-ee4j/beanvalidation-api/tree/master/src/main/java/javax/validation/constraints" target="_blank" rel="noopener noreferrer"><code>javax.validation.constraints</code></a>, có một loạt các chú thích ràng buộc (constraint annotations) được định nghĩa. Dưới đây là danh sách nhanh chóng:</p><blockquote><p>Tham khảo bài viết <a href="https://www.ibm.com/developerworks/cn/java/j-lo-jsr303/index.html" target="_blank" rel="noopener noreferrer">《JSR 303 - Giới Thiệu và Thực Hành Tốt Nhất Về Bean Validation》</a>.</p></blockquote><p>Tổng cộng có 22 chú thích, chúng ta sẽ điểm qua nhanh.</p><h3 id="kiem-tra-rong-va-khong-rong" tabindex="-1"><a class="header-anchor" href="#kiem-tra-rong-va-khong-rong"><span>Kiểm Tra Rỗng và Không Rỗng</span></a></h3><ul><li><code>@NotBlank</code>: Chỉ áp dụng cho chuỗi không được là <code>null</code> và chiều dài của chuỗi sau khi gọi <code>#trim()</code> phải lớn hơn 0.</li><li><code>@NotEmpty</code>: Số lượng phần tử của tập hợp không được là 0, tức là tập hợp không rỗng. Cũng có thể áp dụng cho chuỗi không được là <code>null</code>.</li><li><code>@NotNull</code>: Không được là <code>null</code>.</li><li><code>@Null</code>: Phải là <code>null</code>.</li></ul><h3 id="kiem-tra-so" tabindex="-1"><a class="header-anchor" href="#kiem-tra-so"><span>Kiểm Tra Số</span></a></h3><ul><li><code>@DecimalMax(value)</code>: Phần tử được chú thích phải là một số và giá trị của nó phải nhỏ hơn hoặc bằng giá trị tối đa chỉ định.</li><li><code>@DecimalMin(value)</code>: Phần tử được chú thích phải là một số và giá trị của nó phải lớn hơn hoặc bằng giá trị tối thiểu chỉ định.</li><li><code>@Digits(integer, fraction)</code>: Phần tử được chú thích phải là một số và giá trị của nó phải trong phạm vi chấp nhận.</li><li><code>@Positive</code>: Kiểm tra số dương.</li><li><code>@PositiveOrZero</code>: Kiểm tra số dương hoặc 0.</li><li><code>@Max(value)</code>: Giá trị của trường này chỉ được nhỏ hơn hoặc bằng giá trị chỉ định.</li><li><code>@Min(value)</code>: Giá trị của trường này chỉ được lớn hơn hoặc bằng giá trị chỉ định.</li><li><code>@Negative</code>: Kiểm tra số âm.</li><li><code>@NegativeOrZero</code>: Kiểm tra số âm hoặc 0.</li></ul><h3 id="kiem-tra-gia-tri-boolean" tabindex="-1"><a class="header-anchor" href="#kiem-tra-gia-tri-boolean"><span>Kiểm Tra Giá Trị Boolean</span></a></h3><ul><li><code>@AssertFalse</code>: Phần tử được chú thích phải là <code>true</code>.</li><li><code>@AssertTrue</code>: Phần tử được chú thích phải là <code>false</code>.</li></ul><h3 id="kiem-tra-đo-dai" tabindex="-1"><a class="header-anchor" href="#kiem-tra-đo-dai"><span>Kiểm Tra Độ Dài</span></a></h3><ul><li><code>@Size(max, min)</code>: Kiểm tra kích thước của trường này có nằm trong khoảng giữa <code>min</code> và <code>max</code> hay không, có thể áp dụng cho chuỗi, mảng, tập hợp, Map, v.v.</li></ul><h3 id="kiem-tra-ngay" tabindex="-1"><a class="header-anchor" href="#kiem-tra-ngay"><span>Kiểm Tra Ngày</span></a></h3><ul><li><code>@Future</code>: Phần tử được chú thích phải là một ngày trong tương lai.</li><li><code>@FutureOrPresent</code>: Kiểm tra ngày có phải là ngày trong tương lai hoặc hiện tại không.</li><li><code>@Past</code>: Kiểm tra ngày của trường này có phải là ngày trong quá khứ không.</li><li><code>@PastOrPresent</code>: Kiểm tra ngày có phải là ngày trong quá khứ hoặc hiện tại không.</li></ul><h3 id="kiem-tra-khac" tabindex="-1"><a class="header-anchor" href="#kiem-tra-khac"><span>Kiểm Tra Khác</span></a></h3><ul><li><code>@Email</code>: Phần tử được chú thích phải là một địa chỉ email hợp lệ.</li><li><code>@Pattern(value)</code>: Phần tử được chú thích phải phù hợp với biểu thức chính quy chỉ định.</li></ul><h2 id="_2-2-cac-chu-thich-rang-buoc-bo-sung-tu-hibernate-validator" tabindex="-1"><a class="header-anchor" href="#_2-2-cac-chu-thich-rang-buoc-bo-sung-tu-hibernate-validator"><span>2.2 Các Chú Thích Ràng Buộc Bổ Sung Từ Hibernate Validator</span></a></h2><p>Trong gói <a href="https://github.com/hibernate/hibernate-validator/tree/master/engine/src/main/java/org/hibernate/validator/constraints" target="_blank" rel="noopener noreferrer"><code>org.hibernate.validator.constraints</code></a>, có một loạt các chú thích ràng buộc (constraint annotations) bổ sung được định nghĩa. Dưới đây là một số chú thích quan trọng:</p><ul><li><code>@Range(min=, max=)</code>: Phần tử được chú thích phải nằm trong một phạm vi hợp lý.</li><li><code>@Length(min=, max=)</code>: Kích thước của chuỗi được chú thích phải nằm trong phạm vi chỉ định.</li><li><code>@URL(protocol=,host=,port=,regexp=,flags=)</code>: Chuỗi được chú thích phải là một URL hợp lệ.</li><li><code>@SafeHtml</code>: Kiểm tra xem HTML gửi lên có an toàn không, ví dụ như không được chứa script JavaScript.</li><li>... và nhiều chú thích khác nữa.</li></ul><h2 id="_2-3-valid-va-validated" tabindex="-1"><a class="header-anchor" href="#_2-3-valid-va-validated"><span>2.3 @Valid và @Validated</span></a></h2><p>Chú thích <a href="https://docs.oracle.com/javaee/7/api/javax/validation/Valid.html" target="_blank" rel="noopener noreferrer"><code>@Valid</code></a> được định nghĩa bởi Bean Validation, có thể được thêm vào các phương thức thông thường, phương thức khởi tạo, tham số phương thức, giá trị trả về và biến thành viên, cho biết rằng chúng cần được kiểm tra ràng buộc.</p><p>Chú thích <a href="https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/validation/annotation/Validated.java" target="_blank" rel="noopener noreferrer"><code>@Validated</code></a> được định nghĩa bởi Spring Validation, có thể được thêm vào lớp, tham số phương thức và phương thức thông thường, cho biết rằng chúng cần được kiểm tra ràng buộc. Đồng thời, <code>@Validated</code> có thuộc tính <code>value</code>, hỗ trợ kiểm tra theo nhóm. Các thuộc tính như sau:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// Validated.java</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Class</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">[] </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">value</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">() </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">default</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> {}</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>Đối với những bạn mới học, rất dễ bị nhầm lẫn giữa chú thích <code>@Valid</code> và <code>@Validated</code>.</p><p><strong>① Kiểm Tra Khai Báo</strong></p><p>Spring Validation <strong>chỉ</strong> sử dụng chú thích <code>@Validated</code> để thực hiện kiểm tra khai báo.</p><p><strong>② Kiểm Tra Theo Nhóm</strong></p><p>Chú thích <code>@Valid</code> do Bean Validation cung cấp không có thuộc tính kiểm tra theo nhóm, vì vậy không thể cung cấp kiểm tra theo nhóm. Trong trường hợp này, chỉ có thể sử dụng chú thích <code>@Validated</code>.</p><p><strong>③ Kiểm Tra Lồng Nhau</strong></p><p>Chú thích <code>@Valid</code> có thêm khả năng kiểm tra thành viên biến. Điều này có nghĩa là, khi có các đối tượng lồng nhau, chỉ có thể sử dụng chú thích <code>@Valid</code>. Ví dụ:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// User.java</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> User</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Valid</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserProfile</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> profile</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserProfile.java  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserProfile</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">NotBlank</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> nickname</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><ul><li>Nếu không thêm chú thích <code>@Valid</code> vào thuộc tính <code>User.profile</code>, thì thuộc tính <code>UserProfile.nickname</code> sẽ không được kiểm tra.</li></ul><p>Chú thích <code>@Valid</code> cũng có thể được sử dụng cho các phương thức khởi tạo và giá trị trả về. Do đó, trong những trường hợp cần thiết, chỉ có thể sử dụng chú thích <code>@Valid</code>.</p><p><strong>🔥 Tóm Tắt</strong></p><p>Trong hầu hết các trường hợp, chúng ta có thể sử dụng chú thích <code>@Validated</code>.</p><p>Trong trường hợp kiểm tra lồng nhau, chúng ta sẽ sử dụng chú thích <code>@Valid</code> cho các thuộc tính thành viên.</p><h1 id="_3-quick-start" tabindex="-1"><a class="header-anchor" href="#_3-quick-start"><span>3. Quick Start</span></a></h1><blockquote><p>Mã ví dụ tương ứng với kho lưu trữ: <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01" target="_blank" rel="noopener noreferrer">lab-22-validation-01</a>.</p></blockquote><p>Trong phần này, chúng ta sẽ thực hiện việc kiểm tra tham số của API trong Controller của SpringMVC trong Spring Boot.</p><p>Ngoài ra, vì chúng ta cũng sẽ cần kiểm tra tham số trong Service, nên chúng tôi sẽ cung cấp ví dụ cho điều đó.</p><h2 id="_3-1-nhap-phu-thuoc" tabindex="-1"><a class="header-anchor" href="#_3-1-nhap-phu-thuoc"><span>3.1 Nhập phụ thuộc</span></a></h2><p>Trong tệp <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/pom.xml" target="_blank" rel="noopener noreferrer"><code>pom.xml</code></a>, chúng ta sẽ thêm các thư viện cần thiết cho dự án.</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;?</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">xml</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> version</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;1.0&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> encoding</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">?&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;http://maven.apache.org/POM/4.0.0&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">         xmlns:xsi</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">         xsi:schemaLocation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">parent</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-parent&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;2.1.3.RELEASE&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">relativePath</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt; </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;!-- lookup parent from repository --&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">parent</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;4.0.0&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;lab-22-validation-01&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        &lt;!-- Thực hiện cấu hình tự động cho Spring MVC --&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-web&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        &lt;!-- Đảm bảo các gói liên quan đến Spring AOP --&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-aspects&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        &lt;!-- Thuận tiện cho việc viết kiểm thử đơn vị sau này --&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-test&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;test&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Bạn nên xem kỹ các chú thích mà tác giả đã thêm để hiểu rõ chức năng của từng thư viện.</li><li>Thư viện <a href="https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web" target="_blank" rel="noopener noreferrer"><code>spring-boot-starter-web</code></a> đã tự động nhập thư viện <a href="https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator" target="_blank" rel="noopener noreferrer"><code>hibernate-validator</code></a>, vì vậy ví dụ này sử dụng Hibernate Validator như là khung thực hiện cho Bean Validation.</li></ul><p>Trong hệ thống Spring Boot, cũng có thư viện <a href="https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation" target="_blank" rel="noopener noreferrer"><code>spring-boot-starter-validation</code></a>. Tuy nhiên, trong ví dụ này, chúng ta không nhập thư viện đó. Tại sao? Vì thư viện này chủ yếu cũng chỉ để nhập thư viện <code>hibernate-validator</code>, mà thư viện này đã được nhập trong <code>spring-boot-starter-web</code>, nên không cần phải nhập lại.</p><h2 id="_3-2-application" tabindex="-1"><a class="header-anchor" href="#_3-2-application"><span>3.2 Application</span></a></h2><p>Tạo lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/Application.java" target="_blank" rel="noopener noreferrer"><code>Application.java</code></a> và cấu hình chú thích <code>@SpringBootApplication</code>. Mã nguồn như sau:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">SpringBootApplication</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">EnableAspectJAutoProxy</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">exposeProxy</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// http://www.voidcn.com/article/p-zddcuyii-bpt.html  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Application</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Application</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, args);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><ul><li>Chúng ta thêm chú thích <code>@EnableAspectJAutoProxy</code>, với tham số <code>exposeProxy = true</code>, để Spring AOP có thể thiết lập đối tượng proxy hiện tại vào <a href="https://github.com/spring-projects/spring-framework/blob/master/spring-aop/src/main/java/org/springframework/aop/framework/AopContext.java" target="_blank" rel="noopener noreferrer">AopContext</a>. Chúng ta sẽ thấy công dụng của nó trong các phần sau. Nếu bạn muốn tìm hiểu trước, có thể tham khảo bài viết <a href="http://www.voidcn.com/article/p-zddcuyii-bpt.html" target="_blank" rel="noopener noreferrer">《Spring AOP 通过获取代理对象实现事务切换》</a>.</li></ul><p>Hiện tại chưa khởi động dự án. Hãy chờ cho đến khi chúng ta thêm Controller.</p><h2 id="_3-3-useradddto" tabindex="-1"><a class="header-anchor" href="#_3-3-useradddto"><span>3.3 UserAddDTO</span></a></h2><p>Trong thư mục <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/dto" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.dto</code></a>, tạo lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/dto/UserAddDTO.java" target="_blank" rel="noopener noreferrer">UserAddDTO</a> để thêm thông tin người dùng. Mã nguồn như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserAddDTO.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserAddDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Tài khoản  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">NotEmpty</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Tài khoản không được để trống&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Length</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">min</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> max</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Độ dài tài khoản phải từ 5-16 ký tự&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Pattern</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">regexp</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;^[A-Za-z0-9]+$&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Định dạng tài khoản chỉ chứa số và chữ cái&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> username</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Mật khẩu  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">NotEmpty</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Mật khẩu không được để trống&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Length</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">min</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> max</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Độ dài mật khẩu phải từ 4-16 ký tự&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> password</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">      </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // ... Bỏ qua phương thức setter/getter  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mỗi trường dữ liệu có các chú thích ràng buộc, bạn nên chú ý để hiểu rõ cách hoạt động của chúng.</p><h2 id="_3-4-usercontroller" tabindex="-1"><a class="header-anchor" href="#_3-4-usercontroller"><span>3.4 UserController</span></a></h2><p>Trong thư mục <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/controller" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.controller</code></a>, tạo lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/controller/UserController.java" target="_blank" rel="noopener noreferrer">UserController</a> để cung cấp API cho người dùng. Mã nguồn như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserController.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">RestController</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">RequestMapping</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/users&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Validated</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserController</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Logger</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> logger </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> LoggerFactory</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getLogger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getClass</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">GetMapping</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/get&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> get</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">RequestParam</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;id&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Min</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 1L</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Mã số phải lớn hơn 0&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> id</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[get][id: {}]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, id);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">PostMapping</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/add&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Valid</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> addDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[add][addDTO: {}]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, addDTO);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Trong lớp này, chúng ta thêm chú thích <code>@Validated</code>, cho biết rằng tất cả các API của <code>UserController</code> đều cần thực hiện kiểm tra tham số.</p></li><li><p>Đối với phương thức <code>#get(id)</code>, chúng ta đã thêm chú thích <code>@Min</code> cho tham số <code>id</code>, yêu cầu rằng <code>id</code> phải lớn hơn 0. Nếu kiểm tra không thành công, ví dụ lỗi sẽ như hình sau:<br><img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/01.jpg" alt="Không qua ví dụ 1" loading="lazy"></p></li><li><p>Đối với phương thức <code>#add(addDTO)</code>, chúng ta đã thêm chú thích <code>@Valid</code> cho tham số <code>addDTO</code>, để thực hiện kiểm tra tham số này. Nếu kiểm tra không thành công, ví dụ lỗi sẽ như hình sau:<br><img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/02.jpg" alt="Không qua ví dụ 2" loading="lazy"></p><ul><li>Trường <code>errors</code> chứa <strong>mảng</strong> chi tiết lỗi tham số. Mỗi phần tử trong mảng tương ứng với một chi tiết lỗi tham số. Ở đây, <code>username</code> vi phạm độ dài không thoả mãn <code>[5, 16]</code>.</li></ul></li></ul><p>Chúng ta đã thành công chạy ví dụ, nhưng có một số điểm khác biệt mà chúng ta cần hiểu.</p><blockquote><p><strong>Chú thích</strong>: Giải thích có thể hơi dài, nhưng hãy kiên nhẫn nhé.</p></blockquote><p><strong>Điểm thứ nhất</strong>, tại phương thức <code>#get(id)</code>, chúng ta không cần thêm chú thích <code>@Valid</code> cho <code>id</code>, trong khi phương thức <code>#add(addDTO)</code> thì có. Tại sao lại có sự khác biệt này?</p><p>Vì <code>UserController</code> đã sử dụng chú thích <code>@Validated</code>, Spring Validation sẽ sử dụng AOP để cắt lớp và kiểm tra tham số. Bộ lọc cắt lớp này sử dụng <a href="https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationInterceptor.java" target="_blank" rel="noopener noreferrer">MethodValidationInterceptor</a>.</p><ul><li>Đối với phương thức <code>#get(id)</code>, tham số <code>id</code> là <strong>phẳng</strong>, vì vậy không cần thêm chú thích <code>@Valid</code>.</li><li>Đối với phương thức <code>#add(addDTO)</code>, tham số <code>addDTO</code> thực sự giống như <strong>kiểm tra lồng nhau</strong>, vì các tham số cần kiểm tra đều nằm trong <code>addDTO</code>, do đó cần thêm chú thích <code>@Valid</code>.</li></ul><p><strong>Điểm thứ hai</strong>, kết quả trả về của phương thức <code>#get(id)</code> là <code>status = 500</code>, trong khi phương thức <code>#add(addDTO)</code> là <code>status = 400</code>.</p><ul><li>Đối với phương thức <code>#get(id)</code>, trong bộ lọc MethodValidationInterceptor, khi phát hiện tham số không chính xác, sẽ ném ra ngoại lệ <a href="https://github.com/eclipse-ee4j/beanvalidation-api/blob/master/src/main/java/javax/validation/ConstraintViolationException.java" target="_blank" rel="noopener noreferrer">ConstraintViolationException</a>.</li><li>Đối với phương thức <code>#add(addDTO)</code>, vì <code>addDTO</code> là một đối tượng POJO, nó sẽ đi qua cơ chế <a href="https://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/validation.html#validation-binder" target="_blank" rel="noopener noreferrer">DataBinder</a> của SpringMVC, gọi phương thức <code>DataBinder#validate(Object... validationHints)</code> để thực hiện kiểm tra. Khi kiểm tra không thành công, sẽ ném ra ngoại lệ <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/validation/BindException.html" target="_blank" rel="noopener noreferrer">BindException</a>.</li></ul><p>Trong SpringMVC, mặc định sử dụng <a href="https://hyrepo.com/tech/spring-mvc-error-handling/" target="_blank" rel="noopener noreferrer">DefaultHandlerExceptionResolver</a> để xử lý ngoại lệ.</p><ul><li>Đối với ngoại lệ <code>BindException</code>, nó sẽ được xử lý thành mã trạng thái 400.</li><li>Đối với ngoại lệ <code>ConstraintViolationException</code>, không có xử lý đặc biệt, vì vậy sẽ xử lý thành mã trạng thái 500.</li></ul><p>Chúng ta hãy đặt một câu hỏi: Nếu phương thức <code>#add(addDTO)</code> có tham số chính xác, sau khi hoàn tất kiểm tra tham số trong DataBinder, có phải sẽ kiểm tra một lần nữa thông qua bộ lọc MethodValidationInterceptor không? Hãy suy nghĩ trong 100 mili giây...</p><p>Câu trả lời là có. Điều này sẽ dẫn đến lãng phí tài nguyên. Do đó, nếu trong lớp Controller chỉ có các phương thức kiểm tra lồng nhau như <code>#add(addDTO)</code>, thì tôi có thể không thêm chú thích <code>@Validated</code> vào lớp Controller. Như vậy, chỉ sử dụng DataBinder để kiểm tra tham số.</p><p><strong>Điểm thứ ba</strong>, cho dù là phương thức <code>#get(id)</code> hay <code>#add(addDTO)</code>, thông báo trả về đều rất không thân thiện, vậy chúng ta nên làm gì?</p><p>Có thể tham khảo <a href="http://www.iocoder.cn/Spring-Boot/SpringMVC/?self" target="_blank" rel="noopener noreferrer">《芋道 Spring Boot SpringMVC 入门》</a> về <a href="#">「5. 全局异常处理」</a> để sử dụng chú thích <code>@ExceptionHandler</code>, thực hiện xử lý ngoại lệ tùy chỉnh. Chúng ta sẽ cung cấp ví dụ cụ thể trong phần <a href="#">4. Xử lý ngoại lệ kiểm tra</a> của bài viết này.</p><h2 id="_3-5-userservice" tabindex="-1"><a class="header-anchor" href="#_3-5-userservice"><span>3.5 UserService</span></a></h2><p>So với việc thêm kiểm tra tham số trong Controller, việc thực hiện kiểm tra tham số trong Service sẽ an toàn và đáng tin cậy hơn. Theo ý kiến cá nhân của tôi, kiểm tra tham số trong Controller có thể không cần thiết, <strong>nhưng kiểm tra tham số trong Service thì nhất định phải có</strong>.</p><p>Trong thư mục <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/service" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.service</code></a>, tạo lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/service/UserService.java" target="_blank" rel="noopener noreferrer">UserService</a> để cung cấp logic Service cho người dùng. Mã nguồn như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserService.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Service</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Validated</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserService</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Logger</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> logger </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> LoggerFactory</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getLogger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getClass</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> get</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Min</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 1L</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Mã số phải lớn hơn 0&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> id</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[get][id: {}]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, id);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Valid</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> addDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[add][addDTO: {}]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, addDTO);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> add01</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> addDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(addDTO);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> add02</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> addDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">        self</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(addDTO);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserService</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> self</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (UserService) </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">AopContext</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">currentProxy</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Phương thức trong lớp này giống như trong <code>UserController</code>, bao gồm các chú thích tương tự.</li><li>Chúng ta thêm các phương thức <code>#add01(addDTO)</code> và <code>#add02(addDTO)</code> để minh họa cho việc gọi phương thức bên trong.</li></ul><p>Tạo lớp kiểm thử <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/test/java/cn/iocoder/springboot/lab22/validation/service/UserServiceTest.java" target="_blank" rel="noopener noreferrer">UserServiceTest</a> để kiểm tra từng thao tác đơn giản của <code>UserService</code>. Mã nguồn như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserServiceTest.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">RunWith</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">SpringRunner</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">SpringBootTest</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">classes</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Application</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserServiceTest</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Autowired</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserService</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> userService</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Test</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> testGet</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        userService</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Test</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> testAdd</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> addDTO</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> UserAddDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        userService</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(addDTO);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Test</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> testAdd01</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> addDTO</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> UserAddDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        userService</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">add01</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(addDTO);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Test</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> testAdd02</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> addDTO</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> UserAddDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        userService</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">add02</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(addDTO);  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>① Phương thức <code>#testGet()</code></strong></p><p>Khi thực hiện, sẽ ném ra ngoại lệ <code>ConstraintViolationException</code>. Nhật ký như sau:</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>javax.validation.ConstraintViolationException: get.id: Mã số phải lớn hơn 0  </span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:116)</span></span></code></pre></div><ul><li>Kết quả này như mong đợi.</li></ul><p><strong>② Phương thức <code>#testAdd()</code></strong></p><p>Khi thực hiện, sẽ ném ra ngoại lệ <code>ConstraintViolationException</code>. Nhật ký như sau:</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>javax.validation.ConstraintViolationException: add.addDTO.username: Tài khoản không được để trống, add.addDTO.password: Mật khẩu không được để trống  </span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:116)</span></span></code></pre></div><ul><li>Kết quả này cũng như mong đợi. Khác với việc gọi phương thức <code>UserController#add(addDTO)</code>, ở đây được bộ lọc MethodValidationInterceptor chặn lại để kiểm tra tham số, thay vì cơ chế DataBinder.</li></ul><p><strong>③ Phương thức <code>#testAdd01()</code></strong></p><p>Khi thực hiện, sẽ kết thúc bình thường. Bởi vì khi gọi <code>this.add(addDTO)</code>, <code>this</code> không phải là đối tượng proxy của Spring AOP, nên sẽ không bị bộ lọc MethodValidationInterceptor chặn lại.</p><p><strong>④ Phương thức <code>#testAdd02()</code></strong></p><p>Khi thực hiện, sẽ ném ra ngoại lệ <code>IllegalStateException</code>. Nhật ký như sau:</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>java.lang.IllegalStateException: Không thể tìm thấy proxy hiện tại: Đặt thuộc tính &#39;exposeProxy&#39; của Advised thành &#39;true&#39; để làm cho nó khả dụng.  </span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>	at org.springframework.aop.framework.AopContext.currentProxy(AopContext.java:69)</span></span></code></pre></div><ul><li>Theo lý thuyết, vì chúng ta đã cấu hình chú thích <code>@EnableAspectJAutoProxy(exposeProxy = true)</code>, trong khi AOP của Spring chặn, thông qua việc gọi phương thức <code>AopContext.currentProxy()</code>, chúng ta có thể lấy được đối tượng proxy hiện tại. Tuy nhiên, ở đây ném ra ngoại lệ <code>IllegalStateException</code>.</li><li>Rõ ràng, ở đây không có đối tượng proxy hiện tại được thiết lập trong AopContext, vì vậy ném ra ngoại lệ <code>IllegalStateException</code>. Hiện tại, tôi nghi ngờ đây có thể là một BUG. 😈 Tạm thời tôi không có tâm trạng để debug, hehe.</li></ul><h1 id="_4-xu-ly-ngoai-le-xac-thuc" tabindex="-1"><a class="header-anchor" href="#_4-xu-ly-ngoai-le-xac-thuc"><span>4. Xử lý ngoại lệ xác thực</span></a></h1><blockquote><p>Mã mẫu tương ứng với kho lưu trữ: <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01" target="_blank" rel="noopener noreferrer">lab-22-validation-01</a>.</p></blockquote><p>Trong phần <a href="#">「3. Hướng dẫn nhanh」</a>, chúng ta có thể thấy rằng nếu trực tiếp trả về kết quả xác thực cho phía trước, khả năng đọc hiểu của nội dung thông báo sẽ khá kém, vì vậy chúng ta cần xử lý các ngoại lệ phát sinh từ việc xác thực.</p><p>Trong phần <a href="http://www.iocoder.cn/Spring-Boot/SpringMVC/?self" target="_blank" rel="noopener noreferrer">「5. Xử lý ngoại lệ toàn cục」</a> của <a href="#">《Hướng dẫn Spring Boot SpringMVC》</a>, chúng ta đã sử dụng chú thích <code>@ExceptionHandler</code> để thực hiện việc xử lý ngoại lệ tùy chỉnh. Do đó, trong phần này, chúng ta sẽ tiếp tục xử lý ngoại lệ xác thực trong ví dụ <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01" target="_blank" rel="noopener noreferrer">lab-22-validation-01</a> ở phần <a href="#">「3. Hướng dẫn nhanh」</a>.</p><h2 id="_4-1-sao-chep-va-dan" tabindex="-1"><a class="header-anchor" href="#_4-1-sao-chep-va-dan"><span>4.1 Sao chép và dán</span></a></h2><p>Đầu tiên, chúng ta sẽ sao chép tất cả các lớp cần thiết từ phần <a href="http://www.iocoder.cn/Spring-Boot/SpringMVC/?self" target="_blank" rel="noopener noreferrer">「5. Xử lý ngoại lệ toàn cục」</a> của <a href="#">《Hướng dẫn Spring Boot SpringMVC》</a>.</p><ul><li>Trong gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/constants" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.constants</code></a>, sao chép lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/constants/ServiceExceptionEnum.java" target="_blank" rel="noopener noreferrer">ServiceExceptionEnum</a>.</li><li>Trong gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/exception" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.core.exception</code></a>, sao chép lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/exception/ServiceException.java" target="_blank" rel="noopener noreferrer">ServiceException</a>.</li><li>Trong gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/vo" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.core.vo</code></a>, sao chép lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/vo/CommonResult.java" target="_blank" rel="noopener noreferrer">CommonResult</a>.</li><li>Trong gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/web" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.core.web</code></a>, sao chép các lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/web/GlobalExceptionHandler.java" target="_blank" rel="noopener noreferrer">GlobalExceptionHandler</a> và <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/web/GlobalResponseBodyHandler.java" target="_blank" rel="noopener noreferrer">GlobalResponseBodyHandler</a>.</li></ul><h2 id="_4-2-serviceexceptionenum" tabindex="-1"><a class="header-anchor" href="#_4-2-serviceexceptionenum"><span>4.2 ServiceExceptionEnum</span></a></h2><p>Chỉnh sửa lớp liệt kê <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/constants/ServiceExceptionEnum.java" target="_blank" rel="noopener noreferrer">ServiceExceptionEnum</a> để thêm mã lỗi cho các tham số xác thực không hợp lệ. Mã như sau:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// ServiceExceptionEnum.java</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">INVALID_REQUEST_PARAM_ERROR</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2001001002</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Tham số yêu cầu không hợp lệ&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span></code></pre></div><h2 id="_4-3-globalexceptionhandler" tabindex="-1"><a class="header-anchor" href="#_4-3-globalexceptionhandler"><span>4.3 GlobalExceptionHandler</span></a></h2><p>Chỉnh sửa lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/web/GlobalExceptionHandler.java" target="_blank" rel="noopener noreferrer">GlobalExceptionHandler</a> để thêm phương thức <code>#constraintViolationExceptionHandler(...)</code>, xử lý ngoại lệ <code>ConstraintViolationException</code>. Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// GlobalExceptionHandler.java</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ResponseBody</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ExceptionHandler</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> ConstraintViolationException</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> CommonResult</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> constraintViolationExceptionHandler</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">HttpServletRequest</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> req</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> ConstraintViolationException</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> ex) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">debug</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[constraintViolationExceptionHandler]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, ex);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // Ghép lỗi  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    StringBuilder</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> detailMessage </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> StringBuilder</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ConstraintViolation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> constraintViolation </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> ex</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getConstraintViolations</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">) {  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // Sử dụng ; để phân cách nhiều lỗi  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">detailMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">length</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> &gt;</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">            detailMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">        }  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // Ghép nội dung vào trong đó  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        detailMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">constraintViolation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    }  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // Đóng gói kết quả CommonResult  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> CommonResult</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ServiceExceptionEnum</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">INVALID_REQUEST_PARAM_ERROR</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getCode</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(),  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">            ServiceExceptionEnum</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">INVALID_REQUEST_PARAM_ERROR</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;:&quot;</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> detailMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Ghép các thông báo lỗi của từng ràng buộc lại với nhau, sử dụng <code>;</code> để phân cách.</li><li>Gửi lại yêu cầu đến API tương ứng với <code>UserController#get(id)</code>, kết quả phản hồi như sau: <img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/03.png" alt="constraintViolationExceptionHandler" loading="lazy"></li></ul><p>Tiếp theo, chỉnh sửa lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/web/GlobalExceptionHandler.java" target="_blank" rel="noopener noreferrer">GlobalExceptionHandler</a> để thêm phương thức <code>#bindExceptionHandler(...)</code>, xử lý ngoại lệ <code>BindException</code>. Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// GlobalExceptionHandler.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ResponseBody</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ExceptionHandler</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> BindException</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> CommonResult</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> bindExceptionHandler</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">HttpServletRequest</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> req</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> BindException</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> ex) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">debug</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[bindExceptionHandler]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, ex);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // Ghép lỗi  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    StringBuilder</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> detailMessage </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> StringBuilder</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ObjectError</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> objectError </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> ex</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getAllErrors</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">) {  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // Sử dụng ; để phân cách nhiều lỗi  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">detailMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">length</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> &gt;</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">            detailMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">        }  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // Ghép nội dung vào trong đó  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        detailMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">objectError</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getDefaultMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    }  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // Đóng gói kết quả CommonResult  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> CommonResult</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ServiceExceptionEnum</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">INVALID_REQUEST_PARAM_ERROR</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getCode</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(),  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">            ServiceExceptionEnum</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">INVALID_REQUEST_PARAM_ERROR</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;:&quot;</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> detailMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Ghép các thông báo lỗi của từng ràng buộc lại với nhau, sử dụng <code>;</code> để phân cách.</li><li>Gửi lại yêu cầu đến API tương ứng với <code>UserController#add(addDTO)</code>, kết quả phản hồi như sau: <img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/04.png" alt="bindExceptionHandler" loading="lazy"></li></ul><h1 id="_5-tuy-chinh-rang-buoc" tabindex="-1"><a class="header-anchor" href="#_5-tuy-chinh-rang-buoc"><span>5. Tùy Chỉnh Ràng Buộc</span></a></h1><blockquote><p>Mã ví dụ tương ứng với kho lưu trữ: <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01" target="_blank" rel="noopener noreferrer">lab-22-validation-01</a>.</p></blockquote><p>Trong hầu hết các dự án, các ràng buộc được định nghĩa bởi Bean Validation hoặc các ràng buộc bổ sung của Hibernate Validator thường không đáp ứng được các tình huống kinh doanh phức tạp của chúng ta. Do đó, chúng ta cần phải tùy chỉnh ràng buộc.</p><p>Việc phát triển ràng buộc tùy chỉnh chỉ cần <strong>hai bước</strong>: 1) viết <strong>chú thích</strong> cho ràng buộc tùy chỉnh; 2) viết <strong>bộ kiểm tra tùy chỉnh</strong> <code>ConstraintValidator</code>.</p><p>Dưới đây, hãy cùng thực hiện một ràng buộc tùy chỉnh để kiểm tra rằng các tham số phải nằm trong phạm vi của các giá trị enum.</p><h2 id="_5-1-intarrayvaluable" tabindex="-1"><a class="header-anchor" href="#_5-1-intarrayvaluable"><span>5.1 IntArrayValuable</span></a></h2><p>Tại đường dẫn gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/validator" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.core.validator</code></a>, tạo interface <code>IntArrayValuable</code> để trả về mảng giá trị. Mã như sau:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// IntArrayValuable.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> interface</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> IntArrayValuable</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">@return</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> mảng int  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">[] array</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Vì một lớp enum không thể biết chính xác các giá trị của nó, nên chúng ta sẽ yêu cầu lớp enum đó triển khai interface này và trả về tất cả các giá trị enum mà nó có.</p><h2 id="_5-2-genderenum" tabindex="-1"><a class="header-anchor" href="#_5-2-genderenum"><span>5.2 GenderEnum</span></a></h2><p>Tại đường dẫn gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/constants" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.constants</code></a>, tạo lớp enum <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/constants/GenderEnum.java" target="_blank" rel="noopener noreferrer">GenderEnum</a> để đại diện cho giới tính. Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// GenderEnum.java  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> enum</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> GenderEnum</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> IntArrayValuable</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">    MALE</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;男&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">    FEMALE</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;女&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Mảng giá trị  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">[] ARRAYS </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Arrays</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">stream</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">values</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()).</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">mapToInt</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(GenderEnum</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">::</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">getValue).</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">toArray</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Giá trị giới tính  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Tên giới tính  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">    GenderEnum</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">value</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> value;  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">name</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> name;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> getValue</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> value;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> getName</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> name;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Override</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">[] array</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> ARRAYS;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Triển khai interface <code>IntArrayValuable</code>, trả về mảng giá trị <code>ARRAYS</code>.</li></ul><h2 id="_5-3-inenum" tabindex="-1"><a class="header-anchor" href="#_5-3-inenum"><span>5.3 @InEnum</span></a></h2><p>Tại đường dẫn gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/validator" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.core.validator</code></a>, tạo <strong>annotation</strong> <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/validator/InEnum.java" target="_blank" rel="noopener noreferrer"><code>@InEnum</code></a> để định nghĩa ràng buộc tùy chỉnh. Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// InEnum.java  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Target</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">({METHOD</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> FIELD</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> ANNOTATION_TYPE</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> CONSTRUCTOR</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> PARAMETER</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> TYPE_USE})  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Retention</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">RetentionPolicy</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">RUNTIME</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Documented</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Constraint</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">validatedBy</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> InEnumValidator</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> InEnum</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * @return Lớp thực hiện interface IntArrayValuable  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    Class</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> extends IntArrayValuable</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> value</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * @return Nội dung thông báo  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> message</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">() </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">default</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Phải nằm trong phạm vi được chỉ định {value}&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * @return Nhóm  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    Class</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">[] </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">groups</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">() </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">default</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> {}</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * @return Mảng Payload  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    Class</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> extends Payload</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">[] </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">payload</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">() </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">default</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> {}</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Định nghĩa nhiều ràng buộc {@code @InEnum} trên cùng một phần tử.  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Target</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">({METHOD</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> FIELD</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> ANNOTATION_TYPE</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> CONSTRUCTOR</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> PARAMETER</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> TYPE_USE})  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Retention</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">RetentionPolicy</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">RUNTIME</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Documented</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        InEnum</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">[] </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">value</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    }  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Thêm annotation <code>@Constraint(validatedBy = InEnumValidator.class)</code> lên lớp để chỉ định <strong>validator tùy chỉnh</strong> sẽ được sử dụng.</li><li>Thuộc tính <code>value()</code> chỉ định lớp thực hiện interface <code>IntArrayValuable</code>. Điều này cho phép chúng ta lấy mảng giá trị cần kiểm tra từ tham số.</li><li>Thuộc tính <code>message()</code> để thiết lập nội dung thông báo. Mặc định là <code>&quot;Phải nằm trong phạm vi được chỉ định {value}&quot;</code>.</li><li>Các thuộc tính khác có thể sao chép và dán mà không cần phải hiểu sâu, vì có thể bỏ qua.</li></ul><h2 id="_5-4-inenumvalidator" tabindex="-1"><a class="header-anchor" href="#_5-4-inenumvalidator"><span>5.4 InEnumValidator</span></a></h2><p>Tại đường dẫn gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/validator" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.core.validator</code></a>, tạo <strong>validator</strong> <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/core/validator/InEnumValidator.java" target="_blank" rel="noopener noreferrer">InEnumValidator</a> cho ràng buộc tùy chỉnh. Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// InEnumValidator.java  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> InEnumValidator</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> ConstraintValidator</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">InEnum</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Mảng giá trị  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Set</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> values</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Override</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> initialize</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">InEnum</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> annotation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        IntArrayValuable</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">values</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> annotation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getEnumConstants</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">values</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">            this</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">values</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Collections</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">emptySet</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">            this</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">values</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Arrays</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">stream</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(values[</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">array</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()).</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">boxed</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">collect</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Collectors</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">toSet</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">());  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        }  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Override</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> boolean</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> isValid</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Integer</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ConstraintValidatorContext</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> context</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // &lt;2.1&gt; Kiểm tra hợp lệ  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">values</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">contains</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(value)) {  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        }  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // &lt;2.2.1&gt; Kiểm tra không hợp lệ, tạo thông báo tùy chỉnh (vì giá trị của enum không thể lấy trực tiếp từ annotation)  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        context</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">disableDefaultConstraintViolation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(); </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// Vô hiệu hóa giá trị mặc định của message  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        context</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">buildConstraintViolationWithTemplate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">context</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getDefaultConstraintMessageTemplate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">()  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">                .</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">replaceAll</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">{value}&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">values</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">())).</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">addConstraintViolation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(); </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// Thêm lại thông báo lỗi tùy chỉnh  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// &lt;2.2.2&gt;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="giai-thich-ma" tabindex="-1"><a class="header-anchor" href="#giai-thich-ma"><span>Giải thích mã</span></a></h3><ol><li><p><strong>Implement ConstraintValidator</strong>:</p><ul><li>interface <code>ConstraintValidator</code> được triển khai với hai tham số kiểu: <ul><li>Tham số đầu tiên là <code>A extends Annotation</code>, dùng để chỉ định annotation tùy chỉnh là <code>@InEnum</code>.</li><li>Tham số thứ hai là <code>T</code>, dùng để chỉ định kiểu giá trị tham số là <code>Integer</code>.</li></ul></li></ul></li><li><p><strong>Initialize Method</strong>:</p><ul><li>Phương thức <code>initialize(annotation)</code> được thực hiện để lấy thuộc tính <code>values()</code> từ annotation <code>@InEnum</code>.</li><li>Giá trị này được lưu vào thuộc tính <code>values</code> dưới dạng một tập hợp.</li></ul></li><li><p><strong>isValid Method</strong>:</p><ul><li>Phương thức <code>isValid(value, context)</code> được sử dụng để kiểm tra giá trị tham số có nằm trong mảng giá trị đã xác định hay không. <ul><li><code>&lt;2.1&gt;</code>: Nếu giá trị tham số nằm trong tập hợp <code>values</code>, trả về <code>true</code>, tức là kiểm tra hợp lệ.</li><li><code>&lt;2.2.1&gt;</code>: Nếu không hợp lệ, vô hiệu hóa thông báo mặc định và tạo thông báo tùy chỉnh để hiển thị, thay thế <code>{value}</code> bằng danh sách các giá trị hợp lệ.</li><li><code>&lt;2.2.2&gt;</code>: Trả về <code>false</code> để chỉ ra rằng kiểm tra không hợp lệ.</li></ul></li></ul></li></ol><p>Với mã này, bạn đã hoàn thành việc tạo ra một ràng buộc tùy chỉnh cho việc kiểm tra xem một giá trị có nằm trong một tập hợp các giá trị từ enum hay không. Tiếp theo, bạn có thể thực hiện các bài kiểm tra để xác minh tính chính xác của ràng buộc này.</p><h2 id="_5-5-userupdategenderdto" tabindex="-1"><a class="header-anchor" href="#_5-5-userupdategenderdto"><span>5.5 UserUpdateGenderDTO</span></a></h2><p>Tại đường dẫn gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/dto" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.dto</code></a>, tạo lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/dto/UserUpdateGenderDTO.java" target="_blank" rel="noopener noreferrer">UserUpdateGenderDTO</a> cho việc cập nhật giới tính của người dùng (DTO). Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserUpdateGenderDTO.java  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserUpdateGenderDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Mã người dùng  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">NotNull</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;ID người dùng không được để trống&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Giới tính  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">NotNull</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Giới tính không được để trống&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">InEnum</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> GenderEnum</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;Giới tính phải là {value}&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> gender</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">      </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // ... Bỏ qua các phương thức set/get  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="giai-thich-ma-1" tabindex="-1"><a class="header-anchor" href="#giai-thich-ma-1"><span>Giải thích mã</span></a></h3><ol><li><p><strong>User ID</strong>:</p><ul><li>Trường <code>id</code> được đánh dấu với annotation <code>@NotNull</code>, yêu cầu rằng mã người dùng không được null và nếu null sẽ trả về thông báo &quot;ID người dùng không được để trống&quot;.</li></ul></li><li><p><strong>Giới Tính</strong>:</p><ul><li>Trường <code>gender</code> cũng được đánh dấu với annotation <code>@NotNull</code>, yêu cầu rằng giới tính không được null.</li><li>Annotation <code>@InEnum(value = GenderEnum.class, message = &quot;Giới tính phải là {value}&quot;)</code> được sử dụng để đảm bảo rằng giá trị của giới tính phải nằm trong phạm vi các giá trị của <code>GenderEnum</code>. Nếu không, thông báo lỗi sẽ trả về với định dạng &quot;Giới tính phải là {value}&quot;, trong đó <code>{value}</code> sẽ được thay thế bằng các giá trị hợp lệ.</li></ul></li></ol><h2 id="_5-6-usercontroller" tabindex="-1"><a class="header-anchor" href="#_5-6-usercontroller"><span>5.6 UserController</span></a></h2><p>Tiếp theo, bạn sẽ chỉnh sửa lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/controller/UserController.java" target="_blank" rel="noopener noreferrer">UserController</a> để thêm API cho việc cập nhật giới tính. Mã như sau:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserController.java  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">PostMapping</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/update_gender&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> updateGender</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Valid</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserUpdateGenderDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> updateGenderDTO) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[updateGender][updateGenderDTO: {}]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, updateGenderDTO);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><h3 id="giai-thich-ma-2" tabindex="-1"><a class="header-anchor" href="#giai-thich-ma-2"><span>Giải thích mã</span></a></h3><ul><li>Phương thức <code>updateGender</code> được đánh dấu với annotation <code>@PostMapping(&quot;/update_gender&quot;)</code>, định nghĩa API cho việc cập nhật giới tính.</li><li>Annotation <code>@Valid</code> được sử dụng để kích hoạt xác thực cho đối tượng <code>UserUpdateGenderDTO</code>. Nếu đối tượng này không hợp lệ (ví dụ: <code>gender</code> là null hoặc không nằm trong <code>GenderEnum</code>), Spring sẽ tự động trả về một phản hồi lỗi với thông báo thích hợp.</li></ul><h3 id="kiem-tra" tabindex="-1"><a class="header-anchor" href="#kiem-tra"><span>Kiểm tra</span></a></h3><p>Khi bạn gửi một yêu cầu đến API này với <code>gender</code> có giá trị là null, hệ thống sẽ phản hồi với thông báo lỗi tương ứng. Kết quả sẽ giống như hình dưới đây:</p><figure><img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/05.png" alt="响应结果" tabindex="0" loading="lazy"><figcaption>响应结果</figcaption></figure><p>Kết quả cho thấy rằng vì giá trị <code>gender</code> không hợp lệ, hệ thống đã trả về thông báo <code>&quot;Giới tính phải là [1, 2]&quot;</code>, thông báo này cho biết rằng giới tính phải là một trong các giá trị hợp lệ.</p><h1 id="_6-kiem-tra-theo-nhom" tabindex="-1"><a class="header-anchor" href="#_6-kiem-tra-theo-nhom"><span>6. Kiểm tra theo nhóm</span></a></h1><blockquote><p>Mã ví dụ tương ứng với kho lưu trữ: <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01" target="_blank" rel="noopener noreferrer">lab-22-validation-01</a>.</p></blockquote><p>Trong một số tình huống kinh doanh, chúng ta cần sử dụng kiểm tra <strong>theo nhóm</strong>, tức là đối với cùng một đối tượng Bean, dựa trên nhóm kiểm tra mà sử dụng các quy tắc kiểm tra khác nhau. Hơi hơi, có vẻ như chúng ta tạm thời không có yêu cầu nào trong lĩnh vực này. Thậm chí nếu có, thì cũng là tách biệt thành các lớp Bean khác nhau. Tất nhiên, với tư cách là một bài viết nhập môn, mình vẫn sẽ cung cấp một ví dụ về kiểm tra theo nhóm.</p><h2 id="_6-1-userupdatestatusdto" tabindex="-1"><a class="header-anchor" href="#_6-1-userupdatestatusdto"><span>6.1 UserUpdateStatusDTO</span></a></h2><p>Tại đường dẫn gói <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/dto" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.dto</code></a>, tạo lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/dto/UserUpdateStatusDTO.java" target="_blank" rel="noopener noreferrer">UserUpdateStatusDTO</a> cho việc cập nhật trạng thái người dùng (DTO). Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserUpdateStatusDTO.java  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserUpdateStatusDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Nhóm 01, yêu cầu trạng thái phải là true  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> interface</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Group01</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {}</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Nhóm 02, yêu cầu trạng thái phải là false  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> interface</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Group02</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {}</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">      </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Trạng thái  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">AssertTrue</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;状态必须为 true&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> groups</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Group01</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">AssertFalse</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;状态必须为 false&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> groups</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Group02</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Boolean</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> status</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // ... Bỏ qua các phương thức set/get  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="giai-thich-ma-3" tabindex="-1"><a class="header-anchor" href="#giai-thich-ma-3"><span>Giải thích mã</span></a></h3><ul><li>Tạo các interface <code>Group01</code> và <code>Group02</code> như hai nhóm kiểm tra. Không nhất thiết phải định nghĩa chúng trong lớp <code>UserUpdateStatusDTO</code>, ở đây chỉ để thuận tiện.</li><li>Trường <code>status</code>, trong nhóm kiểm tra <code>Group01</code>, phải là <code>true</code>; trong nhóm kiểm tra <code>Group02</code>, phải là <code>false</code>.</li></ul><h2 id="_6-2-usercontroller" tabindex="-1"><a class="header-anchor" href="#_6-2-usercontroller"><span>6.2 UserController</span></a></h2><p>Chỉnh sửa lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/controller/UserController.java" target="_blank" rel="noopener noreferrer">UserController</a> để thêm hai API cho việc cập nhật trạng thái. Mã như sau:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserController.java  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">PostMapping</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/update_status_true&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> updateStatusTrue</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Validated</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">UserUpdateStatusDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Group01</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">UserUpdateStatusDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> updateStatusDTO) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[updateStatusTrue][updateStatusDTO: {}]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, updateStatusDTO);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">PostMapping</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/update_status_false&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> updateStatusFalse</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Validated</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">UserUpdateStatusDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Group02</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">UserUpdateStatusDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> updateStatusDTO) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;[updateStatusFalse][updateStatusDTO: {}]&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, updateStatusDTO);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><h3 id="giai-thich-ma-4" tabindex="-1"><a class="header-anchor" href="#giai-thich-ma-4"><span>Giải thích mã</span></a></h3><ul><li><p>Đối với phương thức <code>#updateStatusTrue(updateStatusDTO)</code>, chúng ta đã thêm chú thích <code>@Validated</code> vào tham số <code>updateStatusDTO</code>, và thiết lập nhóm kiểm tra là <code>Group01</code>. Ví dụ về việc kiểm tra không thành công như hình dưới:<br><img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/06.jpg" alt="Ví dụ không thành công 1" loading="lazy"></p></li><li><p>Đối với phương thức <code>#updateStatusFalse(updateStatusDTO)</code>, chúng ta cũng đã thêm chú thích <code>@Validated</code> vào tham số <code>updateStatusDTO</code>, và thiết lập nhóm kiểm tra là <code>Group02</code>. Ví dụ về việc kiểm tra không thành công như hình dưới:<br><img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/07.jpg" alt="Ví dụ không thành công 2" loading="lazy"></p></li></ul><p>Do đó, khi sử dụng kiểm tra theo nhóm, điều cốt yếu là thêm chú thích <code>@Validated</code> và thiết lập nhóm kiểm tra tương ứng.</p><h1 id="_7-kiem-tra-thu-cong" tabindex="-1"><a class="header-anchor" href="#_7-kiem-tra-thu-cong"><span>7. Kiểm Tra Thủ Công</span></a></h1><blockquote><p>Mã ví dụ tương ứng với kho lưu trữ: <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01" target="_blank" rel="noopener noreferrer">lab-22-validation-01</a>.</p></blockquote><p>Trong các ví dụ trên, chúng ta chủ yếu sử dụng các chú thích khai báo của Spring Validation. Tuy nhiên, trong một số tình huống kinh doanh, chúng ta có thể cần sử dụng API Bean Validation để thực hiện kiểm tra tham số một cách thủ công.</p><p>Chỉnh sửa lớp thử nghiệm <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/test/java/cn/iocoder/springboot/lab22/validation/service/UserServiceTest.java" target="_blank" rel="noopener noreferrer">UserServiceTest</a> để thêm ví dụ về kiểm tra tham số thủ công. Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserServiceTest.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Autowired</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // &lt;1.1&gt;  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Validator</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> validator</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Test</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> testValidator</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">() {  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // In ra, xem loại của validator // &lt;1.2&gt;  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(validator);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // Tạo đối tượng UserAddDTO // &lt;2&gt;  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> addDTO </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> UserAddDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // Kiểm tra // &lt;3&gt;  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    Set</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ConstraintViolation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">UserAddDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> result </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> validator</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">validate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(addDTO);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // In ra kết quả kiểm tra // &lt;4&gt;  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">ConstraintViolation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">UserAddDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> constraintViolation </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> result) {  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // Thuộc tính: thông báo  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">constraintViolation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getPropertyPath</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;: &quot;</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> constraintViolation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getMessage</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    }  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="giai-thich-ma-5" tabindex="-1"><a class="header-anchor" href="#giai-thich-ma-5"><span>Giải thích mã</span></a></h3><ul><li><p>Tại <code>&lt;1.1&gt;</code>, tiêm đối tượng <code>Validator</code> vào.</p></li><li><p>Tại <code>&lt;1.2&gt;</code>, in ra loại của <code>validator</code>. Kết quả xuất ra như sau:</p><p><code>org.springframework.validation.beanvalidation.LocalValidatorFactoryBean@48c3205a</code></p><ul><li>Loại của <code>validator</code> là <a href="https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.java" target="_blank" rel="noopener noreferrer">LocalValidatorFactoryBean</a>. LocalValidatorFactoryBean cung cấp hỗ trợ cho JSR-303 và JSR-349, đồng thời tương thích với Hibernate Validator.</li><li>Trong hệ thống Spring Boot, sử dụng <a href="https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.java" target="_blank" rel="noopener noreferrer">ValidationAutoConfiguration</a> để tự động cấu hình, mặc định tạo LocalValidatorFactoryBean làm Bean Validator.</li></ul></li><li><p>Tại <code>&lt;2&gt;</code>, tạo đối tượng <code>UserAddDTO</code>, tức là <a href="#">「3.3 UserAddDTO」</a>, đã thêm các chú thích ràng buộc tương ứng.</p></li><li><p>Tại <code>&lt;3&gt;</code>, gọi phương thức <code>Validator#validate(T object, Class&lt;?&gt;... groups)</code> để thực hiện kiểm tra tham số.</p></li><li><p>Tại <code>&lt;4&gt;</code>, in ra kết quả kiểm tra. Kết quả xuất ra như sau:</p><p><code>username: 登录账号不能为空</code><br><code>password: 密码不能为空</code></p><ul><li>Nếu kiểm tra thành công, thì tập hợp <code>Set&lt;ConstraintViolation&lt;?&gt;&gt;</code> trả về sẽ rỗng.</li></ul></li></ul><h1 id="_8-quoc-te-hoa-i18n" tabindex="-1"><a class="header-anchor" href="#_8-quoc-te-hoa-i18n"><span>8. Quốc Tế Hóa i18n</span></a></h1><blockquote><p>Mã ví dụ tương ứng với kho lưu trữ: <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01" target="_blank" rel="noopener noreferrer">lab-22-validation-01</a>.</p></blockquote><p>Trong một số dự án, chúng ta sẽ có nhu cầu về quốc tế hóa, đặc biệt là khi chúng ta làm dịch vụ SASS cho thị trường B2B. Vì vậy, khi sử dụng Bean Validator để kiểm tra tham số, chúng ta cũng cần cung cấp thông báo lỗi được quốc tế hóa.</p><p>Tin vui là Hibernate Validator đã tích hợp sẵn hỗ trợ cho quốc tế hóa, vì vậy chúng ta chỉ cần cấu hình đơn giản là có thể thực hiện thông báo lỗi quốc tế hóa.</p><h2 id="_8-1-tap-tin-cau-hinh-ung-dung" tabindex="-1"><a class="header-anchor" href="#_8-1-tap-tin-cau-hinh-ung-dung"><span>8.1 Tập Tin Cấu Hình Ứng Dụng</span></a></h2><p>Trong thư mục <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/resources" target="_blank" rel="noopener noreferrer"><code>resources</code></a>, tạo tập tin cấu hình <a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/resources/application.yaml" target="_blank" rel="noopener noreferrer"><code>application.yaml</code></a> với cấu hình như sau:</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  # Cấu hình thông điệp i18, tương ứng với lớp cấu hình MessageSourceProperties  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  messages</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    basename</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">i18n/messages</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> # Tên cơ bản của đường dẫn tập tin  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    encoding</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">UTF-8</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> # Sử dụng mã hóa UTF-8</span></span></code></pre></div><p>Sau đó, trong thư mục <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/resources/i18n" target="_blank" rel="noopener noreferrer"><code>resources/i18n</code></a>, tạo các tập tin messages cho các ngôn ngữ khác nhau như sau:</p><ul><li><p><a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/resources/i18n/messages.properties" target="_blank" rel="noopener noreferrer"><code>messages.properties</code></a>: Tập tin cấu hình i18 mặc định.</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>UserUpdateDTO.id.NotNull=用户编号不能为空</span></span></code></pre></div></li><li><p><a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/resources/i18n/messages_en.properties" target="_blank" rel="noopener noreferrer"><code>messages_en.properties</code></a>: Tập tin cấu hình i18 bằng tiếng Anh.</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>UserUpdateDTO.id.NotNull=userId cannot be empty</span></span></code></pre></div></li><li><p><a href="https://github.com/YunaiV/SpringBoot-Labs/blob/master/lab-22/lab-22-validation-01/src/main/resources/i18n/messages_ja.properties" target="_blank" rel="noopener noreferrer"><code>messages_ja.properties</code></a>: Tập tin cấu hình i18 bằng tiếng Nhật.</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>UserUpdateDTO.id.NotNull=ユーザー番号は空にできません</span></span></code></pre></div></li></ul><h2 id="_8-2-cau-hinh-validation" tabindex="-1"><a class="header-anchor" href="#_8-2-cau-hinh-validation"><span>8.2 Cấu Hình Validation</span></a></h2><p>Trong thư mục <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/config" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.config</code></a>, tạo lớp cấu hình <code>ValidationConfiguration</code> để tạo một đối tượng <code>Validator Bean</code> hỗ trợ quốc tế hóa i18n. Mã như sau:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// ValidationConfiguration.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> ValidationConfiguration</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Tham khảo {</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">@link</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> ValidationAutoConfiguration</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">defaultValidator()</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">} để xây dựng Validator Bean  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     *  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * </span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">@return</span><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> Đối tượng Validator  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Bean</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Validator</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> validator</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">MessageSource</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> messageSource</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // Tạo đối tượng LocalValidatorFactoryBean  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        LocalValidatorFactoryBean</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> validator</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> ValidationAutoConfiguration</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">defaultValidator</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">();  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // Thiết lập thuộc tính messageSource để thực hiện i18n  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">        validator</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">setValidationMessageSource</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(messageSource);  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // Trả về  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> validator;  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-3-userupdatedto" tabindex="-1"><a class="header-anchor" href="#_8-3-userupdatedto"><span>8.3 UserUpdateDTO</span></a></h2><p>Trong thư mục <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/dto" target="_blank" rel="noopener noreferrer"><code>cn.iocoder.springboot.lab22.validation.dto</code></a>, tạo lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/dto/UserUpdateDTO.java" target="_blank" rel="noopener noreferrer">UserUpdateDTO</a> để cập nhật thông tin người dùng DTO. Mã như sau:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserUpdateDTO.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserUpdateDTO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /**  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     * Mã người dùng  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">     */</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">NotNull</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">message</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;{UserUpdateDTO.id.NotNull}&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // ... Bỏ qua các phương thức get/set  </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><ul><li>Khác với việc thiết lập thuộc tính <code>message</code> của các chú thích ràng buộc mà chúng ta đã thấy ở trên, ở đây chúng ta sử dụng dấu <code>{}</code> như là một ký hiệu chiếm chỗ.</li></ul><h2 id="_8-4-usercontroller" tabindex="-1"><a class="header-anchor" href="#_8-4-usercontroller"><span>8.4 UserController</span></a></h2><p>Chỉnh sửa lớp <a href="https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22/lab-22-validation-01/src/main/java/cn/iocoder/springboot/lab22/validation/controller/UserController.java" target="_blank" rel="noopener noreferrer">UserController</a> để thêm API cập nhật người dùng. Mã như sau:</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// UserController.java  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">PostMapping</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/update&quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">)  </span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> update</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Valid</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> UserUpdateDTO</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> updateDTO) {  </span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\[</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">update</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\]\\[</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">updateDTO: {}</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\]</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, updateDTO);</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>Dưới đây, chúng ta sẽ thực hiện kiểm tra API. Có một điều cần lưu ý, SpringMVC sử dụng tiêu đề yêu cầu <code>Accept-Language</code> để thực hiện quốc tế hóa i18n.</p><ul><li>Trường hợp <code>Accept-Language = zh</code>, kết quả phản hồi như sau: <img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/08.jpg" alt="" loading="lazy"></li><li>Trường hợp <code>Accept-Language = en</code>, kết quả phản hồi như sau: <img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/09.jpg" alt="" loading="lazy"></li><li>Trường hợp <code>Accept-Language = ja</code>, kết quả phản hồi như sau: <img src="https://static.iocoder.cn/images/Spring-Boot/2019-11-19/10.jpg" alt="" loading="lazy"></li></ul><p>Đến đây, quá trình quốc tế hóa i18n cho Validator của chúng ta đã hoàn thành.</p><p>Tuy nhiên, những người bạn cẩn thận sẽ nhận thấy rằng <code>&quot;请求参数不合法&quot;</code> (Yêu cầu tham số không hợp lệ) vẫn chưa được xử lý quốc tế hóa. Đúng vậy~ Trên thực tế, quốc tế hóa là một công việc lớn, liên quan đến nhiều khía cạnh. Ví dụ như, quốc tế hóa thông tin trong bảng nghiệp vụ, sản phẩm hỗ trợ nhiều ngôn ngữ như tiếng Trung, tiếng Anh, tiếng Hàn, v.v. 😈 Gần đây, tôi đang có một dự án mới cần thực hiện quốc tế hóa, nếu bạn nào có nhu cầu trong lĩnh vực này, có thể cùng nhau trao đổi thêm nhé.</p><h1 id="_666-tong-ket" tabindex="-1"><a class="header-anchor" href="#_666-tong-ket"><span>666. Tổng kết</span></a></h1><p>Hy vọng sau khi đọc xong bài viết này, các bạn có thể thoải mái và thanh lịch hơn trong việc hoàn thành các yêu cầu kiểm tra tham số. 😈</p><p>Tất nhiên, có một điểm cần lưu ý, Bean Validation chủ yếu thực hiện việc kiểm tra tham số không trạng thái. Làm thế nào để hiểu điều này?</p><ul><li>Ví dụ, các kích thước như độ dài tham số, v.v., là <strong>phù hợp</strong> để thực hiện thông qua Bean Validation.</li><li>Ví dụ, việc kiểm tra tính duy nhất của tên người dùng, v.v., phụ thuộc vào nguồn dữ liệu bên ngoài, là <strong>không phù hợp</strong> để thực hiện thông qua Bean Validation.</li></ul><p>Tất nhiên, nếu bạn có ý kiến khác, hãy để lại bình luận để thảo luận.</p><p>Do giới hạn về dung lượng, tôi đã lười biếng một chút, còn một số nội dung thực sự có thể bổ sung:</p><ul><li><a href="https://www.baeldung.com/apache-bval" target="_blank" rel="noopener noreferrer">《Intro to Apache BVal》</a> sử dụng Apache BVal để thực hiện kiểm tra tham số.</li><li><a href="http://www.shouce.ren/api/spring2.5/ch05s02.html" target="_blank" rel="noopener noreferrer">《使用 Spring 的 Validator 接口进行校验》</a> thông qua việc triển khai interface Validator để cung cấp bộ kiểm tra tham số cho đối tượng Bean tương ứng.</li></ul>`,221)]))}const p=s(h,[["render",l],["__file","validation.html.vue"]]),r=JSON.parse('{"path":"/framework/spring-boot/validation.html","title":"Validation","lang":"en-US","frontmatter":{"title":"Validation","tags":["java","spring-boot"],"categories":["spring-boot"],"order":11,"description":"Spring Boot Validation Bài viết này cung cấp mã nguồn đầy đủ, có thể xem tại https://github.com/YunaiV/SpringBoot-Labs trong thư mục lab-22. Việc viết nội dung gốc không hề dễ d...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/framework/spring-boot/validation.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Validation"}],["meta",{"property":"og:description","content":"Spring Boot Validation Bài viết này cung cấp mã nguồn đầy đủ, có thể xem tại https://github.com/YunaiV/SpringBoot-Labs trong thư mục lab-22. Việc viết nội dung gốc không hề dễ d..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/01.jpg"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-02T17:20:50.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"spring-boot"}],["meta",{"property":"article:modified_time","content":"2024-10-02T17:20:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Validation\\",\\"image\\":[\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/01.jpg\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/02.jpg\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/03.png\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/04.png\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/05.png\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/06.jpg\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/07.jpg\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/08.jpg\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/09.jpg\\",\\"https://static.iocoder.cn/images/Spring-Boot/2019-11-19/10.jpg\\"],\\"dateModified\\":\\"2024-10-02T17:20:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"2.1 Chú Thích Ràng Buộc Được Định Nghĩa Bởi Bean Validation","slug":"_2-1-chu-thich-rang-buoc-đuoc-đinh-nghia-boi-bean-validation","link":"#_2-1-chu-thich-rang-buoc-đuoc-đinh-nghia-boi-bean-validation","children":[{"level":3,"title":"Kiểm Tra Rỗng và Không Rỗng","slug":"kiem-tra-rong-va-khong-rong","link":"#kiem-tra-rong-va-khong-rong","children":[]},{"level":3,"title":"Kiểm Tra Số","slug":"kiem-tra-so","link":"#kiem-tra-so","children":[]},{"level":3,"title":"Kiểm Tra Giá Trị Boolean","slug":"kiem-tra-gia-tri-boolean","link":"#kiem-tra-gia-tri-boolean","children":[]},{"level":3,"title":"Kiểm Tra Độ Dài","slug":"kiem-tra-đo-dai","link":"#kiem-tra-đo-dai","children":[]},{"level":3,"title":"Kiểm Tra Ngày","slug":"kiem-tra-ngay","link":"#kiem-tra-ngay","children":[]},{"level":3,"title":"Kiểm Tra Khác","slug":"kiem-tra-khac","link":"#kiem-tra-khac","children":[]}]},{"level":2,"title":"2.2 Các Chú Thích Ràng Buộc Bổ Sung Từ Hibernate Validator","slug":"_2-2-cac-chu-thich-rang-buoc-bo-sung-tu-hibernate-validator","link":"#_2-2-cac-chu-thich-rang-buoc-bo-sung-tu-hibernate-validator","children":[]},{"level":2,"title":"2.3 @Valid và @Validated","slug":"_2-3-valid-va-validated","link":"#_2-3-valid-va-validated","children":[]},{"level":2,"title":"3.1 Nhập phụ thuộc","slug":"_3-1-nhap-phu-thuoc","link":"#_3-1-nhap-phu-thuoc","children":[]},{"level":2,"title":"3.2 Application","slug":"_3-2-application","link":"#_3-2-application","children":[]},{"level":2,"title":"3.3 UserAddDTO","slug":"_3-3-useradddto","link":"#_3-3-useradddto","children":[]},{"level":2,"title":"3.4 UserController","slug":"_3-4-usercontroller","link":"#_3-4-usercontroller","children":[]},{"level":2,"title":"3.5 UserService","slug":"_3-5-userservice","link":"#_3-5-userservice","children":[]},{"level":2,"title":"4.1 Sao chép và dán","slug":"_4-1-sao-chep-va-dan","link":"#_4-1-sao-chep-va-dan","children":[]},{"level":2,"title":"4.2 ServiceExceptionEnum","slug":"_4-2-serviceexceptionenum","link":"#_4-2-serviceexceptionenum","children":[]},{"level":2,"title":"4.3 GlobalExceptionHandler","slug":"_4-3-globalexceptionhandler","link":"#_4-3-globalexceptionhandler","children":[]},{"level":2,"title":"5.1 IntArrayValuable","slug":"_5-1-intarrayvaluable","link":"#_5-1-intarrayvaluable","children":[]},{"level":2,"title":"5.2 GenderEnum","slug":"_5-2-genderenum","link":"#_5-2-genderenum","children":[]},{"level":2,"title":"5.3 @InEnum","slug":"_5-3-inenum","link":"#_5-3-inenum","children":[]},{"level":2,"title":"5.4 InEnumValidator","slug":"_5-4-inenumvalidator","link":"#_5-4-inenumvalidator","children":[{"level":3,"title":"Giải thích mã","slug":"giai-thich-ma","link":"#giai-thich-ma","children":[]}]},{"level":2,"title":"5.5 UserUpdateGenderDTO","slug":"_5-5-userupdategenderdto","link":"#_5-5-userupdategenderdto","children":[{"level":3,"title":"Giải thích mã","slug":"giai-thich-ma-1","link":"#giai-thich-ma-1","children":[]}]},{"level":2,"title":"5.6 UserController","slug":"_5-6-usercontroller","link":"#_5-6-usercontroller","children":[{"level":3,"title":"Giải thích mã","slug":"giai-thich-ma-2","link":"#giai-thich-ma-2","children":[]},{"level":3,"title":"Kiểm tra","slug":"kiem-tra","link":"#kiem-tra","children":[]}]},{"level":2,"title":"6.1 UserUpdateStatusDTO","slug":"_6-1-userupdatestatusdto","link":"#_6-1-userupdatestatusdto","children":[{"level":3,"title":"Giải thích mã","slug":"giai-thich-ma-3","link":"#giai-thich-ma-3","children":[]}]},{"level":2,"title":"6.2 UserController","slug":"_6-2-usercontroller","link":"#_6-2-usercontroller","children":[{"level":3,"title":"Giải thích mã","slug":"giai-thich-ma-4","link":"#giai-thich-ma-4","children":[]},{"level":3,"title":"Giải thích mã","slug":"giai-thich-ma-5","link":"#giai-thich-ma-5","children":[]}]},{"level":2,"title":"8.1 Tập Tin Cấu Hình Ứng Dụng","slug":"_8-1-tap-tin-cau-hinh-ung-dung","link":"#_8-1-tap-tin-cau-hinh-ung-dung","children":[]},{"level":2,"title":"8.2 Cấu Hình Validation","slug":"_8-2-cau-hinh-validation","link":"#_8-2-cau-hinh-validation","children":[]},{"level":2,"title":"8.3 UserUpdateDTO","slug":"_8-3-userupdatedto","link":"#_8-3-userupdatedto","children":[]},{"level":2,"title":"8.4 UserController","slug":"_8-4-usercontroller","link":"#_8-4-usercontroller","children":[]}],"git":{"createdTime":1727889650000,"updatedTime":1727889650000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":31.73,"words":9518},"filePathRelative":"framework/spring-boot/validation.md","localizedDate":"October 2, 2024","excerpt":"\\n<hr>\\n<blockquote>\\n<p>Bài viết này cung cấp mã nguồn đầy đủ, có thể xem tại <a href=\\"https://github.com/YunaiV/SpringBoot-Labs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/YunaiV/SpringBoot-Labs</a> trong thư mục <a href=\\"https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-22\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">lab-22</a>.</p>\\n<p>Việc viết nội dung gốc không hề dễ dàng, hãy cho mình một <a href=\\"https://github.com/YunaiV/SpringBoot-Labs/stargazers\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Star</a> nhé, cùng nhau phát triển nào!</p>\\n</blockquote>","autoDesc":true}');export{p as comp,r as data};
