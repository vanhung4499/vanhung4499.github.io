import{_ as s,o as n,c as a,d as i}from"./app-eD31-AQ-.js";const e={},t=i(`<h1 id="kiem-tra-kieu-du-lieu-trong-js" tabindex="-1"><a class="header-anchor" href="#kiem-tra-kieu-du-lieu-trong-js"><span>Kiểm tra kiểu dữ liệu trong JS</span></a></h1><p>Có một số phương pháp để kiểm tra kiểu dữ liệu:</p><ol><li><code>typeof</code></li><li><code>instanceof</code></li><li><code>Object.prototype.toString</code></li><li><code>constructor</code></li></ol><h2 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof"><span>typeof</span></a></h2><p>Toán tử <code>typeof</code> trả về một chuỗi biểu thị kiểu dữ liệu chưa được tính toán của toán hạng.</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> undefined</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;undefined&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;object&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;number&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> NaN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;number&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;boolean&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;foo&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;string&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> () {};</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;function&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;object&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">typeof</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// &quot;object&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Toán tử <code>typeof</code> thích hợp để kiểm tra kiểu dữ liệu của các loại cơ bản (trừ <code>null</code>) và kiểu dữ liệu <code>function</code>, nhưng không phù hợp để kiểm tra kiểu dữ liệu của các loại dữ liệu tham chiếu như mảng (Array).</p><p>Xem thêm thông tin chi tiết tại <a href="../expressions/operators/typeof">typeof Operator</a>.</p><h2 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof"><span>instanceof</span></a></h2><p>Toán tử <code>instanceof</code> được sử dụng để kiểm tra xem một đối tượng có xuất hiện trong chuỗi nguyên mẫu của nó hay không.</p><p>Toán tử <code>instanceof</code> yêu cầu đối tượng bên trái là một đối tượng, nếu không sẽ trả về <code>false</code>. Đối tượng bên phải phải là một hàm hoặc một hàm tạo, nếu không sẽ trả về một ngoại lệ <code>TypeError</code>.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">obj</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> instanceof</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> constr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Person</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Person</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">constructor</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ben</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">ben</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> instanceof</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> one</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Person</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">one</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> instanceof</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Person</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">one</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> instanceof</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// false</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">ben</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> instanceof</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Person</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// true</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mọi hàm tạo đều có một thuộc tính <code>prototype</code> là một đối tượng nguyên mẫu, đối tượng được tạo ra từ <code>new</code> sẽ có nguyên mẫu này.</p><p>📍 Toán tử <code>instanceof</code> thích hợp để kiểm tra xem một đối tượng có thuộc về kiểu dữ liệu như Array, Date và RegExp hay không.</p><p>📍 Toán tử <code>instanceof</code> không thể sử dụng để kiểm tra giữa các cửa sổ (window) hoặc giữa các <code>iframe</code>.</p><p>Xem thêm thông tin chi tiết tại <a href="../expressions/operators/instanceof">instanceof</a>.</p><h2 id="object-prototype-tostring" tabindex="-1"><a class="header-anchor" href="#object-prototype-tostring"><span>Object.prototype.toString</span></a></h2><p>Có thể sử dụng <code>toString()</code> để lấy kiểu dữ liệu của mỗi đối tượng.</p><p>Để đảm bảo rằng mọi đối tượng đều có thể được kiểm tra bằng <code>Object.prototype.toString</code>, nó phải được gọi bằng cách sử dụng <code>Function.prototype.call</code> hoặc <code>Function.prototype.apply</code>, và truyền đối tượng cần kiểm tra làm tham số đầu tiên.</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Obejct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">undefined</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)；</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">//  &quot;[object Undefined]&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Obejct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)；</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">//  &quot;[object Null]&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Obejct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)；</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">//  &quot;[object Boolean]&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Obejct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)；</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">/// &quot;[object String]&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Obejct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">123</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)；</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">//  &quot;[object Number]&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Obejct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">([])；</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">//  &quot;[object Array]&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Obejct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({})；</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">//  &quot;[object Object]&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>💡 Sử dụng phương pháp <code>Object.prototype.toString</code> để xác định chính xác kiểu dữ liệu của một giá trị.</p><p>⚠️ <strong>Lưu ý</strong>:</p><ul><li><strong>Ghi đè phương thức</strong>: <code>Object.prototype.toString</code> là một phương thức nguyên mẫu của Object, nhưng các kiểu dữ liệu như Array hoặc Function đã ghi đè phương thức <code>toString</code>. Do đó, khi gọi phương thức <code>toString</code> trên các kiểu dữ liệu khác nhau, nó sẽ gọi phương thức <code>toString</code> đã được ghi đè, chứ không phải phương thức <code>toString</code> nguyên mẫu của Object, vì vậy không thể lấy được kiểu dữ liệu của đối tượng bằng cách sử dụng <code>xxx.toString()</code>.</li><li>Đối với các đối tượng không phải là mảng, việc sử dụng <code>Object.prototype.toString</code> sẽ trả về chuỗi <code>&quot;[object Object]&quot;</code>. Điều này không cho phép xác định kiểu dữ liệu cụ thể của đối tượng.</li><li>Đối với các đối tượng mảng, việc sử dụng <code>Object.prototype.toString</code> sẽ trả về chuỗi <code>&quot;[object Array]&quot;</code>. Điều này cho phép xác định đối tượng là một mảng.</li></ul><h2 id="kiem-tra-mang" tabindex="-1"><a class="header-anchor" href="#kiem-tra-mang"><span>Kiểm tra mảng</span></a></h2><p>ECMAScript 5 đã chính thức giới thiệu phương thức <code>Array.isArray()</code> vào JavaScript, phương thức này có thể kiểm tra một biến có phải là một mảng hay không.</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">variable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div>`,27),o=[t];function l(r,p){return n(),a("div",null,o)}const d=s(e,[["render",l],["__file","type-check.html.vue"]]),k=JSON.parse('{"path":"/programming/js/basic/data-types/type-check.html","title":"Type Check","lang":"en-US","frontmatter":{"title":"Type Check","tags":["js","programming"],"categories":["js","programming"],"date created":"2023-07-31T00:00:00.000Z","date modified":"2023-07-31T00:00:00.000Z","description":"Kiểm tra kiểu dữ liệu trong JS Có một số phương pháp để kiểm tra kiểu dữ liệu: typeof instanceof Object.prototype.toString constructor typeof Toán tử typeof trả về một chuỗi biể...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/programming/js/basic/data-types/type-check.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Type Check"}],["meta",{"property":"og:description","content":"Kiểm tra kiểu dữ liệu trong JS Có một số phương pháp để kiểm tra kiểu dữ liệu: typeof instanceof Object.prototype.toString constructor typeof Toán tử typeof trả về một chuỗi biể..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"programming"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Check\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"typeof","slug":"typeof","link":"#typeof","children":[]},{"level":2,"title":"instanceof","slug":"instanceof","link":"#instanceof","children":[]},{"level":2,"title":"Object.prototype.toString","slug":"object-prototype-tostring","link":"#object-prototype-tostring","children":[]},{"level":2,"title":"Kiểm tra mảng","slug":"kiem-tra-mang","link":"#kiem-tra-mang","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":2.79,"words":837},"filePathRelative":"programming/js/basic/data-types/type-check.md","localizedDate":"June 28, 2024","excerpt":"\\n<p>Có một số phương pháp để kiểm tra kiểu dữ liệu:</p>\\n<ol>\\n<li><code>typeof</code></li>\\n<li><code>instanceof</code></li>\\n<li><code>Object.prototype.toString</code></li>\\n<li><code>constructor</code></li>\\n</ol>\\n<h2>typeof</h2>\\n<p>Toán tử <code>typeof</code> trả về một chuỗi biểu thị kiểu dữ liệu chưa được tính toán của toán hạng.</p>","autoDesc":true}');export{d as comp,k as data};
