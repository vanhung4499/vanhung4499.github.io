import{_ as s,o as a,c as n,a as e}from"./app-BRTHG7K9.js";const i={},r=e(`<h1 id="数据权限" tabindex="-1"><a class="header-anchor" href="#数据权限"><span>数据权限</span></a></h1><p>数据权限，实现指定用户可以操作<strong>指定范围</strong>的数据。例如说，针对员工信息的数据权限：</p><table><thead><tr><th>用户</th><th>数据范围</th></tr></thead><tbody><tr><td>普通员工</td><td>自己</td></tr><tr><td>部门领导</td><td>所属部门的所有员工</td></tr><tr><td>HR 小姐姐</td><td>整个公司的所有员工</td></tr></tbody></table><p>上述的这个示例，使用硬编码是可以实现的，并且也非常简单。但是，在业务快速迭代的过程中，类似这种数据需求会越来越多，如果全部采用硬编码的方式，无疑会给我们带来非常大的开发与维护成本。</p><p>因此，项目提供 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-biz-data-permission/" target="_blank" rel="noopener noreferrer"><code>yudao-spring-boot-starter-biz-data-permission</code></a> 技术组件，只需要少量的编码，无需入侵到业务代码，即可实现数据权限。</p><p>友情提示：数据权限是否支持指定用户只能查看数据的某些字段？</p><p>不支持。权限可以分成三类：功能权限、数据权限、字段权限。</p><p>字段权限的控制，不属于数据权限，而是属于字段权限，会在未来提供，敬请期待。</p><h2 id="_1-实现原理" tabindex="-1"><a class="header-anchor" href="#_1-实现原理"><span><a href="#_1-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86">#</a> 1. 实现原理</span></a></h2><p><code>yudao-spring-boot-starter-biz-data-permission</code> 技术组件的实现原理非常简单，每次对数据库操作时，他会<strong>自动</strong>拼接 <code>WHERE data_column = ?</code> 条件来进行数据的过滤。</p><p>例如说，查看员工信息的功能，对应 SQL 是 <code>SELECT * FROM system_users</code>，那么拼接后的 SQL 结果会是：</p><table><thead><tr><th>用户</th><th>数据范围</th><th>SQL</th></tr></thead><tbody><tr><td>普通员工</td><td>自己</td><td><code>SELECT * FROM system_users WHERE id = 自己</code></td></tr><tr><td>部门领导</td><td>所属部门的所有员工</td><td><code>SELECT * FROM system_users WHERE dept_id = 自己的部门</code></td></tr><tr><td>HR 小姐姐</td><td>整个公司的所有员工</td><td><code>SELECT * FROM system_users</code> <strong>无需拼接</strong></td></tr></tbody></table><p>明白了实现原理之后，想要进一步加入理解，后续可以找时间 Debug 调试下 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/aop/DataPermissionAnnotationInterceptor.java" target="_blank" rel="noopener noreferrer">DataPermissionDatabaseInterceptor</a> 类的这三个方法：</p><ul><li><code>#processSelect(...)</code> 方法：处理 SELECT 语句的 WHERE 条件。</li><li><code>#processUpdate(...)</code> 方法：处理 UPDATE 语句的 WHERE 条件。</li><li><code>#processDelete(...)</code> 方法：处理 DELETE 语句的 WHERE 条件。</li></ul><h2 id="_2-基于部门的数据权限" tabindex="-1"><a class="header-anchor" href="#_2-基于部门的数据权限"><span><a href="#_2-%E5%9F%BA%E4%BA%8E%E9%83%A8%E9%97%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90">#</a> 2. 基于部门的数据权限</span></a></h2><p>项目<strong>内置</strong>了基于部门的数据权限，支持 5 种数据范围：</p><ol><li>全部数据权限：无数据权限的限制。</li><li>指定部门数据权限：根据实际需要，设置可操作的部门。</li><li>本部门数据权限：只能操作用户所在的部门。</li><li>本部门及以下数据权限：在【本部门数据权限】的基础上，额外可操作子部门。</li><li>仅本人数据权限：<strong>相对特殊</strong>，只能操作自己的数据。</li></ol><h3 id="_2-1-后台配置" tabindex="-1"><a class="header-anchor" href="#_2-1-后台配置"><span><a href="#_2-1-%E5%90%8E%E5%8F%B0%E9%85%8D%E7%BD%AE">#</a> 2.1 后台配置</span></a></h3><p>可通过管理后台的 [系统管理 -&gt; 角色管理] 菜单，设置用户角色的数据权限。</p><figure><img src="https://doc.iocoder.cn/img/数据权限/01.png" alt="角色管理" tabindex="0" loading="lazy"><figcaption>角色管理</figcaption></figure><p>实现代码？</p><p>可见 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/dept/rule/DeptDataPermissionRule.java" target="_blank" rel="noopener noreferrer">DeptDataPermissionRule</a> 数据权限规则。</p><h3 id="_2-2-字段配置" tabindex="-1"><a class="header-anchor" href="#_2-2-字段配置"><span><a href="#_2-2-%E5%AD%97%E6%AE%B5%E9%85%8D%E7%BD%AE">#</a> 2.2 字段配置</span></a></h3><p>每个 Maven Module， 通过自定义 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/dept/rule/DeptDataPermissionRuleCustomizer.java" target="_blank" rel="noopener noreferrer">DeptDataPermissionRuleCustomizer</a> Bean，配置哪些表的哪些字段，进行数据权限的过滤。以 <code>yudao-module-system</code> 模块来举例子，代码如下：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>@Configuration(proxyBeanMethods = false)</span></span>
<span class="line"><span>public class DataPermissionConfiguration {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Bean</span></span>
<span class="line"><span>    public DeptDataPermissionRuleCustomizer sysDeptDataPermissionRuleCustomizer() {</span></span>
<span class="line"><span>        return rule -&gt; {</span></span>
<span class="line"><span>            // dept 基于部门的数据权限</span></span>
<span class="line"><span>            rule.addDeptColumn(AdminUserDO.class); // WHERE dept_id = ?</span></span>
<span class="line"><span>            rule.addDeptColumn(DeptDO.class, &quot;id&quot;); // WHERE id = ?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            // user 基于用户的数据权限</span></span>
<span class="line"><span>            rule.addUserColumn(AdminUserDO.class, &quot;id&quot;); // WHERE id = ?</span></span>
<span class="line"><span>//            rule.addUserColumn(OrderDO.class); // WHERE user_id = ?</span></span>
<span class="line"><span>        };</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong>，数据库的表字段必须添加：</p><ul><li>基于【部门】过滤数据权限的表，需要添加部门编号字段，例如说 <code>dept_id</code> 字段。</li><li>基于【用户】过滤数据权限的表，需要添加部门用户字段，例如说 <code>user_id</code> 字段。</li></ul><h2 id="_3-datapermission-注解" tabindex="-1"><a class="header-anchor" href="#_3-datapermission-注解"><span><a href="#_3-datapermission-%E6%B3%A8%E8%A7%A3">#</a> 3. @DataPermission 注解</span></a></h2><p><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/annotation/DataPermission.java" target="_blank" rel="noopener noreferrer"><code>@DataPermission</code></a> 数据权限注解，可声明在类或者方法上，配置使用的数据权限规则。</p><p>① <code>enable</code> 属性：当前类或方法是否开启数据权限，默认是 <code>true</code> 开启状态，可设置 <code>false</code> 禁用状态。</p><p><strong>也就是说，数据权限默认是开启的，无需添加 <code>@DataPermission</code> 注解</strong><br><strong>也就是说，数据权限默认是开启的，无需添加 <code>@DataPermission</code> 注解</strong><br><strong>也就是说，数据权限默认是开启的，无需添加 <code>@DataPermission</code> 注解</strong></p><p>使用示例如下，可见 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/UserProfileController.java#L59-L82" target="_blank" rel="noopener noreferrer">UserProfileController</a> 类：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>// UserProfileController.java</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@GetMapping(&quot;/get&quot;)</span></span>
<span class="line"><span>@Operation(summary = &quot;获得登录用户信息&quot;)</span></span>
<span class="line"><span>@DataPermission(enable = false) // 关闭数据权限，避免只查看自己时，查询不到部门。</span></span>
<span class="line"><span>public CommonResult&lt;UserProfileRespVO&gt; profile() {</span></span>
<span class="line"><span>    // .. 省略代码</span></span>
<span class="line"><span>    if (user.getDeptId() != null) {</span></span>
<span class="line"><span>        DeptDO dept = deptService.getDept(user.getDeptId());</span></span>
<span class="line"><span>        resp.setDept(UserConvert.INSTANCE.convert02(dept));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    // .. 省略代码</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>② <code>includeRules</code> 属性，配置生效的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/DataPermissionRule.java" target="_blank" rel="noopener noreferrer">DataPermissionRule</a> 数据权限规则。例如说，项目里有 10 种 DataPermissionRule 规则，某个方法<strong>只想</strong>其中的 1 种生效，则可以使用该属性。</p><p>③ <code>excludeRules</code> 属性，配置排除的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/DataPermissionRule.java" target="_blank" rel="noopener noreferrer">DataPermissionRule</a> 数据权限规则。例如说，项目里有 10 种 DataPermissionRule 规则，某个方法<strong>不想</strong>其中的 1 种生效，则可以使用该属性。</p><h2 id="_4-自定义的数据权限规则" tabindex="-1"><a class="header-anchor" href="#_4-自定义的数据权限规则"><span><a href="#_4-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90%E8%A7%84%E5%88%99">#</a> 4. 自定义的数据权限规则</span></a></h2><p>如果想要自定义数据权限规则，只需要实现 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/DataPermissionRule.java" target="_blank" rel="noopener noreferrer">DataPermissionRule</a> 数据权限规则接口，并声明成 Spring Bean 即可。需要实现的只有两个方法：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>public interface DataPermissionRule {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 返回需要生效的表名数组</span></span>
<span class="line"><span>     * 为什么需要该方法？Data Permission 数组基于 SQL 重写，通过 Where 返回只有权限的数据</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * 如果需要基于实体名获得表名，可调用 {@link TableInfoHelper#getTableInfo(Class)} 获得</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @return 表名数组</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    Set&lt;String&gt; getTableNames();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 根据表名和别名，生成对应的 WHERE / OR 过滤条件</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @param tableName 表名</span></span>
<span class="line"><span>     * @param tableAlias 别名，可能为空</span></span>
<span class="line"><span>     * @return 过滤条件 Expression 表达式</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    Expression getExpression(String tableName, Alias tableAlias);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>#getTableNames()</code> 方法：<strong>哪些数据库表</strong>，需要使用该数据权限规则。</li><li><code>#getExpression(...)</code> 方法：当操作这些数据库表，需要额外拼接<strong>怎么样的 WHERE 条件</strong>。</li></ul><p>下面，艿艿带你写个自定义数据权限规则的示例，它的数据权限规则是：</p><ul><li>针对 <code>system_dict_type</code> 表，它的创建人 <code>creator</code> 要是当前用户。</li><li>针对 <code>system_post</code> 表，它的更新人 <code>updater</code> 要是当前用户。</li></ul><p>具体实现代码如下：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>package cn.iocoder.yudao.module.system.framework.datapermission;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import cn.iocoder.yudao.framework.datapermission.core.rule.DataPermissionRule;</span></span>
<span class="line"><span>import cn.iocoder.yudao.framework.mybatis.core.util.MyBatisUtils;</span></span>
<span class="line"><span>import cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils;</span></span>
<span class="line"><span>import com.google.common.collect.Sets;</span></span>
<span class="line"><span>import net.sf.jsqlparser.expression.Alias;</span></span>
<span class="line"><span>import net.sf.jsqlparser.expression.Expression;</span></span>
<span class="line"><span>import net.sf.jsqlparser.expression.LongValue;</span></span>
<span class="line"><span>import net.sf.jsqlparser.expression.operators.relational.EqualsTo;</span></span>
<span class="line"><span>import org.springframework.stereotype.Component;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.Set;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Component // 声明为 Spring Bean，保证被 yudao-spring-boot-starter-biz-data-permission 组件扫描到</span></span>
<span class="line"><span>public class DemoDataPermissionRule implements DataPermissionRule {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public Set&lt;String&gt; getTableNames() {</span></span>
<span class="line"><span>        return Sets.newHashSet(&quot;system_dict_type&quot;, &quot;system_post&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public Expression getExpression(String tableName, Alias tableAlias) {</span></span>
<span class="line"><span>        Long userId = SecurityFrameworkUtils.getLoginUserId();</span></span>
<span class="line"><span>        assert userId != null;</span></span>
<span class="line"><span>        switch (tableName) {</span></span>
<span class="line"><span>            case &quot;system_dict_type&quot;:</span></span>
<span class="line"><span>                return new EqualsTo(MyBatisUtils.buildColumn(tableName, tableAlias, &quot;creator&quot;), new LongValue(userId));</span></span>
<span class="line"><span>            case &quot;system_post&quot;:</span></span>
<span class="line"><span>                return new EqualsTo(MyBatisUtils.buildColumn(tableName, tableAlias, &quot;updater&quot;), new LongValue(userId));</span></span>
<span class="line"><span>            default: return null;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>① 启动前端 + 后端项目。</p><p>② 访问 [系统管理 -&gt; 字典管理] 菜单，查看 IDEA 控制台，可以看到 <code>system_dict_type</code> 表的查询自动拼接了 <code>AND creator = 1</code> 的查询条件。</p><figure><img src="https://doc.iocoder.cn/img/数据权限/02.png" alt="字典管理" tabindex="0" loading="lazy"><figcaption>字典管理</figcaption></figure><p>② 访问 [系统管理 -&gt; 岗位管理] 菜单，查看 IDEA 控制台，可以看到 <code>system_post</code> 表的查询自动拼接了 <code>AND updater = 1</code> 的查询条件。</p><figure><img src="https://doc.iocoder.cn/img/数据权限/03.png" alt="字典管理" tabindex="0" loading="lazy"><figcaption>字典管理</figcaption></figure><h2 id="_5-社区贡献的数据权限规则" tabindex="-1"><a class="header-anchor" href="#_5-社区贡献的数据权限规则"><span><a href="#_5-%E7%A4%BE%E5%8C%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90%E8%A7%84%E5%88%99">#</a> 5. 社区贡献的数据权限规则</span></a></h2><ul><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/issues/477" target="_blank" rel="noopener noreferrer">数据权限组件改进建议：改成更通用的，取消内置的部门数据权限</a></li></ul>`,50),l=[r];function p(o,t){return a(),n("div",null,l)}const c=s(i,[["render",p],["__file","data-permission.html.vue"]]),u=JSON.parse('{"path":"/project/rouyi-vue-pro/data-permission.html","title":"数据权限","lang":"en-US","frontmatter":{"title":"数据权限","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":24,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 实现原理","slug":"_1-实现原理","link":"#_1-实现原理","children":[]},{"level":2,"title":"# 2. 基于部门的数据权限","slug":"_2-基于部门的数据权限","link":"#_2-基于部门的数据权限","children":[{"level":3,"title":"# 2.1 后台配置","slug":"_2-1-后台配置","link":"#_2-1-后台配置","children":[]},{"level":3,"title":"# 2.2 字段配置","slug":"_2-2-字段配置","link":"#_2-2-字段配置","children":[]}]},{"level":2,"title":"# 3. @DataPermission 注解","slug":"_3-datapermission-注解","link":"#_3-datapermission-注解","children":[]},{"level":2,"title":"# 4. 自定义的数据权限规则","slug":"_4-自定义的数据权限规则","link":"#_4-自定义的数据权限规则","children":[]},{"level":2,"title":"# 5. 社区贡献的数据权限规则","slug":"_5-社区贡献的数据权限规则","link":"#_5-社区贡献的数据权限规则","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":6.38,"words":1915},"filePathRelative":"project/rouyi-vue-pro/data-permission.md","localizedDate":"July 7, 2024"}');export{c as comp,u as data};
