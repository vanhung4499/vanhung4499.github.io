import{_ as i,g as t,o as c,c as p,e as n,h as e,f as o,w as d,a as r}from"./app-BRTHG7K9.js";const l={},s=r('<h1 id="支付宝、微信退款接入" tabindex="-1"><a class="header-anchor" href="#支付宝、微信退款接入"><span>支付宝、微信退款接入</span></a></h1><h2 id="_0-概述" tabindex="-1"><a class="header-anchor" href="#_0-概述"><span><a href="#_0-%E6%A6%82%E8%BF%B0">#</a> 0. 概述</span></a></h2><p>在 <code>yudao-module-pay-biz</code> 模块的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/tree/master/yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/demo" target="_blank" rel="noopener noreferrer"><code>demo</code></a> 模块，我们提供了一个 <strong>退款</strong> 接入的示例，它已支持支付宝、微信的所有退款方式。</p><p>下面，我们以 <code>demo</code> 模块为例子，讲解如何接入退款。</p><h2 id="_1-第一步-创建支付订单" tabindex="-1"><a class="header-anchor" href="#_1-第一步-创建支付订单"><span><a href="#_1-%E7%AC%AC%E4%B8%80%E6%AD%A5-%E5%88%9B%E5%BB%BA%E6%94%AF%E4%BB%98%E8%AE%A2%E5%8D%95">#</a> 1. 第一步，创建支付订单</span></a></h2>',5),u=r(`<p>③ 然后，我们在 [支付管理 -&gt; 支付&amp;退款案例] 菜单，可以看到一个可以“发起退款”的订单。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/支付手册/退款接入/发起退款.png" alt="“发起退款”" tabindex="0" loading="lazy"><figcaption>“发起退款”</figcaption></figure><h2 id="_2-第二步-实现退款调用【重要】" tabindex="-1"><a class="header-anchor" href="#_2-第二步-实现退款调用【重要】"><span><a href="#_2-%E7%AC%AC%E4%BA%8C%E6%AD%A5-%E5%AE%9E%E7%8E%B0%E9%80%80%E6%AC%BE%E8%B0%83%E7%94%A8%E3%80%90%E9%87%8D%E8%A6%81%E3%80%91">#</a> 2. 第二步，实现退款调用【重要】</span></a></h2><p>友情提示：由于 demo 模块的退款接入已经实现，这里你只要看懂什么意思即可，不用操作。</p><p>① 【后端】在 <code>demo</code> 模块所在的 <code>yudao-module-xx-biz</code> 模块的 <code>pom.xml</code> 文件，引入 <code>yudao-module-pay-api</code> 依赖，这样才可以调用到 PayOrderApi 接口。代码如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>    &lt;dependency&gt;</span></span>
<span class="line"><span>        &lt;groupId&gt;cn.iocoder.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>        &lt;artifactId&gt;yudao-module-pay-api&lt;/artifactId&gt;</span></span>
<span class="line"><span>        &lt;version&gt;\${revision}&lt;/version&gt;</span></span>
<span class="line"><span>    &lt;/dependency&gt;</span></span></code></pre></div><p>② 【后端】在 <code>demo</code> 模块的下单逻辑中，需要调用 PayRefundApi 的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/demo/PayDemoOrderServiceImpl.java#L190-L203" target="_blank" rel="noopener noreferrer"><code>#createRefund(...)</code></a> 方法，创建退款单。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/支付手册/退款接入/调用PayRefundApi.png" alt="调用 PayRefundApi" tabindex="0" loading="lazy"><figcaption>调用 PayRefundApi</figcaption></figure><h2 id="_3-第三步-实现回调接口【重要】" tabindex="-1"><a class="header-anchor" href="#_3-第三步-实现回调接口【重要】"><span><a href="#_3-%E7%AC%AC%E4%B8%89%E6%AD%A5-%E5%AE%9E%E7%8E%B0%E5%9B%9E%E8%B0%83%E6%8E%A5%E5%8F%A3%E3%80%90%E9%87%8D%E8%A6%81%E3%80%91">#</a> 3. 第三步，实现回调接口【重要】</span></a></h2><p>友情提示：由于 demo 模块的退款接入已经实现，这里你只要看懂什么意思即可，不用操作。</p><p>在 <code>demo</code> 模块所在的 <code>yudao-module-xx-biz</code> 模块，实现一个支付回调的接口，提供给支付【中心】回调。对应的代码在 PayDemoOrderController 的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/demo/PayDemoOrderController.java#L68-L76" target="_blank" rel="noopener noreferrer"><code>#updateDemoOrderPaid(...)</code></a> 方法中，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/支付手册/退款接入/实现回调接口.png" alt="实现回调接口" tabindex="0" loading="lazy"><figcaption>实现回调接口</figcaption></figure><h2 id="_4-第四步-退款功能测试" tabindex="-1"><a class="header-anchor" href="#_4-第四步-退款功能测试"><span><a href="#_4-%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E9%80%80%E6%AC%BE%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95">#</a> 4. 第四步，退款功能测试</span></a></h2><p>至此，我们已经完成了退款接入的所有步骤，接下来，我们来测试一下退款功能。</p><p>① 点击“发起退款”按钮，发起刚支付订单的退款流程。</p><figure><img src="https://doc.iocoder.cn/img/支付手册/退款接入/测试-发起退款.png" alt="发起退款" tabindex="0" loading="lazy"><figcaption>发起退款</figcaption></figure><p>此时，在 <code>pay_refund</code> 表中，会新增一条退款订单记录。</p><p>② 退款成功后，先是支付【中心】的回调接口被回调，然后是 <code>demo</code> 模块的回调接口被回调。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/支付手册/退款接入/测试-退款回调.png" alt="退款回调" tabindex="0" loading="lazy"><figcaption>退款回调</figcaption></figure><p>注意</p><ul><li>支付宝发起退款时，它是直接返回退款成功，所以它没有支付【中心】 PayNotifyController 的异步回调，只有 <code>demo</code> 模块的回调接口被回调。</li><li>微信发起退款时，它是可能返回退款成功，也可能返回退款处理中。微信退款是有支付【中心】 PayNotifyController 的异步回调，也有 <code>demo</code> 模块的回调接口被回调。<br> 至此，我们已经完成退款接入的测试流程，可以试着多多 debug 调试整个流程，并不复杂噢。</li></ul>`,21);function m(g,h){const a=t("RouteLink");return c(),p("div",null,[s,n("p",null,[e("① 如果你是看支付宝退款接入，则需要先看完 "),o(a,{to:"/pay/alipay-pay-demo/"},{default:d(()=>[e("《支付宝支付接入》")]),_:1}),e(" 文档")]),n("p",null,[e("② 如果你是看微信退款接入，则需要先看完 "),o(a,{to:"/pay/wx-pub-pay-demo/"},{default:d(()=>[e("《微信小程序支付接入》")]),_:1}),e(" 或 "),o(a,{to:"/pay/wx-pub-pay-demo/"},{default:d(()=>[e("《微信公众号支付接入》")]),_:1}),e(" 文档")]),u])}const y=i(l,[["render",m],["__file","refund-demo.html.vue"]]),E=JSON.parse('{"path":"/project/rouyi-vue-pro/pay/refund-demo.html","title":"支付宝、微信退款接入","lang":"en-US","frontmatter":{"title":"支付宝、微信退款接入","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":82,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 0. 概述","slug":"_0-概述","link":"#_0-概述","children":[]},{"level":2,"title":"# 1. 第一步，创建支付订单","slug":"_1-第一步-创建支付订单","link":"#_1-第一步-创建支付订单","children":[]},{"level":2,"title":"# 2. 第二步，实现退款调用【重要】","slug":"_2-第二步-实现退款调用【重要】","link":"#_2-第二步-实现退款调用【重要】","children":[]},{"level":2,"title":"# 3. 第三步，实现回调接口【重要】","slug":"_3-第三步-实现回调接口【重要】","link":"#_3-第三步-实现回调接口【重要】","children":[]},{"level":2,"title":"# 4. 第四步，退款功能测试","slug":"_4-第四步-退款功能测试","link":"#_4-第四步-退款功能测试","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":3.35,"words":1006},"filePathRelative":"project/rouyi-vue-pro/pay/refund-demo.md","localizedDate":"July 7, 2024"}');export{y as comp,E as data};
