import{_ as p,g as t,o as l,c as d,e as i,h as a,f as s,w as r,a as e}from"./app-BRTHG7K9.js";const o={},c=e(`<h1 id="选择审批人、发起人自选" tabindex="-1"><a class="header-anchor" href="#选择审批人、发起人自选"><span>选择审批人、发起人自选</span></a></h1><p>相关视频：</p><ul><li><a href="https://t.zsxq.com/04uburRvZ" target="_blank" rel="noopener noreferrer">08、如何实现流程模型的分配规则？</a></li><li><a href="https://t.zsxq.com/04rNvFI2f" target="_blank" rel="noopener noreferrer">14、如何实现流程的任务分配？</a><br> 当用户发起流程（审批）时，会根据【流程定义】创建对应的审批任务，审批任务会根据【审批人规则】，自动分配给对应的审批人。</li></ul><p>审批人可以是固定的角色（比如上级、HR 等），也可以是发起人自选。</p><h2 id="_1-审批人配置" tabindex="-1"><a class="header-anchor" href="#_1-审批人配置"><span><a href="#_1-%E5%AE%A1%E6%89%B9%E4%BA%BA%E9%85%8D%E7%BD%AE">#</a> 1. 审批人配置</span></a></h2><p>在 BPMN 流程设计器重，每个任务节点，有个 [任务（审批人）] 配置项，用于配置任务审批时，审批人的分配。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程设计器的审批人配置.png" alt="流程设计器的审批人配置.png" tabindex="0" loading="lazy"><figcaption>流程设计器的审批人配置.png</figcaption></figure><p>在 BPMN 的 UserTask 节点上，没有合适的内置属性存储“规则类型”、“规则参数”的属性，所以是我们拓展了 <code>candidateStrategy</code> 和 <code>candidateParam</code> 属性，用于存储审批人的规则类型和参数。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/流程设计器的审批人配置的属性.png" alt="流程设计器的审批人配置的属性.png" tabindex="0" loading="lazy"><figcaption>流程设计器的审批人配置的属性.png</figcaption></figure><p>拓展知识：BPMN 的 UserTask 节点，是如何拓展 <code>candidateStrategy</code> 和 <code>candidateParam</code> 属性的呢？</p><p>参见 <a href="https://gitee.com/yudaocode/yudao-ui-admin-vue3/commit/feadd022e7c0e67e5176b0bddc0361f4ef90da4b" target="_blank" rel="noopener noreferrer">feadd02</a>、<a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro/commit/cdbcd4d673d491ad5203b8cdb05b00919deda6c9" target="_blank" rel="noopener noreferrer">797fddf</a> 提交的代码。</p><h2 id="_2-选择审批人" tabindex="-1"><a class="header-anchor" href="#_2-选择审批人"><span><a href="#_2-%E9%80%89%E6%8B%A9%E5%AE%A1%E6%89%B9%E4%BA%BA">#</a> 2. 选择审批人</span></a></h2><p>在上图中，我们可以看到 8 种审批人规则类型，它们都是 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/BpmTaskCandidateStrategy.java" target="_blank" rel="noopener noreferrer">BpmTaskCandidateStrategy</a> 的一种实现，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/BpmTaskCandidateStrategy.png" alt="BpmTaskCandidateStrategy 类图" tabindex="0" loading="lazy"><figcaption>BpmTaskCandidateStrategy 类图</figcaption></figure><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>public interface BpmTaskCandidateStrategy {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 对应策略</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @return 策略</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    BpmTaskCandidateStrategyEnum getStrategy();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 校验参数</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @param param 参数</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    void validateParam(String param);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 基于执行任务，获得任务的候选用户们</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @param execution 执行任务</span></span>
<span class="line"><span>     * @return 用户编号集合</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    Set&lt;Long&gt; calculateUsers(DelegateExecution execution, String param);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 是否一定要输入参数</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @return 是否</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    default boolean isParamRequired() {</span></span>
<span class="line"><span>        return true;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>关键是 <code>calculateUsers</code> 方法，用于计算候选的审批人。</li></ul><p>最终，Flowable 在创建审批任务，分配审批人时，会通过 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/behavior/BpmUserTaskActivityBehavior.java" target="_blank" rel="noopener noreferrer">BpmUserTaskActivityBehavior</a> =&gt; <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/BpmTaskCandidateInvoker.java" target="_blank" rel="noopener noreferrer">BpmTaskCandidateInvoker</a> =&gt; <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/BpmTaskCandidateStrategy.java" target="_blank" rel="noopener noreferrer">BpmTaskCandidateStrategy</a>，时序图如下：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/BPMN流程设计器/审批人分配的时序图.png" alt="审批人分配的时序图" tabindex="0" loading="lazy"><figcaption>审批人分配的时序图</figcaption></figure><h2 id="_3-自定义-bpmtaskcandidatestrategy-策略" tabindex="-1"><a class="header-anchor" href="#_3-自定义-bpmtaskcandidatestrategy-策略"><span><a href="#_3-%E8%87%AA%E5%AE%9A%E4%B9%89-bpmtaskcandidatestrategy-%E7%AD%96%E7%95%A5">#</a> 3. 自定义 BpmTaskCandidateStrategy 策略</span></a></h2><p>① 第一步，在 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/enums/BpmTaskCandidateStrategyEnum.java" target="_blank" rel="noopener noreferrer">BpmTaskCandidateStrategyEnum</a> 中，自定义一个枚举值。</p><p>然后，在 <code>bpm_task_candidate_strategy</code> 数据字典中，配置对应的枚举值。</p><p>② 第二步，创建一个 BpmTaskCandidateStrategy 的实现类，实现对应的逻辑，并注册成 Spring Bean 即可。</p><h2 id="_3-发起人自选" tabindex="-1"><a class="header-anchor" href="#_3-发起人自选"><span><a href="#_3-%E5%8F%91%E8%B5%B7%E4%BA%BA%E8%87%AA%E9%80%89">#</a> 3. 发起人自选</span></a></h2><p>上述的 8 种审批人规则类型中，有一种是【发起人自选】，它是一种特殊的审批人规则类型。在发起流程时，发起人需要选择对应任务的发起人。</p><p>下面，我们分别来看看在【流程表单】、【业务表单】下的例子。</p><h3 id="_3-1-【流程表单】示例" tabindex="-1"><a class="header-anchor" href="#_3-1-【流程表单】示例"><span><a href="#_3-1-%E3%80%90%E6%B5%81%E7%A8%8B%E8%A1%A8%E5%8D%95%E3%80%91%E7%A4%BA%E4%BE%8B">#</a> 3.1 【流程表单】示例</span></a></h3>`,26),g=e('<figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程表单-流程设计器.png" alt="流程设计器" tabindex="0" loading="lazy"><figcaption>流程设计器</figcaption></figure><p>注意，需要保存流程，并进行发布流程。</p><p>② 选择该流程，进行发起流程，则可以看到“指定审批人”的表单。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程表单-指定审批人.png" alt="指定审批人" tabindex="0" loading="lazy"><figcaption>指定审批人</figcaption></figure><p>选择“指定审批人”为“源码”，然后进行提交。</p><p>③ 查看发起流程的详情，可以看到审批人为“源码”。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程表单-流程详情.png" alt="流程详情" tabindex="0" loading="lazy"><figcaption>流程详情</figcaption></figure><h3 id="_3-2-【业务表单】示例" tabindex="-1"><a class="header-anchor" href="#_3-2-【业务表单】示例"><span><a href="#_3-2-%E3%80%90%E4%B8%9A%E5%8A%A1%E8%A1%A8%E5%8D%95%E3%80%91%E7%A4%BA%E4%BE%8B">#</a> 3.2 【业务表单】示例</span></a></h3>',8),m=e('<figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/业务表单-流程设计器.png" alt="流程设计器" tabindex="0" loading="lazy"><figcaption>流程设计器</figcaption></figure><p>注意，需要保存流程，并进行发布流程。</p><p>② 选择该流程，进行发起流程，则可以看到“指定审批人”的表单。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/业务表单-指定审批人.png" alt="指定审批人" tabindex="0" loading="lazy"><figcaption>指定审批人</figcaption></figure><p>选择“指定审批人”为“源码”，然后进行提交。</p><p>③ 查看发起流程的详情，可以看到审批人为“源码”。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/业务表单-流程详情.png" alt="流程详情" tabindex="0" loading="lazy"><figcaption>流程详情</figcaption></figure><h3 id="_3-3-【流程表单】实现原理" tabindex="-1"><a class="header-anchor" href="#_3-3-【流程表单】实现原理"><span><a href="#_3-3-%E3%80%90%E6%B5%81%E7%A8%8B%E8%A1%A8%E5%8D%95%E3%80%91%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86">#</a> 3.3 【流程表单】实现原理</span></a></h3><p>① 在【流程表单】的流程发起界面 <a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/views/bpm/processInstance/create/index.vue#L54-L82" target="_blank" rel="noopener noreferrer"><code>views/bpm/processInstance/create/index.vue</code></a> 中，从后端读取【流程定义】时，发现有任务节点的审批人规则是【发起人自选】，则会增加一个“指定审批人”表单项。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程表单-指定审批人表单.png" alt="指定审批人表单" tabindex="0" loading="lazy"><figcaption>指定审批人表单</figcaption></figure><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程表单-指定审批人表单2.png" alt="指定审批人表单" tabindex="0" loading="lazy"><figcaption>指定审批人表单</figcaption></figure><p>② 在提交流程时，会将选择的审批人，存储到 Flowable 的流程的 <code>variables</code> 中。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程表单-指定审批人表单的存储.png" alt="指定审批人表单的存储" tabindex="0" loading="lazy"><figcaption>指定审批人表单的存储</figcaption></figure><p>③ 最终审批任务在分配审批人时，会读取这个 <code>variables</code>，然后分配给对应的审批人。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/流程表单-指定审批人表单的读取.png" alt="指定审批人表单的读取" tabindex="0" loading="lazy"><figcaption>指定审批人表单的读取</figcaption></figure><h3 id="_3-4-【业务表单】实现原理" tabindex="-1"><a class="header-anchor" href="#_3-4-【业务表单】实现原理"><span><a href="#_3-4-%E3%80%90%E4%B8%9A%E5%8A%A1%E8%A1%A8%E5%8D%95%E3%80%91%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86">#</a> 3.4 【业务表单】实现原理</span></a></h3><p>① 在【业务表单】的流程发起界面 <a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/views/bpm/oa/leave/create.vue#L40-L69" target="_blank" rel="noopener noreferrer"><code>views/bpm/oa/leave/create.vue</code></a></p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/业务表单-指定审批人表单.png" alt="指定审批人表单" tabindex="0" loading="lazy"><figcaption>指定审批人表单</figcaption></figure><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/业务表单-指定审批人表单2.png" alt="指定审批人表单" tabindex="0" loading="lazy"><figcaption>指定审批人表单</figcaption></figure><p>② 在提交流程时，会将选择的审批人，存储到 Flowable 的流程的 <code>variables</code> 中。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/选择审批人/业务表单-指定审批人表单的存储.png" alt="指定审批人表单的存储" tabindex="0" loading="lazy"><figcaption>指定审批人表单的存储</figcaption></figure><p>后续的流程，和「3.3 【流程表单】实现原理」就是一致的！总结来说，就是创建流程指定审批人，创建任务使用指定审批人。</p><h2 id="_4-流程表达式" tabindex="-1"><a class="header-anchor" href="#_4-流程表达式"><span><a href="#_4-%E6%B5%81%E7%A8%8B%E8%A1%A8%E8%BE%BE%E5%BC%8F">#</a> 4. 流程表达式</span></a></h2><p>除了自定义 BpmTaskCandidateStrategy 策略外，还可以使用流程表达式，实现审批人的动态分配。</p><figure><img src="https://doc.iocoder.cn/img/工作流手册/流程表达式/BpmTaskAssignLeaderExpressionConfig.png" alt="流程表达式" tabindex="0" loading="lazy"><figcaption>流程表达式</figcaption></figure>',25);function u(b,f){const n=t("RouteLink");return l(),d("div",null,[c,i("p",null,[a("① 第一步，设置在 "),s(n,{to:"/bpm/use-bpm-form/"},{default:r(()=>[a("《审批接入（流程表单）》")]),_:1}),a(" 的“部门领导审批”任务的审批人规则为【发起人自选】。如下图所示：")]),g,i("p",null,[a("① 第一步，设置在 "),s(n,{to:"/bpm/use-business-form/"},{default:r(()=>[a("《审批接入（业务表单）》")]),_:1}),a(" 的“领导审批”任务的审批人规则为【发起人自选】。如下图所示：")]),m])}const v=p(o,[["render",u],["__file","assignee.html.vue"]]),E=JSON.parse('{"path":"/project/rouyi-vue-pro/bpm/assignee.html","title":"选择审批人、发起人自选","lang":"en-US","frontmatter":{"title":"选择审批人、发起人自选","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":67,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 审批人配置","slug":"_1-审批人配置","link":"#_1-审批人配置","children":[]},{"level":2,"title":"# 2. 选择审批人","slug":"_2-选择审批人","link":"#_2-选择审批人","children":[]},{"level":2,"title":"# 3. 自定义 BpmTaskCandidateStrategy 策略","slug":"_3-自定义-bpmtaskcandidatestrategy-策略","link":"#_3-自定义-bpmtaskcandidatestrategy-策略","children":[]},{"level":2,"title":"# 3. 发起人自选","slug":"_3-发起人自选","link":"#_3-发起人自选","children":[{"level":3,"title":"# 3.1 【流程表单】示例","slug":"_3-1-【流程表单】示例","link":"#_3-1-【流程表单】示例","children":[]},{"level":3,"title":"# 3.2 【业务表单】示例","slug":"_3-2-【业务表单】示例","link":"#_3-2-【业务表单】示例","children":[]},{"level":3,"title":"# 3.3 【流程表单】实现原理","slug":"_3-3-【流程表单】实现原理","link":"#_3-3-【流程表单】实现原理","children":[]},{"level":3,"title":"# 3.4 【业务表单】实现原理","slug":"_3-4-【业务表单】实现原理","link":"#_3-4-【业务表单】实现原理","children":[]}]},{"level":2,"title":"# 4. 流程表达式","slug":"_4-流程表达式","link":"#_4-流程表达式","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":8.3,"words":2491},"filePathRelative":"project/rouyi-vue-pro/bpm/assignee.md","localizedDate":"July 7, 2024"}');export{v as comp,E as data};
