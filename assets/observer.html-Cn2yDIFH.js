import{_ as s,o as n,c as a,d as i}from"./app-CwNOAUqW.js";const l={},e=i(`<h2 id="y-tuong" tabindex="-1"><a class="header-anchor" href="#y-tuong"><span>Ý tưởng</span></a></h2><p><strong>Observer Pattern</strong> là một mẫu thiết kế hành vi cho phép bạn xác định một cơ chế đăng ký, cho phép nhiều đối tượng &quot;quan sát&quot; một đối tượng khác và được thông báo khi sự kiện xảy ra trên đối tượng đó.</p><h2 id="ung-dung" tabindex="-1"><a class="header-anchor" href="#ung-dung"><span>Ứng dụng</span></a></h2><ul><li>Sử dụng Observer Pattern khi việc thay đổi trạng thái của một đối tượng cần thay đổi các đối tượng khác, hoặc khi đối tượng thực tế là không xác định trước hoặc thay đổi động.</li><li>Sử dụng Observer Pattern khi một số đối tượng trong ứng dụng phải quan sát các đối tượng khác. Tuy nhiên, việc quan sát chỉ diễn ra trong một khoảng thời gian hạn chế hoặc trong một số trường hợp cụ thể.</li></ul><h2 id="cau-truc" tabindex="-1"><a class="header-anchor" href="#cau-truc"><span>Cấu trúc</span></a></h2><figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20210519174232.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="giai-thich-cau-truc" tabindex="-1"><a class="header-anchor" href="#giai-thich-cau-truc"><span>Giải thích cấu trúc</span></a></h3><ol><li><strong>Người phát hành</strong> (Publisher) gửi các sự kiện quan trọng đến các đối tượng khác. Sự kiện xảy ra khi trạng thái của người phát hành thay đổi hoặc khi một hành động cụ thể được thực hiện. Người phát hành chứa một cơ chế đăng ký cho phép các người đăng ký mới tham gia và các người đăng ký hiện tại rời khỏi danh sách.</li><li>Khi một sự kiện mới xảy ra, người gửi sẽ lặp qua danh sách đăng ký và gọi phương thức thông báo của mỗi đối tượng đăng ký. Phương thức này được khai báo trong giao diện đăng ký.</li><li><strong>Người đăng ký</strong> (Subscriber) giao diện khai báo phương thức thông báo. Trong hầu hết các trường hợp, giao diện này chỉ chứa một phương thức cập nhật (update). Phương thức này có thể có nhiều tham số, cho phép người phát hành truyền thông tin chi tiết về sự kiện trong quá trình cập nhật.</li><li><strong>Người đăng ký cụ thể</strong> (Concrete Subscribers) có thể thực hiện một số hành động để phản hồi thông báo từ người phát hành. Tất cả các lớp người đăng ký cụ thể đều triển khai cùng một giao diện, do đó người phát hành không cần phụ thuộc vào các lớp cụ thể.</li><li>Người đăng ký thường cần một số thông tin ngữ cảnh để xử lý cập nhật một cách chính xác. Do đó, người phát hành thường truyền một số dữ liệu ngữ cảnh như tham số cho phương thức thông báo. Người phát hành cũng có thể truyền chính nó như một tham số để cho người đăng ký truy cập trực tiếp vào dữ liệu cần thiết.</li><li><strong>Khách hàng</strong> (Client) tạo các đối tượng người phát hành và người đăng ký, sau đó đăng ký người đăng ký với người phát hành để nhận thông báo từ nó.</li></ol><h3 id="mau-code-cau-truc" tabindex="-1"><a class="header-anchor" href="#mau-code-cau-truc"><span>Mẫu code cấu trúc</span></a></h3><p><strong>Subject</strong>: Là lớp chủ đề, lưu trữ tất cả các quan sát viên đăng ký cho chủ đề này, số lượng quan sát viên là tùy ý. Xác định giao diện để <strong>thêm quan sát viên (Attach)</strong> và <strong>xóa quan sát viên (Detach)</strong>.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Observer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> observers </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Observer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> abstract</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> setState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Notify</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> name;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Attach</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Observer</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> observer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        observers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(observer);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Detach</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Observer</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> observer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        observers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">remove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(observer);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Observer</strong>: Là lớp quan sát viên, xác định giao diện <strong>cập nhật (Update)</strong>, khi nhận được thông báo từ Chủ đề, Quan sát viên cần cập nhật thông tin đồng bộ.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Observer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Subject</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Observer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Subject</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> name;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">subject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> subject;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>ConcreteSubject</strong>: Là lớp chủ đề cụ thể, lưu trữ tất cả các quan sát viên quan tâm đến chủ đề này. Khi trạng thái nội bộ thay đổi, nên <strong>thông báo cho tất cả các quan sát viên đã đăng ký (Notify)</strong>.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ConcreteSubject</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteSubject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(name);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> state;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> setState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">state</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> state;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Notify</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;======= &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot; chủ đề có thông báo mới =======&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Observer</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> observer</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> observers) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            observer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ConcreteObserver</strong>: Là lớp quan sát viên cụ thể, triển khai phương thức <strong>cập nhật (Update)</strong> của Observer để đồng bộ thông tin trạng thái với Chủ đề.</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ConcreteObserver</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Observer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteObserver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Subject</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;"> subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(name, subject);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        state </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot; nhận được trạng thái hiện tại: &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> state);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Client</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ObserverPattern</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        ConcreteSubject</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> subject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteSubject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Thời tiết&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        ConcreteObserver</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> observer1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteObserver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;John&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, subject);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        ConcreteObserver</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> observer2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteObserver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Alice&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, subject);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        ConcreteObserver</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> observer3</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ConcreteObserver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Bob&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, subject);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Attach</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(observer1);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Attach</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(observer2);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Attach</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(observer3);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Hôm nay mưa&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Notify</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Detach</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(observer2);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Ngày mai nắng&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        subject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Notify</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Output</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>======= Chủ đề Thời tiết có thông báo mới =======</span></span>
<span class="line"><span>John nhận được trạng thái hiện tại: Hôm nay mưa</span></span>
<span class="line"><span>Alice nhận được trạng thái hiện tại: Hôm nay mưa</span></span>
<span class="line"><span>Bob nhận được trạng thái hiện tại: Hôm nay mưa</span></span>
<span class="line"><span>======= Chủ đề Thời tiết có thông báo mới =======</span></span>
<span class="line"><span>John nhận được trạng thái hiện tại: Ngày mai nắng</span></span>
<span class="line"><span>Bob nhận được trạng thái hiện tại: Ngày mai nắng</span></span></code></pre></div><h2 id="pseudocode" tabindex="-1"><a class="header-anchor" href="#pseudocode"><span>Pseudocode</span></a></h2><p>Trong ví dụ này, mẫu <strong>Quan sát viên</strong> cho phép đối tượng trình soạn thảo văn bản thông báo về các thay đổi trạng thái của nó cho các đối tượng dịch vụ khác.</p><figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20210519175224.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>Danh sách người đăng ký được tạo động: đối tượng có thể bắt đầu hoặc dừng lắng nghe thông báo theo nhu cầu của chương trình.</p><p>Trong cài đặt này, lớp trình soạn thảo không tự quản lý danh sách đăng ký. Nó giao việc này cho một đối tượng trợ giúp đặc biệt chịu trách nhiệm. Bạn cũng có thể nâng cấp đối tượng này thành một trình phân phối sự kiện trung tâm, cho phép bất kỳ đối tượng nào trở thành người phát hành.</p><p>Miễn là người phát hành tương tác với tất cả các người đăng ký thông qua cùng một giao diện, không cần sửa đổi mã của lớp người phát hành hiện có khi thêm người đăng ký vào chương trình.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// The base publisher class includes subscription management</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// code and notification methods.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> EventManager</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> field listeners: hash map of event types and listeners</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method subscribe(eventType, listener) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        listeners.add(eventType, listener)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method unsubscribe(eventType, listener) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        listeners.remove(eventType, listener)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method notify(eventType, data) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        foreach (listener in listeners.of(eventType)) do</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            listener.update(data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// The concrete publisher contains real business logic that&#39;s</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// interesting for some subscribers. We could derive this class</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// from the base publisher, but that isn&#39;t always possible in</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// real life because the concrete publisher might already be a</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// subclass. In this case, you can patch the subscription logic</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// in with composition, as we did here.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Editor</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> field events: EventManager</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> field file: File</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    constructor Editor() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        events = new EventManager()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // Methods of business logic can notify subscribers about</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // changes.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method openFile(path) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.file = new File(path)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        events.notify(&quot;open&quot;, file.name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method saveFile() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        file.write()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        events.notify(&quot;save&quot;, file.name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    // ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Here&#39;s the subscriber interface. If your programming language</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// supports functional types, you can replace the whole</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// subscriber hierarchy with a set of functions.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> EventListener</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method update(filename)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// Concrete subscribers react to updates issued by the publisher</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// they are attached to.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> LoggingListener</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> EventListener</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    private field log: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">File</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    private field message: string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    constructor </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">LoggingListener</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(log_filename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> message) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.log = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">File</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(log_filename)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.message = message</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method update(filename) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        log.write(replace(&#39;%s&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;">filename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;">message))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">class </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EmailAlertsListener</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> implements </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EventListener</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    private field email: string</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    private field message: string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    constructor </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EmailAlertsListener</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(email</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> message) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.email = email</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        this.message = message</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method update(filename) is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        system.email(email</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> replace(&#39;%s&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;">filename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;">message))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// An application can configure publishers and subscribers at</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// runtime.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">class </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Application</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    method config() is</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        editor = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Editor</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        logger = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">LoggingListener</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;/path/to/log.txt&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Someone</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> has opened the file: %s&quot;)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        editor.events.subscribe(&quot;open&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> logger)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        emailAlerts = new </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EmailAlertsListener</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;admin@example.com&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Someone</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> has changed the file: %s&quot;)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        editor.events.subscribe(&quot;save&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> emailAlerts)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="moi-quan-he-voi-cac-mau-khac" tabindex="-1"><a class="header-anchor" href="#moi-quan-he-voi-cac-mau-khac"><span>Mối quan hệ với các mẫu khác</span></a></h2><ul><li>[[Chain Of Responsibility Pattern]], [[Command Pattern]], [[Mediator Pattern]] và [[Observer Pattern]] được sử dụng để xử lý các cách kết nối khác nhau giữa người gửi yêu cầu và người nhận: <ul><li><em>Chain of Responsibility</em> chuyển tiếp yêu cầu động theo thứ tự cho một loạt các người nhận tiềm năng cho đến khi một người nhận xử lý yêu cầu.</li><li><em>Command</em> thiết lập một kết nối một chiều giữa người gửi và người nhận yêu cầu.</li><li><em>Mediator</em> loại bỏ kết nối trực tiếp giữa người gửi và người nhận, buộc họ giao tiếp gián tiếp thông qua một đối tượng trung gian.</li><li><em>Observer</em> cho phép người nhận đăng ký hoặc hủy đăng ký động để nhận yêu cầu.</li></ul></li><li>Sự khác biệt giữa [[Mediator Pattern]] và [[Observer Pattern]] thường khó nhớ. Trong hầu hết các trường hợp, bạn có thể sử dụng một trong hai mẫu này, và đôi khi bạn có thể sử dụng cả hai cùng một lúc. Hãy xem cách làm điều đó. <ul><li>Mục tiêu chính của <em>Mediator</em> là loại bỏ sự phụ thuộc lẫn nhau giữa các thành phần của hệ thống. Các thành phần này sẽ phụ thuộc vào cùng một đối tượng trung gian. Mục tiêu của <em>Observer</em> là thiết lập kết nối động một chiều giữa các đối tượng, cho phép một số đối tượng phụ thuộc vào các đối tượng khác để thực hiện chức năng phụ.</li><li>Có một cách phổ biến để triển khai <em>Mediator</em> dựa trên <em>Observer</em>. Đối tượng trung gian đóng vai trò như một người phát hành, trong khi các thành phần khác đóng vai trò như các người nghe, có thể đăng ký hoặc hủy đăng ký với người phát hành. Khi <em>Mediator</em> được triển khai theo cách này, nó có thể trông giống như <em>Observer</em> rất nhiều.</li><li>Khi bạn cảm thấy bối rối, hãy nhớ rằng <em>Mediator</em> có thể được triển khai theo cách khác. Ví dụ, bạn có thể liên kết tất cả các thành phần với cùng một đối tượng trung gian một cách vĩnh viễn. Cách triển khai này không giống với <em>Observer</em>, nhưng nó vẫn là một mẫu <em>Mediator</em>.</li><li>Giả sử có một chương trình trong đó tất cả các thành phần trở thành người phát hành và có thể thiết lập kết nối động với nhau. Trong trường hợp đó, không có một đối tượng trung tâm trung gian, mà chỉ có một số người nghe phân tán.</li></ul></li></ul><h2 id="vi-du" tabindex="-1"><a class="header-anchor" href="#vi-du"><span>Ví dụ</span></a></h2><p><strong>Sử dụng ví dụ:</strong> Mẫu Observer rất phổ biến trong mã Java, đặc biệt là trong các thành phần GUI. Nó cung cấp một cách để phản ứng với các sự kiện của thành phần mà không phụ thuộc vào lớp chủ sở hữu khác.</p><p>Dưới đây là một số ví dụ trong thư viện cốt lõi của Java:</p><ul><li><code>java.util.Observer</code>/<code>java.util.Observable</code> (rất ít được sử dụng trong thực tế)</li><li>Tất cả các triển khai của <code>java.util.EventListener</code> (rất phổ biến trong các thành phần Swing)</li><li><code>javax.servlet.http.HttpSessionBindingListener</code></li><li><code>javax.servlet.http.HttpSessionAttributeListener</code></li><li><code>javax.faces.event.PhaseListener</code></li></ul><p><strong>Cách nhận biết:</strong> Mẫu này có thể được nhận biết bằng cách lưu trữ đối tượng trong một danh sách đăng ký và gọi phương thức cập nhật cho các đối tượng trong danh sách khi có sự cập nhật từ phía đối tượng gửi yêu cầu.</p>`,35),t=[e];function r(p,c){return n(),a("div",null,t)}const h=s(l,[["render",r],["__file","observer.html.vue"]]),k=JSON.parse('{"path":"/design/design-pattern/patterns/behavioral/observer.html","title":"Observer Pattern","lang":"en-US","frontmatter":{"title":"Observer Pattern","tags":["design-pattern"],"categories":["design-pattern"],"date created":"2023-10-06T00:00:00.000Z","date modified":"2023-10-06T00:00:00.000Z","description":"Ý tưởng Observer Pattern là một mẫu thiết kế hành vi cho phép bạn xác định một cơ chế đăng ký, cho phép nhiều đối tượng \\"quan sát\\" một đối tượng khác và được thông báo khi sự ki...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/design/design-pattern/patterns/behavioral/observer.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Observer Pattern"}],["meta",{"property":"og:description","content":"Ý tưởng Observer Pattern là một mẫu thiết kế hành vi cho phép bạn xác định một cơ chế đăng ký, cho phép nhiều đối tượng \\"quan sát\\" một đối tượng khác và được thông báo khi sự ki..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20210519174232.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"design-pattern"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Observer Pattern\\",\\"image\\":[\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20210519174232.png\\",\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20210519175224.png\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Ý tưởng","slug":"y-tuong","link":"#y-tuong","children":[]},{"level":2,"title":"Ứng dụng","slug":"ung-dung","link":"#ung-dung","children":[]},{"level":2,"title":"Cấu trúc","slug":"cau-truc","link":"#cau-truc","children":[{"level":3,"title":"Giải thích cấu trúc","slug":"giai-thich-cau-truc","link":"#giai-thich-cau-truc","children":[]},{"level":3,"title":"Mẫu code cấu trúc","slug":"mau-code-cau-truc","link":"#mau-code-cau-truc","children":[]}]},{"level":2,"title":"Pseudocode","slug":"pseudocode","link":"#pseudocode","children":[]},{"level":2,"title":"Mối quan hệ với các mẫu khác","slug":"moi-quan-he-voi-cac-mau-khac","link":"#moi-quan-he-voi-cac-mau-khac","children":[]},{"level":2,"title":"Ví dụ","slug":"vi-du","link":"#vi-du","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":8.29,"words":2488},"filePathRelative":"design/design-pattern/patterns/behavioral/observer.md","localizedDate":"June 28, 2024","excerpt":"<h2>Ý tưởng</h2>\\n<p><strong>Observer Pattern</strong> là một mẫu thiết kế hành vi cho phép bạn xác định một cơ chế đăng ký, cho phép nhiều đối tượng \\"quan sát\\" một đối tượng khác và được thông báo khi sự kiện xảy ra trên đối tượng đó.</p>\\n<h2>Ứng dụng</h2>\\n<ul>\\n<li>Sử dụng Observer Pattern khi việc thay đổi trạng thái của một đối tượng cần thay đổi các đối tượng khác, hoặc khi đối tượng thực tế là không xác định trước hoặc thay đổi động.</li>\\n<li>Sử dụng Observer Pattern khi một số đối tượng trong ứng dụng phải quan sát các đối tượng khác. Tuy nhiên, việc quan sát chỉ diễn ra trong một khoảng thời gian hạn chế hoặc trong một số trường hợp cụ thể.</li>\\n</ul>","autoDesc":true}');export{h as comp,k as data};
