import{_ as a,g as p,o as d,c as s,e as o,f as l,w as t,h as i,a as r}from"./app-5QVbWi7Z.js";const g={};function u(c,e){const n=p("RouteLink");return d(),s("div",null,[e[15]||(e[15]=o("h1",{id:"微信小程序登录",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#微信小程序登录"},[o("span",null,"微信小程序登录")])],-1)),e[16]||(e[16]=o("p",null,"前置阅读文章：",-1)),o("ul",null,[o("li",null,[l(n,{to:"/user-center/"},{default:t(()=>e[0]||(e[0]=[i("《用户体系》")])),_:1})]),o("li",null,[l(n,{to:"/social-user/"},{default:t(()=>e[1]||(e[1]=[i("《三方登录》")])),_:1}),e[3]||(e[3]=o("br",null,null,-1)),e[4]||(e[4]=i(" 本文是 ")),l(n,{to:"/social-user/"},{default:t(()=>e[2]||(e[2]=[i("《三方登录》")])),_:1}),e[5]||(e[5]=i(" 的延伸，讲解 ")),e[6]||(e[6]=o("a",{href:"https://github.com/yudaocode/yudao-mall-uniapp",target:"_blank",rel:"noopener noreferrer"},[o("code",null,"yudao-mall-uniapp")],-1)),e[7]||(e[7]=i(" 商城小程序如何实现微信 ")),e[8]||(e[8]=o("strong",null,"小程序",-1)),e[9]||(e[9]=i(" 登录的功能。"))])]),e[17]||(e[17]=r('<h2 id="_1-小程序准备" tabindex="-1"><a class="header-anchor" href="#_1-小程序准备"><span><a href="#_1-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%87%86%E5%A4%87">#</a> 1. 小程序准备</span></a></h2><p>友情提示：</p><p>本文，我们以“测试小程序”举例子，方便大家操作，认证一个小程序太难了！！！</p><p>① 参考 <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/sandbox.html" target="_blank" rel="noopener noreferrer">微信小程序测试号申请</a> 链接，申请一个测试小程序。</p><p>② 将 <code>AppID</code> 和 <code>AppSecret</code> 配置，设置到后端项目 <code>application-local.yaml</code> 的 <code>wx.miniapp</code> 配置项中。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/会员手册/小程序登录/测试小程序-密钥.png" alt="测试小程序 - 密钥" tabindex="0" loading="lazy"><figcaption>测试小程序 - 密钥</figcaption></figure><figure><img src="https://cloud.iocoder.cn/img/会员手册/小程序登录/后端配置项.png" alt=" 配置项" tabindex="0" loading="lazy"><figcaption> 配置项</figcaption></figure><p>③ 使用 HBuilder 打开 <code>yudao-mall-uniapp</code> 项目根目录的 <code>manifest.json</code> 文件，将微信小程序配置的 AppID 改成你自己的。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/会员手册/小程序登录/配置小程序.png" alt="配置小程序" tabindex="0" loading="lazy"><figcaption>配置小程序</figcaption></figure><h2 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现"><span><a href="#_2-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0">#</a> 2. 代码实现</span></a></h2><h3 id="_2-1-项目启动" tabindex="-1"><a class="header-anchor" href="#_2-1-项目启动"><span><a href="#_2-1-%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8">#</a> 2.1 项目启动</span></a></h3><p>① 下载 <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener noreferrer">微信开发者工具</a>，并进行安装。</p>',12)),o("p",null,[e[11]||(e[11]=i("② 参考 ")),l(n,{to:"/quick-start-front/"},{default:t(()=>e[10]||(e[10]=[i("《快速启动【前端】》")])),_:1}),e[12]||(e[12]=i(" 文档的「2. uni-app 商城移动端」小节，将 ")),e[13]||(e[13]=o("code",null,"yudao-mall-uniapp",-1)),e[14]||(e[14]=i(" 商城项目跑起来。"))]),e[18]||(e[18]=r('<p>不过要注意，HBuilder 运行时，选择「微信开发者工具」。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/会员手册/小程序登录/微信开发者工具运行.png" alt="微信开发者工具运行" tabindex="0" loading="lazy"><figcaption>微信开发者工具运行</figcaption></figure><p>③ 运行成功后，可以在微信开发者工具中，看到如下界面：</p><figure><img src="https://cloud.iocoder.cn/img/会员手册/小程序登录/商城首页.png" alt="商城首页" tabindex="0" loading="lazy"><figcaption>商城首页</figcaption></figure><p>如果请求报错，注意勾选下“不校验合法域名、web-view（业务域名）”选项。</p><p>补充说明：如果你是正式的小程序，需要额外看下这部分的内容：</p><p>① 在小程序的 [管理 -&gt; 成员管理] 菜单，添加自己微信号为开发者。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/会员手册/小程序登录/添加开发者成员.png" alt="添加开发者成员" tabindex="0" loading="lazy"><figcaption>添加开发者成员</figcaption></figure><p>否则，使用 HBuilder 运行时，会报“[微信小程序开发者工具] [error] Error: Fail to open IDE”！</p><h3 id="_2-2-登录流程" tabindex="-1"><a class="header-anchor" href="#_2-2-登录流程"><span><a href="#_2-2-%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B">#</a> 2.2 登录流程</span></a></h3><p>① 点击「我的」菜单，再随便点个子菜单，例如说“拼团订单”，触发弹出“登录窗口”，对应前端 <code>sheep/components/s-auth-modal/s-auth-modal.vue</code> 组件。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/会员手册/小程序登录/登录弹窗.png" alt="登录弹窗" tabindex="0" loading="lazy"><figcaption>登录弹窗</figcaption></figure><p>有两种登录方式：<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html" target="_blank" rel="noopener noreferrer">微信小程序登录</a>、<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/getPhoneNumber.html" target="_blank" rel="noopener noreferrer">手机快速验证登录</a></p><p>② 方式一：【微信小程序登录】点击「微信登录」图标，触发微信小程序登录。前端核心实现都在 <code>sheep/platform/provider/wechat/miniProgram.js</code> 的 <code>#login(...)</code> 方法中。</p><p>此时，前端调用微信小程序获得“临时” <code>code</code> 授权码参数，之后调用后端的 AppAuthController 的 <code>#socialLogin(...)</code> 方法，进行登录逻辑。注意：</p><ul><li>情况一：如果该微信用户已经绑定会员用户，则直接进行登录</li><li>情况二：如果该微信用户没有绑定会员用户，则会自动创建一个会员用户，并进行登录。下次重新登录时，就走【情况一】的逻辑。</li></ul><p>之后，会弹出“授权信息”窗口，对应 <code>sheep/components/s-auth-modal/components/mp-authorization.vue</code> 组件。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/会员手册/小程序登录/授权信息.png" alt="授权信息" tabindex="0" loading="lazy"><figcaption>授权信息</figcaption></figure><ul><li>注意：该弹窗仅仅用于微信小程序的昵称、头像的获取，用户实际已经登录成功了。</li></ul><p>③ 方式二：【手机快速验证登录】点击「快捷登录」按钮，触发一键登录。前端核心实现都在 <code>sheep/platform/provider/wechat/miniProgram.js</code> 的 <code>#mobileLogin(...)</code> 方法中。</p><p>此时，前端调用用微信小程序获得“临时” <code>code</code> 授权参数 + “手机” <code>code</code> 授权参数，之后调用后端的 AppAuthController 的 <code>#weixinMiniAppLogin(...)</code> 方法，进行登录逻辑。注意：</p><ul><li>情况一：如果该手机已经注册用户，则直接进行登录</li><li>情况二：如果该手机没有注册用户，则会自动创建一个会员用户，并进行登录。下次重新登录时，就走【情况一】的逻辑。</li></ul><p>为什么此时要获得“临时” <code>code</code> 授权参数呢？主要想把微信小程序的 <code>openid</code> 和用户绑定起来，毕竟方式二【手机快速验证登录】是需要收费的！！！</p>',23))])}const f=a(g,[["render",u],["__file","weixin-lite-login.html.vue"]]),h=JSON.parse('{"path":"/project/yudao-cloud/member/weixin-lite-login.html","title":"微信小程序登录","lang":"en-US","frontmatter":{"title":"微信小程序登录","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":89,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 小程序准备","slug":"_1-小程序准备","link":"#_1-小程序准备","children":[]},{"level":2,"title":"# 2. 代码实现","slug":"_2-代码实现","link":"#_2-代码实现","children":[{"level":3,"title":"# 2.1 项目启动","slug":"_2-1-项目启动","link":"#_2-1-项目启动","children":[]},{"level":3,"title":"# 2.2 登录流程","slug":"_2-2-登录流程","link":"#_2-2-登录流程","children":[]}]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":4.54,"words":1361},"filePathRelative":"project/yudao-cloud/member/weixin-lite-login.md","localizedDate":"July 7, 2024"}');export{f as comp,h as data};
