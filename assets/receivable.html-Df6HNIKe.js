import{_ as d,g as l,o as p,c as o,e as n,h as e,f as a,w as s,a as c}from"./app-BRTHG7K9.js";const t={},r=n("h1",{id:"【回款】回款管理、回款计划",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#【回款】回款管理、回款计划"},[n("span",null,"【回款】回款管理、回款计划")])],-1),u=n("p",null,"CRM 回款，主要指的是在销售过程中，企业与客户签订销售【合同】后，从客户那里实际收到的款项的记录。",-1),m=n("code",null,"yudao-module-crm-biz",-1),g=n("code",null,"receivable",-1),_=c('<p>目前有两种回款链路，因此表关系如下图所示：</p><ul><li>【合同】=&gt;【回款】</li><li>【合同】=&gt;【回款计划】=&gt;【回款】</li></ul><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/表关系.png" alt="表关系" tabindex="0" loading="lazy"><figcaption>表关系</figcaption></figure><h2 id="_1-回款" tabindex="-1"><a class="header-anchor" href="#_1-回款"><span><a href="#_1-%E5%9B%9E%E6%AC%BE">#</a> 1. 回款</span></a></h2><p>回款，由 <code>yudao-module-crm-biz</code> 后端模块的 <code>receivable</code> 包的 CrmReceivableController 实现。</p><h3 id="_1-表结构" tabindex="-1"><a class="header-anchor" href="#_1-表结构"><span><a href="#_1-%E8%A1%A8%E7%BB%93%E6%9E%84">#</a> 1. 表结构</span></a></h3><blockquote><p>【回款表】省略 creator/create_time/updater/update_time/deleted/tenant_id 等通用字段</p></blockquote><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>CREATE TABLE `crm_receivable` (</span></span>\n<span class="line"><span>  `id` bigint NOT NULL AUTO_INCREMENT COMMENT &#39;ID&#39;,</span></span>\n<span class="line"><span>  `no` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;回款编号&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `customer_id` bigint NOT NULL COMMENT &#39;客户ID&#39;,</span></span>\n<span class="line"><span>  `contract_id` bigint NOT NULL COMMENT &#39;合同ID&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `plan_id` bigint DEFAULT NULL COMMENT &#39;回款计划ID&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `owner_user_id` bigint DEFAULT NULL COMMENT &#39;负责人的用户编号&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `audit_status` tinyint NOT NULL COMMENT &#39;审批状态&#39;,</span></span>\n<span class="line"><span>  `process_instance_id` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;工作流编号&#39;,</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  `price` decimal(24,6) NOT NULL COMMENT &#39;回款金额&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `return_time` datetime DEFAULT NULL COMMENT &#39;回款日期&#39;,</span></span>\n<span class="line"><span>  `return_type` int DEFAULT NULL COMMENT &#39;回款方式&#39;,</span></span>\n<span class="line"><span>  `remark` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;备注&#39;,</span></span>\n<span class="line"><span>  PRIMARY KEY (`id`) USING BTREE</span></span>\n<span class="line"><span>) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;CRM 回款管理&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>① <code>no</code> 字段：回款编号，系统自动生成的，目前格式是 <code>{prefix}{yyyyMMdd}{6 位自增}</code>。具体可见 ErpNoRedisDAO 类。</p><p>② <code>customer_id</code> 和 <code>contract_id</code> 字段：客户编号和合同编号，对应 <code>crm_customer</code> 表和 <code>crm_contract</code> 表的 <code>id</code> 字段，必填。</p><p>③ <code>plan_id</code> 字段：回款计划编号，对应 <code>crm_receivable_plan</code> 表的 <code>id</code> 字段，选填。只有在【合同】=&gt;【回款计划】=&gt;【回款】的情况下，才会有值。</p>',11),b=n("code",null,"owner_user_id",-1),v=n("code",null,"process_instance_id",-1),E=c('<p><code>audit_status</code> 字段：审批结果，目前由 CrmAuditStatusEnum 枚举，目前有 5 个状态：未提交、审批中、审批通过、审批不通过、已取消。</p><p>⑥ <code>price</code> 字段：回款金额。一个合同可能有多次回款，它总的回款金额不能超过合同金额。</p><p>⑦ <code>return_time</code>、<code>return_type</code>、<code>remark</code> 字段：回款日期、回款方式、备注。就是信息字段，没什么特殊逻辑。</p><h3 id="_2-2-管理后台" tabindex="-1"><a class="header-anchor" href="#_2-2-管理后台"><span><a href="#_2-2-%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0">#</a> 2.2 管理后台</span></a></h3><p>对应 [CRM 系统 -&gt; 回款管理] 菜单，对应 <code>yudao-ui-admin-vue3</code> 项目的 <code>@/views/crm/receivable</code> 目录。</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款管理.png" alt="回款管理" tabindex="0" loading="lazy"><figcaption>回款管理</figcaption></figure><p>① 参考 <a href="/crm/contract">《【合同】合同管理、合同提醒》</a> 文档，创建一个合同。注意，必须审核通过，才能进行回款。</p><p>② 点击【新增】按钮，随便填写一些信息，点击「确认」按钮，即可新增一条回款。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款新增.png" alt="新增回款" tabindex="0" loading="lazy"><figcaption>新增回款</figcaption></figure><p>这样，我们就完成了【合同】=&gt;【回款】的整个回款链路。</p><p>② 点击【提交审批】按钮，可以提交审批。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款提交审批.png" alt="提交审批" tabindex="0" loading="lazy"><figcaption>提交审批</figcaption></figure><p>友情提示：</p><p>回款对应的审批流程，需要自己在 [工作流程 -&gt; 流程管理 -&gt; 流程模型] 菜单，配置一个流程标识为 <code>crm-receivable-audit</code> 的流程模型。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/流程模型.png" alt="流程模型" tabindex="0" loading="lazy"><figcaption>流程模型</figcaption></figure>',15),f=c('<p>提交完成后，会自动创建一个工作流实例，并记录到 <code>process_instance_id</code> 字段。之后可点击【查看审批】按钮，查看审批详情。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款审批详情.png" alt="查看审批" tabindex="0" loading="lazy"><figcaption>查看审批</figcaption></figure><p>点击审批【通过】按钮，将回款审批通过，此时它会回调 CrmReceivableResultListener 监听器，更新回款的 <code>audit_status</code> 字段为审批通过。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款审批通过.png" alt="审批通过" tabindex="0" loading="lazy"><figcaption>审批通过</figcaption></figure><p>③ 点击“回款编号”，进入回款详情页，可以查看回款的详细信息，如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款详情.png" alt="回款详情" tabindex="0" loading="lazy"><figcaption>回款详情</figcaption></figure><hr><p>另外，也可以在【合同】的详情页，进行【回款】的创建。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款新增-合同.png" alt="新增回款（合同）" tabindex="0" loading="lazy"><figcaption>新增回款（合同）</figcaption></figure><h2 id="_2-回款计划" tabindex="-1"><a class="header-anchor" href="#_2-回款计划"><span><a href="#_2-%E5%9B%9E%E6%AC%BE%E8%AE%A1%E5%88%92">#</a> 2. 回款计划</span></a></h2><p>回款计划，由 <code>yudao-module-crm-biz</code> 后端模块的 <code>receivable</code> 包的 CrmReceivablePlanController 实现。</p><h3 id="_2-1-表结构" tabindex="-1"><a class="header-anchor" href="#_2-1-表结构"><span><a href="#_2-1-%E8%A1%A8%E7%BB%93%E6%9E%84">#</a> 2.1 表结构</span></a></h3><blockquote><p>【回款计划表】省略 creator/create_time/updater/update_time/deleted/tenant_id 等通用字段</p></blockquote><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>CREATE TABLE `crm_receivable_plan` (</span></span>\n<span class="line"><span>  `id` bigint NOT NULL AUTO_INCREMENT COMMENT &#39;ID&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `period` bigint NOT NULL COMMENT &#39;期数&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `customer_id` bigint NOT NULL COMMENT &#39;客户编号&#39;,</span></span>\n<span class="line"><span>  `contract_id` bigint NOT NULL COMMENT &#39;合同编号&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `owner_user_id` bigint DEFAULT NULL COMMENT &#39;负责人编号&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `receivable_id` bigint DEFAULT NULL COMMENT &#39;回款编号&#39;,</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>  `return_time` datetime DEFAULT NULL COMMENT &#39;计划回款日期&#39;,</span></span>\n<span class="line"><span>  `return_type` tinyint DEFAULT NULL COMMENT &#39;计划还款方式&#39;,</span></span>\n<span class="line"><span>  `price` decimal(24,6) NOT NULL COMMENT &#39;计划回款金额&#39;,</span></span>\n<span class="line"><span>  `remind_days` bigint DEFAULT NULL COMMENT &#39;提前几天提醒&#39;,</span></span>\n<span class="line"><span>  `remind_time` datetime DEFAULT NULL COMMENT &#39;提醒日期&#39;,</span></span>\n<span class="line"><span>  `remark` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;备注&#39;,</span></span>\n<span class="line"><span>  PRIMARY KEY (`id`) USING BTREE</span></span>\n<span class="line"><span>) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;CRM 回款计划&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于 <code>crm_receivable_plan</code> 是 <code>crm_receivable</code> 的计划（草稿），所以结构上非常相似。</p><p>① <code>period</code> 字段：期数，比如第一期、第二期、第三期等。目前是基于 <code>contract_id</code> 在 <code>crm_receivable_plan</code> 表中的最大期数加 1。</p><p>② <code>customer_id</code> 和 <code>contract_id</code> 字段：客户编号和合同编号，对应 <code>crm_customer</code> 表和 <code>crm_contract</code> 表的 <code>id</code> 字段，必填。</p>',17),h=n("code",null,"owner_user_id",-1),T=c('<p>④ <code>receivable_id</code> 字段：回款编号，对应 <code>crm_receivable</code> 表的 <code>id</code> 字段，选填。</p><p>只有在【合同】=&gt;【回款计划】=&gt;【回款】的情况下，才会有值。即基于【回款计划】创建【回款】时，会将【回款】的 <code>id</code> 字段记录到这里。</p><p>⑤ <code>return_time</code>、<code>return_type</code>、<code>price</code>、<code>remind_days</code>、<code>remind_time</code>、<code>remark</code> 字段：回款日期、回款方式、回款金额、提醒天数、提醒日期、备注。就是信息字段，没什么特殊逻辑。</p><p>不过 <code>remind_time</code> 字段，有点特殊，它是 <code>return_time</code> 字段减去 <code>remind_days</code> 字段的日期，后续用于提醒，如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/待回款提醒.png" alt="待回款提醒" tabindex="0" loading="lazy"><figcaption>待回款提醒</figcaption></figure><h3 id="_2-2-管理后台-1" tabindex="-1"><a class="header-anchor" href="#_2-2-管理后台-1"><span><a href="#_2-2-%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0-2">#</a> 2.2 管理后台</span></a></h3><p>对应 [CRM 系统 -&gt; 回款计划] 菜单，对应 <code>yudao-ui-admin-vue3</code> 项目的 <code>@/views/crm/receivable/plan</code> 目录。</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款计划.png" alt="回款计划" tabindex="0" loading="lazy"><figcaption>回款计划</figcaption></figure><p>① 点击【新增】按钮，随便填写一些信息，点击「确认」按钮，即可新增一条回款计划。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款计划新增.png" alt="新增回款计划" tabindex="0" loading="lazy"><figcaption>新增回款计划</figcaption></figure><p>② 点击【创建回款】按钮，可以创建回款。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款新增-回款计划.png" alt="创建回款（回款计划）" tabindex="0" loading="lazy"><figcaption>创建回款（回款计划）</figcaption></figure><p>这样，我们就完成了【合同】=&gt;【回款计划】=&gt;【回款】的整个回款链路。</p><p>③ 点击“期数”，进入回款计划详情页，可以查看回款计划的详细信息，如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款计划详情.png" alt="回款计划详情" tabindex="0" loading="lazy"><figcaption>回款计划详情</figcaption></figure><hr><p>另外，也可以在【合同】的详情页，进行【回款计划】的创建。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/CRM手册/回款/回款计划新增-合同.png" alt="新增回款计划（合同）" tabindex="0" loading="lazy"><figcaption>新增回款计划（合同）</figcaption></figure>',18);function M(N,L){const i=l("RouteLink");return p(),o("div",null,[r,u,n("p",null,[e("回款模块，由 "),m,e(" 后端模块的 "),g,e(" 包实现，已经和 "),a(i,{to:"/bpm/"},{default:s(()=>[e("BPM 工作流")]),_:1}),e(" 打通审批。")]),_,n("p",null,[e("④ "),b,e(" 字段：回款的负责人编号，和线索类似。不重复赘述，详细可见 "),a(i,{to:"/crm/permission/"},{default:s(()=>[e("《【通用】数据权限》")]),_:1}),e(" 文档。")]),n("p",null,[e("⑤ "),v,e(" 字段：工作流编号，用于和 "),a(i,{to:"/bpm/"},{default:s(()=>[e("BPM 工作流")]),_:1}),e(" 打通审批。提交审批后，会自动创建一个工作流实例，并记录到该字段。")]),E,n("p",null,[e("如果不了解怎么配置的同学，可以学习下 "),a(i,{to:"/bpm/"},{default:s(()=>[e("《BPM 工作流》")]),_:1}),e(" 的文档。")]),f,n("p",null,[e("③ "),h,e(" 字段：回款计划的负责人编号，和线索类似。不重复赘述，详细可见 "),a(i,{to:"/crm/permission/"},{default:s(()=>[e("《【通用】数据权限》")]),_:1}),e(" 文档。")]),T])}const A=d(t,[["render",M],["__file","receivable.html.vue"]]),O=JSON.parse('{"path":"/project/yudao-cloud/crm/receivable.html","title":"【回款】回款管理、回款计划","lang":"en-US","frontmatter":{"title":"【回款】回款管理、回款计划","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":128,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 回款","slug":"_1-回款","link":"#_1-回款","children":[{"level":3,"title":"# 1. 表结构","slug":"_1-表结构","link":"#_1-表结构","children":[]},{"level":3,"title":"# 2.2 管理后台","slug":"_2-2-管理后台","link":"#_2-2-管理后台","children":[]}]},{"level":2,"title":"# 2. 回款计划","slug":"_2-回款计划","link":"#_2-回款计划","children":[{"level":3,"title":"# 2.1 表结构","slug":"_2-1-表结构","link":"#_2-1-表结构","children":[]},{"level":3,"title":"# 2.2 管理后台","slug":"_2-2-管理后台-1","link":"#_2-2-管理后台-1","children":[]}]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":7.02,"words":2105},"filePathRelative":"project/yudao-cloud/crm/receivable.md","localizedDate":"July 7, 2024"}');export{A as comp,O as data};
