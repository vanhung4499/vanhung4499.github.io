import{_ as e,o as n,c as s,a as i}from"./app-5QVbWi7Z.js";const l={};function t(p,a){return n(),s("div",null,a[0]||(a[0]=[i(`<h1 id="系统组件" tabindex="-1"><a class="header-anchor" href="#系统组件"><span>系统组件</span></a></h1><h2 id="_1-引入三方组件" tabindex="-1"><a class="header-anchor" href="#_1-引入三方组件"><span><a href="#_1-%E5%BC%95%E5%85%A5%E4%B8%89%E6%96%B9%E7%BB%84%E4%BB%B6">#</a> 1. 引入三方组件</span></a></h2><p>除了 Element UI 组件以及项目内置的系统组件，有时还需要引入其它<a href="https://www.npmjs.com/" target="_blank" rel="noopener noreferrer">三方组件</a>。</p><h3 id="_1-1-如何安装" tabindex="-1"><a class="header-anchor" href="#_1-1-如何安装"><span><a href="#_1-1-%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85">#</a> 1.1 如何安装</span></a></h3><p>这里，以引入 <a href="https://www.npmjs.com/package/vue-count-to" target="_blank" rel="noopener noreferrer">vue-count-to</a> 为例。在终端输入下面的命令完成安装：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>## 加上 --save 参数，会自动添加依赖到 package.json 中去。</span></span>
<span class="line"><span>npm install vue-count-to --save</span></span></code></pre></div><h3 id="_1-2-如何注册" tabindex="-1"><a class="header-anchor" href="#_1-2-如何注册"><span><a href="#_1-2-%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C">#</a> 1.2 如何注册</span></a></h3><p>Vue 注册组件有两种方式：全局注册、局部注册。</p><h4 id="_1-2-1-局部注册" tabindex="-1"><a class="header-anchor" href="#_1-2-1-局部注册"><span><a href="#_1-2-1-%E5%B1%80%E9%83%A8%E6%B3%A8%E5%86%8C">#</a> 1.2.1 局部注册</span></a></h4><p>在对应的 Vue 页面中，使用 <code>components</code> 属性来注册组件。代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>  &lt;countTo :startVal=&#39;startVal&#39; :endVal=&#39;endVal&#39; :duration=&#39;3000&#39;&gt;&lt;/countTo&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>import countTo from &#39;vue-count-to&#39;;</span></span>
<span class="line"><span>export default {</span></span>
<span class="line"><span>  components: { countTo }, // components 属性</span></span>
<span class="line"><span>  data () {</span></span>
<span class="line"><span>    return {</span></span>
<span class="line"><span>      startVal: 0,</span></span>
<span class="line"><span>      endVal: 2017</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-2-全局注册" tabindex="-1"><a class="header-anchor" href="#_1-2-2-全局注册"><span><a href="#_1-2-2-%E5%85%A8%E5%B1%80%E6%B3%A8%E5%86%8C">#</a> 1.2.2 全局注册</span></a></h4><p>① 在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/main.js" target="_blank" rel="noopener noreferrer"><code>main.js</code></a> 中，全局注册组件。代码如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>import countTo from &#39;vue-count-to&#39;</span></span>
<span class="line"><span>Vue.component(&#39;countTo&#39;, countTo)</span></span></code></pre></div><p>② 在对应的 Vue 页面中，直接使用组件，无需注册。代码如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>  &lt;countTo :startVal=&#39;startVal&#39; :endVal=&#39;endVal&#39; :duration=&#39;3000&#39;&gt;&lt;/countTo&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span></code></pre></div><h2 id="_2-系统组件" tabindex="-1"><a class="header-anchor" href="#_2-系统组件"><span><a href="#_2-%E7%B3%BB%E7%BB%9F%E7%BB%84%E4%BB%B6">#</a> 2. 系统组件</span></a></h2><p>项目使用到的相关组件。</p><h3 id="_2-1-基础框架组件" tabindex="-1"><a class="header-anchor" href="#_2-1-基础框架组件"><span><a href="#_2-1-%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6%E7%BB%84%E4%BB%B6">#</a> 2.1 基础框架组件</span></a></h3><p><a href="https://github.com/ElemeFE/element" target="_blank" rel="noopener noreferrer"><code>element-ui</code></a></p><p><a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener noreferrer"><code>vue-element-admin</code></a></p><h3 id="_2-2-树形选择组件" tabindex="-1"><a class="header-anchor" href="#_2-2-树形选择组件"><span><a href="#_2-2-%E6%A0%91%E5%BD%A2%E9%80%89%E6%8B%A9%E7%BB%84%E4%BB%B6">#</a> 2.2 树形选择组件</span></a></h3><p><a href="https://github.com/riophae/vue-treeselect" target="_blank" rel="noopener noreferrer"><code>vue-treeselect</code></a></p><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/system/menu/index.vue#L68-L71" target="_blank" rel="noopener noreferrer"><code>menu/index.vue</code></a> 的使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;el-form-item label=&quot;上级菜单&quot;&gt;</span></span>
<span class="line"><span>  &lt;treeselect v-model=&quot;form.parentId&quot; :options=&quot;menuOptions&quot; :normalizer=&quot;normalizer&quot; :show-count=&quot;true&quot;</span></span>
<span class="line"><span>              placeholder=&quot;选择上级菜单&quot;/&gt;</span></span>
<span class="line"><span>&lt;/el-form-item&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/01.png" alt="树形选择组件" tabindex="0" loading="lazy"><figcaption>树形选择组件</figcaption></figure><h3 id="_2-3-表格分页组件" tabindex="-1"><a class="header-anchor" href="#_2-3-表格分页组件"><span><a href="#_2-3-%E8%A1%A8%E6%A0%BC%E5%88%86%E9%A1%B5%E7%BB%84%E4%BB%B6">#</a> 2.3 表格分页组件</span></a></h3><p><a href="https://element.eleme.io/#/zh-CN/component/pagination" target="_blank" rel="noopener noreferrer"><code>el-pagination</code></a>，二次封装成 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/Pagination/index.vue" target="_blank" rel="noopener noreferrer"><code>pagination</code></a> 组件。</p><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/system/notice/index.vue#L57-L60" target="_blank" rel="noopener noreferrer"><code>notice/index.vue</code></a> 的使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;pagination v-show=&quot;total&gt;0&quot; :total=&quot;total&quot; :page.sync=&quot;queryParams.pageNo&quot; :limit.sync=&quot;queryParams.pageSize&quot;</span></span>
<span class="line"><span>            @pagination=&quot;getList&quot;/&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/03.png" alt="表格分页组件" tabindex="0" loading="lazy"><figcaption>表格分页组件</figcaption></figure><h3 id="_2-4-工具栏右侧组件" tabindex="-1"><a class="header-anchor" href="#_2-4-工具栏右侧组件"><span><a href="#_2-4-%E5%B7%A5%E5%85%B7%E6%A0%8F%E5%8F%B3%E4%BE%A7%E7%BB%84%E4%BB%B6">#</a> 2.4 工具栏右侧组件</span></a></h3><p><a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/RightPanel/index.vue" target="_blank" rel="noopener noreferrer"><code>right-toolbar</code></a></p><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/system/notice/index.vue#L26" target="_blank" rel="noopener noreferrer"><code>notice/index.vue</code></a> 的使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;right-toolbar :showSearch.sync=&quot;showSearch&quot; @queryTable=&quot;getList&quot;&gt;&lt;/right-toolbar&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/04.png" alt="工具栏右侧组件" tabindex="0" loading="lazy"><figcaption>工具栏右侧组件</figcaption></figure><h3 id="_2-5-文件上传组件" tabindex="-1"><a class="header-anchor" href="#_2-5-文件上传组件"><span><a href="#_2-5-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6">#</a> 2.5 文件上传组件</span></a></h3><p><a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/FileUpload/index.vue" target="_blank" rel="noopener noreferrer"><code>file-upload</code></a></p><h3 id="_2-6-图片上传组件" tabindex="-1"><a class="header-anchor" href="#_2-6-图片上传组件"><span><a href="#_2-6-%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6">#</a> 2.6 图片上传组件</span></a></h3><p>图片上传组件 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/ImageUpload/index.vue" target="_blank" rel="noopener noreferrer"><code>image-upload</code></a></p><p>图片预览组件 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/ImagePreview/index.vue" target="_blank" rel="noopener noreferrer"><code>image-preview</code></a></p><h3 id="_2-7-富文本编辑器" tabindex="-1"><a class="header-anchor" href="#_2-7-富文本编辑器"><span><a href="#_2-7-%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8">#</a> 2.7 富文本编辑器</span></a></h3><p><a href="https://github.com/quilljs/quill" target="_blank" rel="noopener noreferrer"><code>quill</code></a>，二次封装成 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/Editor/index.vue" target="_blank" rel="noopener noreferrer">Editor</a> 组件。</p><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/system/notice/index.vue#L94-L96" target="_blank" rel="noopener noreferrer"><code>notice/index.vue</code></a> 的使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;el-form-item label=&quot;内容&quot;&gt;</span></span>
<span class="line"><span>  &lt;editor v-model=&quot;form.content&quot; :min-height=&quot;192&quot;/&gt;</span></span>
<span class="line"><span>&lt;/el-form-item&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/02.png" alt="富文本编辑器" tabindex="0" loading="lazy"><figcaption>富文本编辑器</figcaption></figure><h3 id="_2-8-表单设计组件" tabindex="-1"><a class="header-anchor" href="#_2-8-表单设计组件"><span><a href="#_2-8-%E8%A1%A8%E5%8D%95%E8%AE%BE%E8%AE%A1%E7%BB%84%E4%BB%B6">#</a> 2.8 表单设计组件</span></a></h3><p>① 表单设计组件 <a href="https://github.com/JakHuang/form-generator" target="_blank" rel="noopener noreferrer"><code>form-generator</code></a></p><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/infra/build/index.vue" target="_blank" rel="noopener noreferrer"><code>build/index.vue</code></a> 中使用，效果如下图：</p><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/05.png" alt="表单设计组件" tabindex="0" loading="lazy"><figcaption>表单设计组件</figcaption></figure><p>② 表单展示组件 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/parser/Parser.vue" target="_blank" rel="noopener noreferrer"><code>parser</code></a>，基于 <a href="https://github.com/JakHuang/form-generator" target="_blank" rel="noopener noreferrer"><code>form-generator</code></a> 封装。</p><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/system/notice/index.vue#L94-L96" target="_blank" rel="noopener noreferrer"><code>processInstance/create.vue</code></a> 的使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;parser :key=&quot;new Date().getTime()&quot; :form-conf=&quot;detailForm&quot; @submit=&quot;submitForm&quot; /&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/06.png" alt="表单展示组件" tabindex="0" loading="lazy"><figcaption>表单展示组件</figcaption></figure><h3 id="_2-9-工作流组件" tabindex="-1"><a class="header-anchor" href="#_2-9-工作流组件"><span><a href="#_2-9-%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%BB%84%E4%BB%B6">#</a> 2.9 工作流组件</span></a></h3><p><a href="https://gitee.com/MiyueSC/bpmn-process-designer" target="_blank" rel="noopener noreferrer"><code>bpmn-process-designer</code></a>，二次封装成 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/bpmnProcessDesigner/" target="_blank" rel="noopener noreferrer"><code>bpmnProcessDesigner</code></a> 工作流设计组件</p><p>① 工作流设计组件 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/bpmnProcessDesigner/package/designer/ProcessDesigner.vue" target="_blank" rel="noopener noreferrer"><code>my-process-designer</code></a>，在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/bpm/model/modelEditor.vue" target="_blank" rel="noopener noreferrer"><code>bpm/model/modelEditor.vue</code></a> 中使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;!-- 流程设计器，负责绘制流程等 --&gt;</span></span>
<span class="line"><span>&lt;my-process-designer :key=&quot;\`designer-\${reloadIndex}\`&quot; v-model=&quot;xmlString&quot; v-bind=&quot;controlForm&quot;</span></span>
<span class="line"><span>  keyboard ref=&quot;processDesigner&quot; @init-finished=&quot;initModeler&quot;</span></span>
<span class="line"><span>  @save=&quot;save&quot;/&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!-- 流程属性器，负责编辑每个流程节点的属性 --&gt;</span></span>
<span class="line"><span>&lt;my-properties-panel :key=&quot;\`penal-\${reloadIndex}\`&quot; :bpmn-modeler=&quot;modeler&quot; :prefix=&quot;controlForm.prefix&quot; class=&quot;process-panel&quot;</span></span>
<span class="line"><span>  :model=&quot;model&quot; /&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/07.png" alt="工作流设计组件" tabindex="0" loading="lazy"><figcaption>工作流设计组件</figcaption></figure><p>② 工作流展示组件 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/bpmnProcessDesigner/package/designer/ProcessViewer.vue" target="_blank" rel="noopener noreferrer"><code>my-process-viewer</code></a>，在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/bpm/processInstance/detail.vue#L84-L85" target="_blank" rel="noopener noreferrer"><code>bpm/model/modelEditor.vue</code></a> 中使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;my-process-viewer key=&quot;designer&quot; v-model=&quot;bpmnXML&quot; v-bind=&quot;bpmnControlForm&quot; :activityData=&quot;activityList&quot;</span></span>
<span class="line"><span>            :processInstanceData=&quot;processInstance&quot; :taskData=&quot;tasks&quot; /&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/08.png" alt="工作流展示组件" tabindex="0" loading="lazy"><figcaption>工作流展示组件</figcaption></figure><h3 id="_2-10-cron-表达式组件" tabindex="-1"><a class="header-anchor" href="#_2-10-cron-表达式组件"><span><a href="#_2-10-cron-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%BB%84%E4%BB%B6">#</a> 2.10 Cron 表达式组件</span></a></h3><p><a href="https://github.com/small-stone/vCrontab" target="_blank" rel="noopener noreferrer"><code>vue-crontab</code></a>，二次封装成 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/components/Crontab/index.vue" target="_blank" rel="noopener noreferrer"><code>crontab</code></a> 组件。</p><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/infra/job/index.vue#L122-L124" target="_blank" rel="noopener noreferrer"><code>job/index.vue</code></a> 的使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;crontab @hide=&quot;openCron=false&quot; @fill=&quot;crontabFill&quot; :expression=&quot;expression&quot;&gt;&lt;/crontab&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/09.png" alt="Cron 表达式组件" tabindex="0" loading="lazy"><figcaption>Cron 表达式组件</figcaption></figure><h3 id="_2-11-内容复制组件" tabindex="-1"><a class="header-anchor" href="#_2-11-内容复制组件"><span><a href="#_2-11-%E5%86%85%E5%AE%B9%E5%A4%8D%E5%88%B6%E7%BB%84%E4%BB%B6">#</a> 2.11 内容复制组件</span></a></h3><p><a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener noreferrer"><code>clipboard</code></a>，使用可见 <a href="https://panjiachen.github.io/vue-element-admin-site/zh/feature/component/clipboard.html" target="_blank" rel="noopener noreferrer">文档</a>。</p><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/blob/master/src/views/infra/codegen/index.vue#L70-L78" target="_blank" rel="noopener noreferrer"><code>codegen/index.vue</code></a> 的使用案例：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;el-link :underline=&quot;false&quot; icon=&quot;el-icon-document-copy&quot; style=&quot;float:right&quot;</span></span>
<span class="line"><span>         v-clipboard:copy=&quot;item.code&quot;</span></span>
<span class="line"><span>         v-clipboard:success=&quot;clipboardSuccess&quot;&gt;</span></span>
<span class="line"><span>    复制</span></span>
<span class="line"><span>&lt;/el-link&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue2/系统组件/10.png" alt="复制" tabindex="0" loading="lazy"><figcaption>复制</figcaption></figure><h2 id="_3-其它推荐组件" tabindex="-1"><a class="header-anchor" href="#_3-其它推荐组件"><span><a href="#_3-%E5%85%B6%E5%AE%83%E6%8E%A8%E8%8D%90%E7%BB%84%E4%BB%B6">#</a> 3. 其它推荐组件</span></a></h2><p>推荐一些其它组件，可自己引入后使用。</p><ul><li>Tree Table 树形表格：<a href="https://panjiachen.github.io/vue-element-admin-site/zh/feature/component/tree-table.html" target="_blank" rel="noopener noreferrer">使用文档</a></li><li>Excel 前端直接导出：<a href="https://panjiachen.github.io/vue-element-admin-site/zh/feature/component/excel.html" target="_blank" rel="noopener noreferrer">使用文档</a></li><li>CodeMirror 代码编辑器：<a href="https://github.com/codemirror/CodeMirror" target="_blank" rel="noopener noreferrer">使用文档</a></li><li>wangEditor 文本编辑器：<a href="https://www.wangeditor.com/" target="_blank" rel="noopener noreferrer">使用文档</a></li><li>mavonEditor Markdown 编辑器：<a href="https://github.com/hinesboy/mavonEditor" target="_blank" rel="noopener noreferrer">使用文档</a></li></ul><h2 id="_4-自定义组件" tabindex="-1"><a class="header-anchor" href="#_4-自定义组件"><span><a href="#_4-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6">#</a> 4. 自定义组件</span></a></h2><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue2/tree/master/src/components" target="_blank" rel="noopener noreferrer"><code>@/components</code></a> 目录下，创建 <code>.vue</code> 文件，在通过 <code>components</code> 进行注册即可。</p><h3 id="_4-1-创建使用" tabindex="-1"><a class="header-anchor" href="#_4-1-创建使用"><span><a href="#_4-1-%E5%88%9B%E5%BB%BA%E4%BD%BF%E7%94%A8">#</a> 4.1 创建使用</span></a></h3><p>新建一个简单的 <code>a</code> 组件来举例子。</p><p>① 在 <code>@/components/</code> 目录下，创建 <code>test</code> 文件，再创建 <code>a.vue</code> 文件。代码如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;!-- 子组件 --&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>  &lt;div&gt;这是a组件&lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span></code></pre></div><p>② 在其它 Vue 页面，导入并注册后使用。代码如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;!-- 父组件 --&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>  &lt;div style=&quot;text-align: center; font-size: 20px&quot;&gt;</span></span>
<span class="line"><span>    测试页面</span></span>
<span class="line"><span>    &lt;testa&gt;&lt;/testa&gt; &lt;!-- 3. 使用 --&gt;</span></span>
<span class="line"><span>  &lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>import a from &quot;@/components/a&quot;; // 1. 引入</span></span>
<span class="line"><span>export default {</span></span>
<span class="line"><span>  components: { testa: a } // 2. 注册</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre></div><h3 id="_4-2-组件通信" tabindex="-1"><a class="header-anchor" href="#_4-2-组件通信"><span><a href="#_4-2-%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1">#</a> 4.2 组件通信</span></a></h3><p>基于上述的 <code>a</code> 示例组件，讲解父子组件如何通信。</p><p>① 子组件通过 <code>props</code> 属性，来接收父组件传递的值。代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;!-- 子组件 --&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>    &lt;div&gt;这是a组件 name:{{ name }}&lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>    export default {</span></span>
<span class="line"><span>        props: { // 1. props 的 name 进行接收</span></span>
<span class="line"><span>            name: {</span></span>
<span class="line"><span>                type: String,</span></span>
<span class="line"><span>                default: &quot;&quot;</span></span>
<span class="line"><span>            },</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    };</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!-- 父组件 --&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>  &lt;div style=&quot;text-align: center; font-size: 20px&quot;&gt;</span></span>
<span class="line"><span>    测试页面</span></span>
<span class="line"><span>    &lt;testa :name=&quot;name&quot;&gt;&lt;/testa&gt; &lt;!-- 2. :name 传入 --&gt;</span></span>
<span class="line"><span>  &lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>import a from &quot;@/components/a&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default {</span></span>
<span class="line"><span>  components: { testa: a },</span></span>
<span class="line"><span>  data() {</span></span>
<span class="line"><span>    return {</span></span>
<span class="line"><span>      name: &quot;芋道&quot;</span></span>
<span class="line"><span>    };</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 子组件通过 <code>$emit</code> 方法，让父组件监听到自定义事件。代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;!-- 子组件 --&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>  &lt;div&gt;</span></span>
<span class="line"><span>    这是a组件 name:{{ name }}</span></span>
<span class="line"><span>    &lt;button @click=&quot;click&quot;&gt;发送&lt;/button&gt;</span></span>
<span class="line"><span>  &lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>export default {</span></span>
<span class="line"><span>  props: {</span></span>
<span class="line"><span>    name: {</span></span>
<span class="line"><span>      type: String,</span></span>
<span class="line"><span>      default: &quot;&quot;</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  data() {</span></span>
<span class="line"><span>    return {</span></span>
<span class="line"><span>      message: &quot;我是来自子组件的消息&quot;</span></span>
<span class="line"><span>    };</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  methods: {</span></span>
<span class="line"><span>    click() {</span></span>
<span class="line"><span>      this.$emit(&quot;ok&quot;, this.message); // 1. $emit 方法，通知 ok 事件，message 是参数</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!-- 父组件 --&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>    &lt;div style=&quot;text-align: center; font-size: 20px&quot;&gt;</span></span>
<span class="line"><span>        测试页面</span></span>
<span class="line"><span>        &lt;testa :name=&quot;name&quot; @ok=&quot;ok&quot;&gt;&lt;/testa&gt;</span></span>
<span class="line"><span>        子组件传来的值 : {{ message }}</span></span>
<span class="line"><span>    &lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>import a from &quot;@/components/a&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default {</span></span>
<span class="line"><span>    components: { testa: a },</span></span>
<span class="line"><span>    data() {</span></span>
<span class="line"><span>        return {</span></span>
<span class="line"><span>            name: &quot;芋道&quot;,</span></span>
<span class="line"><span>            message: &quot;&quot;</span></span>
<span class="line"><span>        };</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    methods: {</span></span>
<span class="line"><span>        ok(message) { // 2. 声明 ok 方法，监听 ok 自定义事件</span></span>
<span class="line"><span>            this.message = message;</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,89)]))}const o=e(l,[["render",t],["__file","components.html.vue"]]),d=JSON.parse('{"path":"/project/yudao-cloud/vue2/components.html","title":"系统组件","lang":"en-US","frontmatter":{"title":"系统组件","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":169,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 引入三方组件","slug":"_1-引入三方组件","link":"#_1-引入三方组件","children":[{"level":3,"title":"# 1.1 如何安装","slug":"_1-1-如何安装","link":"#_1-1-如何安装","children":[]},{"level":3,"title":"# 1.2 如何注册","slug":"_1-2-如何注册","link":"#_1-2-如何注册","children":[]}]},{"level":2,"title":"# 2. 系统组件","slug":"_2-系统组件","link":"#_2-系统组件","children":[{"level":3,"title":"# 2.1 基础框架组件","slug":"_2-1-基础框架组件","link":"#_2-1-基础框架组件","children":[]},{"level":3,"title":"# 2.2 树形选择组件","slug":"_2-2-树形选择组件","link":"#_2-2-树形选择组件","children":[]},{"level":3,"title":"# 2.3 表格分页组件","slug":"_2-3-表格分页组件","link":"#_2-3-表格分页组件","children":[]},{"level":3,"title":"# 2.4 工具栏右侧组件","slug":"_2-4-工具栏右侧组件","link":"#_2-4-工具栏右侧组件","children":[]},{"level":3,"title":"# 2.5 文件上传组件","slug":"_2-5-文件上传组件","link":"#_2-5-文件上传组件","children":[]},{"level":3,"title":"# 2.6 图片上传组件","slug":"_2-6-图片上传组件","link":"#_2-6-图片上传组件","children":[]},{"level":3,"title":"# 2.7 富文本编辑器","slug":"_2-7-富文本编辑器","link":"#_2-7-富文本编辑器","children":[]},{"level":3,"title":"# 2.8 表单设计组件","slug":"_2-8-表单设计组件","link":"#_2-8-表单设计组件","children":[]},{"level":3,"title":"# 2.9 工作流组件","slug":"_2-9-工作流组件","link":"#_2-9-工作流组件","children":[]},{"level":3,"title":"# 2.10 Cron 表达式组件","slug":"_2-10-cron-表达式组件","link":"#_2-10-cron-表达式组件","children":[]},{"level":3,"title":"# 2.11 内容复制组件","slug":"_2-11-内容复制组件","link":"#_2-11-内容复制组件","children":[]}]},{"level":2,"title":"# 3. 其它推荐组件","slug":"_3-其它推荐组件","link":"#_3-其它推荐组件","children":[]},{"level":2,"title":"# 4. 自定义组件","slug":"_4-自定义组件","link":"#_4-自定义组件","children":[{"level":3,"title":"# 4.1 创建使用","slug":"_4-1-创建使用","link":"#_4-1-创建使用","children":[]},{"level":3,"title":"# 4.2 组件通信","slug":"_4-2-组件通信","link":"#_4-2-组件通信","children":[]}]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":5.86,"words":1757},"filePathRelative":"project/yudao-cloud/vue2/components.md","localizedDate":"July 7, 2024"}');export{o as comp,d as data};
