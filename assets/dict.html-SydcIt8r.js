import{_ as s,o as n,c as e,a as i}from"./app-5QVbWi7Z.js";const t={};function l(p,a){return n(),e("div",null,a[0]||(a[0]=[i(`<h1 id="字典数据" tabindex="-1"><a class="header-anchor" href="#字典数据"><span>字典数据</span></a></h1><p>本小节，讲解前端如何使用 [系统管理 -&gt; 字典管理] 菜单的字典数据，例如说字典数据的下拉框、单选 / 多选按钮、高亮展示等等。</p><figure><img src="https://cloud.iocoder.cn/img/Vue3/字典数据/01.png" alt="字典管理" tabindex="0" loading="lazy"><figcaption>字典管理</figcaption></figure><h2 id="_1-全局缓存" tabindex="-1"><a class="header-anchor" href="#_1-全局缓存"><span><a href="#_1-%E5%85%A8%E5%B1%80%E7%BC%93%E5%AD%98">#</a> 1. 全局缓存</span></a></h2><p>用户登录成功后，前端会从后端获取到全量的字典数据，缓存在 store 中。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/Vue3/字典数据/02.png" alt="字典 store" tabindex="0" loading="lazy"><figcaption>字典 store</figcaption></figure><p>这样，前端在使用到字典数据时，无需重复请求后端，提升用户体验。</p><p>不过，缓存暂时未提供刷新，所以在字典数据发生变化时，需要用户刷新浏览器，进行重新加载。</p><h2 id="_2-dict-type" tabindex="-1"><a class="header-anchor" href="#_2-dict-type"><span><a href="#_2-dict-type">#</a> 2. DICT_TYPE</span></a></h2><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/utils/dict.ts#L73-L125" target="_blank" rel="noopener noreferrer"><code>dict.ts</code></a> 文件中，使用 <code>DICT_TYPE</code> 枚举了字典的 KEY。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/Vue3/字典数据/03.png" alt=" 枚举" tabindex="0" loading="lazy"><figcaption> 枚举</figcaption></figure><p>后续如果有新的字典 KEY，需要你自己进行添加。</p><h2 id="_3-dicttag-字典标签" tabindex="-1"><a class="header-anchor" href="#_3-dicttag-字典标签"><span><a href="#_3-dicttag-%E5%AD%97%E5%85%B8%E6%A0%87%E7%AD%BE">#</a> 3. DictTag 字典标签</span></a></h2><p><a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/components/DictTag/index.ts" target="_blank" rel="noopener noreferrer"><code>&lt;dict-tag /&gt;</code></a> 组件，翻译字段对应的字典展示文本，并根据 <code>colorType</code>、<code>cssClass</code> 进行高亮。使用示例如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;!--</span></span>
<span class="line"><span>    type: 字典 KEY</span></span>
<span class="line"><span>    value: 字典值</span></span>
<span class="line"><span>--&gt;</span></span>
<span class="line"><span>&lt;dict-tag :type=&quot;DICT_TYPE.SYSTEM_LOGIN_TYPE&quot; :value=&quot;row.logType&quot; /&gt;</span></span></code></pre></div><figure><img src="https://cloud.iocoder.cn/img/Vue3/字典数据/04.png" alt="DictTag" tabindex="0" loading="lazy"><figcaption>DictTag</figcaption></figure><p>【推荐】注意，一般情况下使用 CRUD schemas 方式，不需要直接使用 <code>&lt;dict-tag /&gt;</code>，而是通过 <code>columns</code> 的 <code>dictType</code> 和 <code>dictClass</code> 属性即可。如下图所示：</p><figure><img src="https://cloud.iocoder.cn/img/Vue3/字典数据/04-a.png" alt=" 的  和  属性" tabindex="0" loading="lazy"><figcaption> 的 和 属性</figcaption></figure><h2 id="_4-字典工具类" tabindex="-1"><a class="header-anchor" href="#_4-字典工具类"><span><a href="#_4-%E5%AD%97%E5%85%B8%E5%B7%A5%E5%85%B7%E7%B1%BB">#</a> 4. 字典工具类</span></a></h2><p>在 <a href="https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/utils/dict.ts#L23-L71" target="_blank" rel="noopener noreferrer"><code>dict.ts</code></a> 文件中，提供了字典工具类，方法如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>// 获取 dictType 对应的数据字典数组【object】</span></span>
<span class="line"><span>export const getDictOptions = (dictType: string) =&gt; {{ /** 省略代码 */ }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 获取 dictType 对应的数据字典数组【int】</span></span>
<span class="line"><span>export const getIntDictOptions = (dictType: string) =&gt; { /** 省略代码 */ }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 获取 dictType 对应的数据字典数组【string】</span></span>
<span class="line"><span>export const getStrDictOptions = (dictType: string) =&gt; { /** 省略代码 */ }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 获取 dictType 对应的数据字典数组【boolean】</span></span>
<span class="line"><span>export const getBoolDictOptions = (dictType: string) =&gt; { /** 省略代码 */ }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 获取 dictType 对应的数据字典数组【object】</span></span>
<span class="line"><span>export const getDictObj = (dictType: string, value: any) =&gt; { /** 省略代码 */ }</span></span></code></pre></div><p>结合 Element Plus 的表单组件，使用示例如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>  &lt;!-- radio 单选框 --&gt;</span></span>
<span class="line"><span>  &lt;el-radio</span></span>
<span class="line"><span>    v-for=&quot;dict in getIntDictOptions(DICT_TYPE.COMMON_STATUS)&quot;</span></span>
<span class="line"><span>    :key=&quot;dict.value&quot;</span></span>
<span class="line"><span>    :label=&quot;parseInt(dict.value)&quot;</span></span>
<span class="line"><span>  &gt;</span></span>
<span class="line"><span>    {{dict.label}}</span></span>
<span class="line"><span>  &lt;/el-radio&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  &lt;!-- select 下拉框 --&gt;</span></span>
<span class="line"><span>  &lt;el-select v-model=&quot;form.code&quot; placeholder=&quot;请选择渠道编码&quot; clearable&gt;</span></span>
<span class="line"><span>    &lt;el-option</span></span>
<span class="line"><span>      v-for=&quot;dict in getStrDictOptions(DICT_TYPE.SYSTEM_SMS_CHANNEL_CODE)&quot;</span></span>
<span class="line"><span>      :key=&quot;dict.value&quot;</span></span>
<span class="line"><span>      :label=&quot;dict.label&quot;</span></span>
<span class="line"><span>      :value=&quot;dict.value&quot;</span></span>
<span class="line"><span>    /&gt;</span></span>
<span class="line"><span>  &lt;/el-select&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script setup lang=&quot;tsx&quot;&gt;</span></span>
<span class="line"><span>import { DICT_TYPE, getIntDictOptions, getStrDictOptions } from &#39;@/utils/dict&#39;</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23)]))}const d=s(t,[["render",l],["__file","dict.html.vue"]]),o=JSON.parse('{"path":"/project/yudao-cloud/vue3/dict.html","title":"字典数据","lang":"en-US","frontmatter":{"title":"字典数据","tags":["project","java","spring-boot","spring-cloud"],"categories":["project"],"order":157,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"# 1. 全局缓存","slug":"_1-全局缓存","link":"#_1-全局缓存","children":[]},{"level":2,"title":"# 2. DICT_TYPE","slug":"_2-dict-type","link":"#_2-dict-type","children":[]},{"level":2,"title":"# 3. DictTag 字典标签","slug":"_3-dicttag-字典标签","link":"#_3-dicttag-字典标签","children":[]},{"level":2,"title":"# 4. 字典工具类","slug":"_4-字典工具类","link":"#_4-字典工具类","children":[]}],"git":{"createdTime":1720365235000,"updatedTime":1720365235000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":2.23,"words":669},"filePathRelative":"project/yudao-cloud/vue3/dict.md","localizedDate":"July 7, 2024"}');export{d as comp,o as data};
