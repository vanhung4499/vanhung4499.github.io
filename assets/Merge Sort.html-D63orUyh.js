import{_ as l,o as t,c as i,a as n,e as s,h as a}from"./app-B9pwkC50.js";const e={},r=n('<h1 id="sap-xep-tron" tabindex="-1"><a class="header-anchor" href="#sap-xep-tron"><span>Sắp xếp trộn</span></a></h1><h2 id="_1-y-tuong-thuat-toan-sap-xep-tron" tabindex="-1"><a class="header-anchor" href="#_1-y-tuong-thuat-toan-sap-xep-tron"><span>1. Ý tưởng thuật toán sắp xếp trộn</span></a></h2><blockquote><p><strong>Sắp xếp trộn (Merge Sort)</strong> là một thuật toán sắp xếp sử dụng phương pháp chia để trị, trước tiên chia mảng hiện tại thành hai phần bằng nhau, sau đó kết hợp hai mảng đã sắp xếp thành một mảng đã sắp xếp.</p></blockquote><h2 id="_2-cac-buoc-cua-thuat-toan-sap-xep-tron" tabindex="-1"><a class="header-anchor" href="#_2-cac-buoc-cua-thuat-toan-sap-xep-tron"><span>2. Các bước của thuật toán sắp xếp trộn</span></a></h2><p>Giả sử mảng có n phần tử, các bước của thuật toán sắp xếp trộn như sau:</p>',5),p=s("ol",null,[s("li",null,[s("strong",null,"Quá trình chia"),a(" : Đầu tiên, chia mảng hiện tại thành hai phần bằng nhau đệ quy cho đến khi độ dài của mảng con là "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(". "),s("ol",null,[s("li",null,[a("Tìm vị trí giữa "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"d")]),s("annotation",{encoding:"application/x-tex"},"mid")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"mi"),s("span",{class:"mord mathnormal"},"d")])])]),a(" của mảng và chia mảng thành hai mảng con trái "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"f"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"left\\underline{}nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(" và phải "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"right\\underline{}nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(".")]),s("li",null,[a("Đệ quy chia mảng con trái "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"f"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"left\\underline{}nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(" và mảng con phải "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"right\\underline{}nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(".")]),s("li",null,[a("Cuối cùng, mảng được chia thành "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" mảng con có độ dài bằng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(" và đã được sắp xếp.")])])]),s("li",null,[s("strong",null,"Quá trình trộn"),a(" : Bắt đầu từ các mảng con đã sắp xếp có độ dài "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(", lần lượt trộn hai mảng con để tạo ra một mảng con đã sắp xếp có độ dài "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"2")]),s("annotation",{encoding:"application/x-tex"},"2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2")])])]),a(", sau đó tiếp tục trộn cho đến khi có một mảng con đã sắp xếp có độ dài "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(". "),s("ol",null,[s("li",null,[a("Sử dụng một mảng kết quả để lưu trữ mảng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(" đã trộn.")]),s("li",null,[a("Sử dụng hai con trỏ "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"f"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"left\\underline{}i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"i")])])]),a(" và "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"right\\underline{}i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"i")])])]),a(" để chỉ đến vị trí bắt đầu của hai mảng con trái "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"f"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"left\\underline{}nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(" và phải "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"right\\underline{}nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(".")]),s("li",null,[a("So sánh các phần tử tại vị trí "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"f"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"left\\underline{}i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"i")])])]),a(" và "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("munder",{accentunder:"true"},[s("mrow"),s("mo",{stretchy:"true"},"‾")]),s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"right\\underline{}i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8944em","vertical-align":"-0.2em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord underline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0em"}},[s("span",{style:{top:"-2.84em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"underline-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2em"}},[s("span")])])])]),s("span",{class:"mord mathnormal"},"i")])])]),a(" và lưu trữ phần tử nhỏ hơn vào mảng kết quả "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(".")]),s("li",null,[a("Lặp lại bước "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a(" cho đến khi một trong hai con trỏ đến cuối mảng con tương ứng.")]),s("li",null,[a("Sao chép các phần tử còn lại của mảng con chưa đến cuối vào mảng kết quả "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(".")]),s("li",null,[a("Trả về mảng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"nums")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s")])])]),a(" đã được sắp xếp trộn.")])])])],-1),o=s("p",null,[a("Chúng ta sẽ lấy ví dụ với mảng "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mn",null,"6"),s("mo",{separator:"true"},","),s("mn",null,"5"),s("mo",{separator:"true"},","),s("mn",null,"12"),s("mo",{separator:"true"},","),s("mn",null,"10"),s("mo",{separator:"true"},","),s("mn",null,"9"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"[6, 5, 12, 10, 9, 1]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"6"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"12"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"10"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"9"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]")])])]),a(" để minh họa toàn bộ quá trình sắp xếp trộn.")],-1),m=n(`<figure><img src="https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230925120618.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="_3-cai-đat-ma-cua-sap-xep-tron" tabindex="-1"><a class="header-anchor" href="#_3-cai-đat-ma-cua-sap-xep-tron"><span>3. Cài đặt mã của sắp xếp trộn</span></a></h2><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Solution</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    # Quá trình trộn</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> merge</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;font-style:italic;--shiki-dark-font-style:italic;">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;font-style:italic;--shiki-dark-font-style:italic;">left_nums</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">], </span><span style="color:#D19A66;--shiki-dark:#D19A66;font-style:italic;--shiki-dark-font-style:italic;">right_nums</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]):</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        nums </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        left_i, right_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> left_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> len</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(left_nums) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">and</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> right_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> len</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(right_nums):</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">            # Lưu trữ phần tử nhỏ hơn vào mảng kết quả</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> left_nums[left_i] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> right_nums[right_i]:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                nums.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(left_nums[left_i])</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                left_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                nums.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(right_nums[right_i])</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                right_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        # Sao chép các phần tử còn lại của mảng con chưa đến cuối vào mảng kết quả</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> left_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> len</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(left_nums):</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            nums.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(left_nums[left_i])</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            left_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        # Sao chép các phần tử còn lại của mảng con chưa đến cuối vào mảng kết quả</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> right_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> len</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(right_nums):</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            nums.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(right_nums[right_i])</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            right_i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        # Trả về mảng đã trộn đã sắp xếp</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> nums</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">    # Quá trình chia</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> mergeSort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;font-style:italic;--shiki-dark-font-style:italic;">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;font-style:italic;--shiki-dark-font-style:italic;">nums</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]) -&gt; [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]:</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">        # Trường hợp số phần tử của mảng nhỏ hơn hoặc bằng 1, trả về mảng ban đầu</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> len</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(nums) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> nums</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        mid </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> len</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(nums) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">//</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">                        # Tìm vị trí giữa của mảng</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        left_nums </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">mergeSort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(nums[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: mid])    </span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"># Đệ quy sắp xếp mảng con trái</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        right_nums </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">mergeSort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(nums[mid:])    </span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"># Đệ quy sắp xếp mảng con phải</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">merge</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(left_nums, right_nums)    </span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;"># Trộn hai mảng con đã sắp xếp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> sortArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;font-style:italic;--shiki-dark-font-style:italic;">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;font-style:italic;--shiki-dark-font-style:italic;">nums</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]) -&gt; [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]:</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">mergeSort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(nums)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-phan-tich-thuat-toan-sap-xep-tron" tabindex="-1"><a class="header-anchor" href="#_4-phan-tich-thuat-toan-sap-xep-tron"><span>4. Phân tích thuật toán sắp xếp trộn</span></a></h2><ul><li><strong>Độ phức tạp thời gian</strong>: . Độ phức tạp thời gian của thuật toán sắp xếp trộn là tích của số lần trộn và độ phức tạp thời gian của mỗi lần trộn. Quá trình trộn <code>merge(left_nums, right_nums):</code> có độ phức tạp thời gian là , do đó, độ phức tạp thời gian của thuật toán sắp xếp trộn là .</li><li><strong>Độ phức tạp không gian</strong>: . Thuật toán sắp xếp trộn cần sử dụng một không gian phụ có kích thước bằng với kích thước của mảng đầu vào. Do đó, độ phức tạp không gian của thuật toán là .</li><li><strong>Tính ổn định của sắp xếp</strong>: Trong quá trình trộn hai mảng con đã sắp xếp, nếu có các phần tử bằng nhau, thuật toán <code>merge(left_nums, right_nums):</code> sẽ đảm bảo phần tử từ mảng con trái được sao chép trước, đảm bảo tính ổn định của thuật toán sắp xếp trộn. Do đó, thuật toán sắp xếp trộn là một thuật toán <strong>ổn định</strong>.</li></ul>`,5),c=[r,p,o,m];function h(d,u){return t(),i("div",null,c)}const k=l(e,[["render",h],["__file","Merge Sort.html.vue"]]),g=JSON.parse('{"path":"/dsa/algo/base/sorting/Merge%20Sort.html","title":"Merge Sort","lang":"en-US","frontmatter":{"tags":["dsa","algorithm"],"categories":["dsa","algorithm"],"title":"Merge Sort","date created":"2023-05-29T00:00:00.000Z","date modified":"2023-09-25T00:00:00.000Z","description":"Sắp xếp trộn 1. Ý tưởng thuật toán sắp xếp trộn Sắp xếp trộn (Merge Sort) là một thuật toán sắp xếp sử dụng phương pháp chia để trị, trước tiên chia mảng hiện tại thành hai phần...","head":[["meta",{"property":"og:url","content":"https://vanhung4499.github.io/dsa/algo/base/sorting/Merge%20Sort.html"}],["meta",{"property":"og:site_name","content":"VanHung4499"}],["meta",{"property":"og:title","content":"Merge Sort"}],["meta",{"property":"og:description","content":"Sắp xếp trộn 1. Ý tưởng thuật toán sắp xếp trộn Sắp xếp trộn (Merge Sort) là một thuật toán sắp xếp sử dụng phương pháp chia để trị, trước tiên chia mảng hiện tại thành hai phần..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230925120618.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-28T15:54:38.000Z"}],["meta",{"property":"article:author","content":"Hung Nguyen"}],["meta",{"property":"article:tag","content":"dsa"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:modified_time","content":"2024-06-28T15:54:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Merge Sort\\",\\"image\\":[\\"https://raw.githubusercontent.com/vanhung4499/images/master/snap/20230925120618.png\\"],\\"dateModified\\":\\"2024-06-28T15:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hung Nguyen\\",\\"url\\":\\"https://vanhung4499.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. Ý tưởng thuật toán sắp xếp trộn","slug":"_1-y-tuong-thuat-toan-sap-xep-tron","link":"#_1-y-tuong-thuat-toan-sap-xep-tron","children":[]},{"level":2,"title":"2. Các bước của thuật toán sắp xếp trộn","slug":"_2-cac-buoc-cua-thuat-toan-sap-xep-tron","link":"#_2-cac-buoc-cua-thuat-toan-sap-xep-tron","children":[]},{"level":2,"title":"3. Cài đặt mã của sắp xếp trộn","slug":"_3-cai-đat-ma-cua-sap-xep-tron","link":"#_3-cai-đat-ma-cua-sap-xep-tron","children":[]},{"level":2,"title":"4. Phân tích thuật toán sắp xếp trộn","slug":"_4-phan-tich-thuat-toan-sap-xep-tron","link":"#_4-phan-tich-thuat-toan-sap-xep-tron","children":[]}],"git":{"createdTime":1719590078000,"updatedTime":1719590078000,"contributors":[{"name":"Hung Nguyen Van","email":"vanhung4499@gmail.com","commits":1}]},"readingTime":{"minutes":3.55,"words":1066},"filePathRelative":"dsa/algo/base/sorting/Merge Sort.md","localizedDate":"June 28, 2024","excerpt":"\\n<h2>1. Ý tưởng thuật toán sắp xếp trộn</h2>\\n<blockquote>\\n<p><strong>Sắp xếp trộn (Merge Sort)</strong>&nbsp;là một thuật toán sắp xếp sử dụng phương pháp chia để trị, trước tiên chia mảng hiện tại thành hai phần bằng nhau, sau đó kết hợp hai mảng đã sắp xếp thành một mảng đã sắp xếp.</p>\\n</blockquote>","autoDesc":true}');export{k as comp,g as data};
